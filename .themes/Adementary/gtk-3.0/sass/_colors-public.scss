//apps rely on some named colors to be exported
/* GTK NAMED COLORS
   ----------------
   use responsibly! */

// Sass thinks we're using the colors in the variables as strings and may shoot
// warning, it's innocuous and can be defeated by using "" + $var
/*
widget text/foreground color */
@define-color theme_fg_color #{"" +$fg_color};

/*
text color for entries, views and content in general */
@define-color theme_text_color #{"" +$text_color};

/*
widget base background color */
@define-color theme_bg_color #{"" +$bg_color};

/*
text widgets and the like base background color */
@define-color theme_base_color #{"" +$base_color};

/*
base background color of selections */
@define-color theme_selected_bg_color #{"" +$accent_primary};

/*
text/foreground color of selections */
@define-color theme_selected_fg_color #{"" +$selected_fg_color};

/*
base background color of insensitive widgets */
@define-color insensitive_bg_color #{"" +$insensitive_bg_color};

/*
text foreground color of insensitive widgets */
@define-color insensitive_fg_color #{"" +$insensitive_fg_color};

/*
insensitive text widgets and the like base background color */
@define-color insensitive_base_color #{"" +$base_color};

/*
widget text/foreground color on backdrop windows */
@define-color theme_unfocused_fg_color #{"" +$backdrop_fg_color};

/*
text color for entries, views and content in general on backdrop windows */
@define-color theme_unfocused_text_color #{"" +$text_color};

/*
widget base background color on backdrop windows */
@define-color theme_unfocused_bg_color #{"" +$backdrop_bg_color};

/*
text widgets and the like base background color on backdrop windows */
@define-color theme_unfocused_base_color #{"" +$backdrop_base_color};

/*
base background color of selections on backdrop windows */
@define-color theme_unfocused_selected_bg_color #{"" +$accent_primary};

/*
text/foreground color of selections on backdrop windows */
@define-color theme_unfocused_selected_fg_color #{"" + $selected_fg_color};

/*
insensitive color on backdrop windows*/
@define-color unfocused_insensitive_color #{"" + $backdrop_insensitive_color};

/*
widgets main borders color */
@define-color borders #{"" +$borders_color};

/*
widgets main borders color on backdrop windows */
@define-color unfocused_borders #{"" +$backdrop_borders_color};

/*
these are pretty self explicative */
@define-color warning_color #{"" +$warning_color};
@define-color error_color #{"" +$error_color};
@define-color success_color #{"" +$success_color};
//@define-color destructive_color #{$destructive_color}

//WM

$_wm_highlight: if($variant=='light', $top_hilight,  // Sass gets mad if this is
                  transparentize(black,1));          // done directly in the
                                                     // color definition

// window manager buttons (legacy Metacity)
$wm_button_hover_a: if($variant == 'light', darken($bg_color, 2%), lighten($bg_color, 10%));
$wm_button_hover_b: if($variant == 'light', darken($bg_color, 2%), lighten($bg_color, 10%));

$wm_button_active: if($variant == 'light',
                      darken($bg_color, 12%),
                      darken($bg_color, 4%));

/*
these colors are exported for the window manager and shouldn't be used in applications,
read if you used those and something break with a version upgrade you're on your own... */
@define-color wm_title shade(#{$fg_color}, 1.8);
@define-color wm_unfocused_title #{$backdrop_fg_color};
@define-color wm_highlight #{"" + $_wm_highlight};
@define-color wm_borders_edge #{"" + $borders_edge};

@define-color wm_bg_a #{$wm_bg_a};
@define-color wm_bg_b #{$wm_bg_b};

@define-color wm_backdrop_bg_a #{$wm_backdrop_bg_a};
@define-color wm_backdrop_bg_b #{$wm_backdrop_bg_b};

@define-color wm_shadow alpha(black, 0.35);
@define-color wm_border alpha(black, 0.18);

@define-color wm_button_hover_color_a #{$wm_button_hover_a};
@define-color wm_button_hover_color_b #{$wm_button_hover_b};
@define-color wm_button_active_color_a #{$wm_button_active};
@define-color wm_button_active_color_b #{$wm_button_active};
@define-color wm_button_active_color_c #{$wm_button_active};

//FIXME this is really an API

@define-color content_view_bg #{"" + $base_color};


// Budgie indicator(s)
@define-color budgie_tasklist_indicator_color #{"" + if($light-panel == 'true', lighten($fg_color, 30%), darken($dark_fg_color, 30%))};
@define-color budgie_tasklist_indicator_color_active #{"" + if($light-panel == 'true', $fg_color, $accent_primary)};
@define-color budgie_tasklist_indicator_color_active_window #{"" + if($light-panel == 'true', lighten($fg_color, 30%), $accent_tertiary)};
