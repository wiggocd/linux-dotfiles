;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;
;;	    __  ___          __      __         
;;	   /  |/  /___  ____/ /_  __/ /__  _____
;;	  / /|_/ / __ \/ __  / / / / / _ \/ ___/
;;	 / /  / / /_/ / /_/ / /_/ / /  __(__  ) 
;;	/_/  /_/\____/\__,_/\__,_/_/\___/____/  
;;
;; Created By Aditya Shakya @adi1090x
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/title]
type = internal/xwindow



[module/appmenu]
type = custom/text

content-font = 2
content = ÔåÉ
content-background = ${color.shade1}
content-foreground = ${color.fg}
content-padding = 1

click-left = ~/.config/polybar/scripts/appmenu
click-right = ~/.config/polybar/scripts/sysmenu


[module/date]
type = internal/date

format-background = ${color.shade2}

; Seconds to sleep between updates
; Default: 1.0
interval = 1.0

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = " %d/%m %H:%M "

; Optional time format
time = %H:%M

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %d %B %Y
time-alt = %H:%M:%S



[module/alsa]
type = internal/alsa

format-background = ${color.shade3}

; Soundcard to be used
; Usually in the format hw:# where # is the card number
; You can find the different card numbers in `/proc/asound/cards`
master-soundcard = default
speaker-soundcard = default
headphone-soundcard = default

; Name of the master, speaker and headphone mixers
; Use the following command to list available mixer controls:
; $ amixer scontrols | sed -nr "s/.*'([[:alnum:]]+)'.*/\1/p"
; If master, speaker or headphone-soundcard isn't the default, 
; use `amixer -c # scontrols` instead where # is the number 
; of the master, speaker or headphone soundcard respectively
;
; Default: Master
master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
speaker-mixer = Speaker
; Default: none
headphone-mixer = Headphone

; NOTE: This is required if headphone_mixer is defined
; Use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; You may also need to use `amixer -c # controls` as above for the mixer names
; Default: none
headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
mapped = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5



[module/pulseaudio]
type = internal/pulseaudio

format-volume-background = ${color.shade3}
label-muted-background = ${color.shade3}

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <label-volume>

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>

; Available tokens:
;   %percentage%% (default)
;   %decibels% (unreleased)
label-volume = " %percentage% "

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
; label-muted = üîá muted
label-muted = mute
label-muted-foreground = #BBB

; Only applies if <ramp-volume> is used
ramp-volume-0 = üîà
ramp-volume-1 = üîâ
ramp-volume-2 = üîä

; Right and Middle click (unreleased)
click-right = pavucontrol &
; click-middle = 



[module/i3]
type = internal/i3

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; This will split the workspace name on ':'
; Default: false
strip-wsnumbers = true

; Sort the workspaces by index instead of the default
; sorting that groups the workspaces by output
; Default: false
index-sort = true

; Create click handler used to focus workspace
; Default: true
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = true

; Wrap around when reaching the first/last workspace
; Default: true
wrapping-scroll = false

; Set the scroll cycle direction 
; Default: true
reverse-scroll = false

; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;‚ôö will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = true

label-focused-background = ${color.shade1}
label-unfocused-background = ${color.shade1}



[module/shortcut1]
type = custom/text
content = " ÓùÖ"
content-background = ${color.shade2}
click-left = firefox &

[module/shortcut2]
type = custom/text
content = " Óûï "
content-background = ${color.shade3}
click-left = ~/scripts/terminal &




[module/lsplit1]
type = custom/text
content-background = ${color.shade2}
content-foreground = ${color.shade1}
content = "ÓÇ∞"

[module/lsplit2]
type = custom/text
content-background = ${color.shade3}
content-foreground = ${color.shade2}
content = "ÓÇ∞"

[module/lsplit3]
type = custom/text
content-background = ${color.bg}
content-foreground = ${color.shade3}
content = "ÓÇ∞"

[module/rsplit1]
type = custom/text
content-background = ${color.shade2}
content-foreground = ${color.shade1}
content = "%{T3}ÓÇ≤%{T-}"

[module/rsplit2]
type = custom/text
content-background = ${color.shade3}
content-foreground = ${color.shade2}
content = "%{T3}ÓÇ≤%{T-}"

[module/rsplit3]
type = custom/text
content-background = ${color.bg}
content-foreground = ${color.shade3}
content = "%{T3}ÓÇ≤%{T-}"




