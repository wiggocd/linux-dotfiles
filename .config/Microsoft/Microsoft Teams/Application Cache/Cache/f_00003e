webpackJsonp([10],{2591:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(2592)},2592:function(e,n,t){"use strict";var r=this&&this.__extends||function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();Object.defineProperty(n,"__esModule",{value:!0});var o=t(2593),i=t(2615),s=t(2616),a=t(2617),c=function(e){function n(n,t,r){var o=e.call(this,r)||this;return o.transportDependencyProviderService=n,o.logger=n.loggingService.newLogger("transportLazyLoadService"),o.initializeOnAppLaunchAndReinit(),o}return r(n,e),n.$inject=["transportDependencyProviderService","transportAgentService","orchestrationService"],n.prototype.getTransportCommandRouter=function(){return this.transportCommandRouter},n.prototype.getTransportConnectionHandler=function(){return this.transportConnectionHandler},n.prototype.getTransportAgentHandler=function(){return this.transportAgentHandler},n.prototype.getTransportCallKeeper=function(){return this.transportCallKeeper},n.prototype.initializeTranportConnectionHandling=function(e,n){this.transportCommandRouter=new o.TransportCommandRouter(this.transportDependencyProviderService,n,e),this.transportConnectionHandler=new i.TransportConnectionHandler(this.transportDependencyProviderService,this.transportCommandRouter),this.transportAgentHandler=new s.TransportAgentHandler(this.transportCommandRouter,this.transportConnectionHandler),this.transportCallKeeper=new a.TransportCallKeeper(this.transportDependencyProviderService)},n.prototype.cleanupOnAppTeardown=function(e){this.logger.info("clean up has been called. marking commandRouter and connectionHandler as undefined."),this.transportConnectionHandler.cleanUpConnectionHandler(),this.transportCallKeeper.cleanupCallKeeper(),this.transportCommandRouter=void 0,this.transportConnectionHandler=void 0,this.transportAgentHandler=void 0,this.transportCallKeeper=void 0},n.prototype.initializeOnAppLaunchAndReinit=function(e){},n.prototype.mtmaTelemetryIdentifier=function(){return"TransportLazyLoadService"},n}(teamspace.services.MTMABase);n.TransportLazyLoadService=c,angular.module("teamspace.transportLazyLoadService",["teamspace.transportDependencyProviderService","teamspace.transportAgentService"]).service("transportLazyLoadService",c)},2593:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,o=t(2594),i=t(2607);!function(e){e.InitState="InitState",e.ActiveIncomingCommandsCount="ActiveIncomingCommandsCount",e.ActiveOutgoingCommandsCount="ActiveOutgoingCommandsCount",e.AckFailedCountInSession="AckFailedCountInSession",e.AckSuccessCountInSession="AckSuccessCountInSession"}(r=n.TransportCommandRouterStates||(n.TransportCommandRouterStates={}));var s=function(){function e(e,n,t){this.transportDependencyProviderService=e,this.transportStack=n,this.transportUser=t,this.ComponentName="TransportCommandRouter",this.ackSuccessCount=0,this.ackFailureCount=0,this.outgoingCommandResponseTimeout=6e4,this.incomingCommandFactory=new o.IncomingCommandFactory(e),this.outgoingCommandFactory=new i.OutgoingCommandFactory(e),this.activeIncomingCommands=new Map,this.activeOutgoingCommands=new Map,this.setupInitialStates(),this.constants=e.constants,this.logger=e.loggingService.newLogger(this.ComponentName),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.onIncomingCommandReceived=function(e,n){var t,r=this;if(e&&e.command){var o=this.getScenarioNameForIncomingCommand(e.command);t=this.transportDependencyProviderService.loggingService.newScenario(o,null,null,null,!0)}else t=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.incomingCommand.invalidCommand,null,null,null,!0);if(this.validateIncomingCommand(e,n,t)){var i=e.command;if(this.logger.info("Incoming command received with name - "+i),i!==teamspace.services.IncomingCommand.Response){var s=this.incomingCommandFactory.createCommand(e,t);if(!1!==s.result)s=s,this.activeIncomingCommands.set(e.causeId,s),this.ackIncomingCommandSuccess(n),s.action().promise.then(function(n){r.sendResponse(e,n),r.logger.info("Sending response for "+e.command)}).catch(function(n){r.sendResponse(e,n,!0),r.logger.error("Error in executing command "+e.command+" - Error - "+n.errorDetails)});else{var a={errorCode:s.errorCode,errorDetails:s.message};this.ackIncomingCommandFailure(n,a)}}else{this.ackIncomingCommandSuccess(n);var c=JSON.parse(e.commandDetails);this.onResponseReceivedForOutgoingCommand(c,t)}}},e.prototype.ackIncomingCommandSuccess=function(e){var n=e({status:200,body:JSON.stringify({})}),t=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);n!==teamspace.services.ResponseSendStatusCode.Success?(t.fail({message:n}),this.logger.error("Failed to send ack for the incoming command - result: "+n)):(t.stop({message:this.constants.transportTelemetryErrorCode.transportack.ackSuccess}),this.logger.info("Ack sent for incoming command"))},e.prototype.ackIncomingCommandFailure=function(e,n){var t=e({status:300,body:n?JSON.stringify(n):JSON.stringify({})}),r=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);t!==teamspace.services.ResponseSendStatusCode.Success?(r.fail({message:t}),this.logger.error("Failed to send failure for the incoming command - result: "+t)):(r.stop({message:this.constants.transportTelemetryErrorCode.transportack.ackFailure}),this.logger.info("Failed-Ack-response sent for incoming command"))},e.prototype.validateIncomingCommand=function(e,n,t){if(!this.transportDependencyProviderService.canInitializeTransport())return this.logger.error("ECS not enabled. Received incoming command "+e.command),t.stop({message:this.constants.transportTelemetryErrorCode.incomingCommand.featureDisabled}),!1;if(!e)return this.logger.error("Invalid transport command request"),t.fail({message:this.constants.transportTelemetryErrorCode.incomingCommand.invalidCommandRequest}),!1;var r=this.transportDependencyProviderService.callingAgentsService,o=JSON.parse(e.commandDetails);if(o.targetEndpointId&&r.getRegistrationId()!==o.targetEndpointId){this.logger.error("Incoming commmand is not meant for this endpoint id. own endpointId - "+r.getRegistrationId()+", target endpointId - "+(o.targetEndpointId||""));var i={errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.incorrectEndpointId};return t.fail({message:i.errorCode,message1:"own endpointId - "+r.getRegistrationId()+", target endpointId - "+(o.targetEndpointId||"")}),this.ackIncomingCommandFailure(n,i),!1}return!0},e.prototype.cleanupIncomingCommand=function(e){var n=this.activeIncomingCommands.get(e);n&&(this.activeIncomingCommands.delete(e),n=void 0)},e.prototype.sendResponse=function(e,n,t){var r=this;void 0===t&&(t=!1);var o=t?400:200,i=e.causeId;if(this.activeIncomingCommands.get(i)){if(n){n.statusCode=o,n.requestCauseId=i;var s=this.sendOutgoingCommand(teamspace.services.OutgoingCommand.Response,n,e.endpointId);s?s.promise.then(function(e){r.logger.info("Response completed")}):this.logger.error("Response command not created")}this.cleanupIncomingCommand(i)}},e.prototype.sendOutgoingCommand=function(e,n,t){var r=this,o=this.getScenarioNameForOutgoingCommand(e),i=this.transportDependencyProviderService.loggingService.newScenario(o,null,null,null,!0);if(!this.transportDependencyProviderService.canInitializeTransport()){d={errorDetails:"FF not enabled for outgoing command "+e,errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.featureDisabled,statusCode:400,salt:[-1],requestCauseId:"-1"};return i.fail({message:d.errorCode,message1:d.errorDetails}),this.logger.error(d.errorDetails),(m=this.transportDependencyProviderService.$q.defer()).reject(d),m}var s=this.transportDependencyProviderService.isCallingRelatedCommand(e),a=this.getIBTTransportEndpoint(t,s,!1);if(a&&this.isSessionEstablishedWithEndpoint(a)||(a=this.getIBTTransportEndpoint(t,s,!0)),!a){d={errorDetails:"Outgoing Command not created for "+e+". No available endpoint to send the command to for endpontId - "+t,errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.endpointNotAvailable,statusCode:400,salt:[-1],requestCauseId:"-1"};return i.fail({message:d.errorCode,message1:d.errorDetails}),this.logger.error(d.errorDetails),(m=this.transportDependencyProviderService.$q.defer()).reject(d),m}n.targetEndpointId=a.getEndpointId();var c=this.outgoingCommandFactory.createCommand(e,n,a,i);if(!c){var d={errorDetails:"Command not created for "+e+". Not compatible or implemented",errorCode:this.constants.transportTelemetryErrorCode.outgoingCommand.invalidCommand,statusCode:400,salt:[-1],requestCauseId:"-1"};this.logger.error(d.errorDetails);var m=this.transportDependencyProviderService.$q.defer();return m.reject(d),m}return this.activeOutgoingCommands.set(c.causeId,c),this.logger.info("Command added to the active outgoing commands. "+c.causeId+". Name - "+c.name+" Size is - "+this.activeOutgoingCommands.size),c.onCommandReadyToSend.promise.then(function(t){var o=r.createBTTOutgoingCommandListener(i);c.commandResponseListener=o;var s=n?JSON.stringify(n):"";if(r.isSessionEstablishedWithEndpoint(c.endpoint)){a="[sendOutgoingCommand] command name - "+e+" with details "+s;r.logger.info(a),c.endpoint.sendCommand(c.causeId,e,s,o)}else{var a="[sendOutgoingCommand] session setup, command name - "+e+" with details "+s;r.logger.info(a),c.endpoint.setupSession(c.causeId,e,s,o)}setTimeout(function(){if(c.name!==teamspace.services.OutgoingCommand.CreateAndStartCall&&c.name!==teamspace.services.OutgoingCommand.DialNumber||!c.acknowledgementReceived){if(-1!==r.cleanupOutgoingCommand(c.causeId)){var n={errorDetails:"no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+c.acknowledgementReceived,errorCode:c.acknowledgementReceived?r.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithAck:r.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithoutAck,statusCode:400,salt:[-1],requestCauseId:c.causeId};c.onResponseReceived.reject(n),r.logger.error(n.errorDetails)}}else setTimeout(function(){if(-1!==r.cleanupOutgoingCommand(c.causeId)){var n={errorDetails:"no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+c.acknowledgementReceived,errorCode:r.constants.transportTelemetryErrorCode.outgoingCommand.timeoutWithAck,statusCode:400,salt:[-1],requestCauseId:c.causeId};c.onResponseReceived.reject(n),r.logger.error(n.errorDetails)}},2*r.outgoingCommandResponseTimeout)},r.outgoingCommandResponseTimeout)}).catch(function(e){var n={errorDetails:e,errorCode:r.constants.transportTelemetryErrorCode.outgoingCommand.operationFailed,statusCode:400,salt:[-1],requestCauseId:c.causeId};c.onResponseReceived.reject(n),r.cleanupOutgoingCommand(c.causeId)}),c.onResponseReceived},e.prototype.isSessionEstablishedWithEndpoint=function(e){return!!this.transportDependencyProviderService.getPairedAndActiveEndpoint(!1)&&!!e&&e.getEndpointState()==teamspace.services.EndpointState.Connected},e.prototype.startSession=function(e){this.logger.info("starting session with endpoint with a force discover."),this.getIBTTransportEndpoint(e,!1,!0,!0)},e.prototype.endSession=function(e){this.logger.info("ending session with endpoint without a force discover.");var n=this.getIBTTransportEndpoint(e,!1,!1);n&&(n.setSessionEstablished(!1),this.ackFailureCount=0,this.ackSuccessCount=0)},e.prototype.getStates=function(){return this.states.set(r.ActiveOutgoingCommandsCount,this.activeOutgoingCommands.size),this.states.set(r.ActiveIncomingCommandsCount,this.activeIncomingCommands.size),this.states.set(r.AckFailedCountInSession,this.ackFailureCount),this.states.set(r.AckSuccessCountInSession,this.ackSuccessCount),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(r.InitState,teamspace.services.ITransportComponentState.Uninitialized)},e.prototype.onResponseReceivedForOutgoingCommand=function(e,n){if(!e.requestCauseId)return this.logger.error("Request cause id not found with the response"),void n.fail({message:this.constants.transportTelemetryErrorCode.outgoingCommand.response.nullRequestId});var t=this.activeOutgoingCommands.get(e.requestCauseId);if(!t)return this.logger.error("No outgoing command found with the requestCauseId or response not required"),void n.fail({message:this.constants.transportTelemetryErrorCode.outgoingCommand.response.noOutgoingCommand});n.stop({message:e.statusCode}),200!==e.statusCode?(this.logger.error("response is not OK for command name - "+t.name+", status code- "+e.statusCode+" and error details - "+e.errorDetails),t.onResponseReceived.reject(e)):(this.logger.info("response resolved for outgoing command name - "+t.name),t.onResponseReceived.resolve(e)),this.cleanupOutgoingCommand(e.requestCauseId)},e.prototype.cleanupOutgoingCommand=function(e){var n=this.activeOutgoingCommands.get(e);if(n){n.commandResponseListener&&n.commandResponseListener.dispose(),this.logger.info("Command with causeid - "+e+" cleaned up. Name - "+n.name+" Size is - "+this.activeOutgoingCommands.size);var t=n.startTime;if(this.activeOutgoingCommands.delete(e),n=void 0,t)return(new Date).getTime()-t.getTime()}return-1},e.prototype.createBTTOutgoingCommandListener=function(e){var n=this,t=this.transportStack.createOutgoingCommandResponse();return t.on("request-succeeded",function(e){var t=e.causeId,r=e.responseBody;n.ackSuccessCount++,n.logger.info("Received transport response for "+t+".");var o=n.activeOutgoingCommands.get(t);if(o){o.acknowledgementReceived=!0;var i=r?JSON.parse(r):void 0;if(o.commandDetails.companionResponseRequired)n.logger.info("Command acknowledged by companion device,command name - "+o.name+", requires response from device");else{o.onResponseReceived.resolve(i);var s=n.cleanupOutgoingCommand(t);n.logger.info("Outgoing command does not need response,command name - "+o.name+" time taken is "+s)}}else n.logger.error("No valid outgoing command in request-succeeded. causeId - "+(e.causeId?e.causeId:"causeID not present"))}),t.on("request-failed",function(t){var r=t.causeId,o=t.errorCode,i=t.errorDetails;n.ackFailureCount++,n.logger.info("Received transport response. errorCode - "+o);var s=n.activeOutgoingCommands.get(r);if(s){if(!s.isRetry){var a=s.startTime,c=0;a&&(c=(new Date).getTime()-a.getTime());var d="received error response for outgoing command name - "+s.name+", causeId "+r+", errorCode - "+o+", time taken is "+c;n.logger.error(d);var m=JSON.stringify(s.commandDetails);s.isRetry=!0;var l=s.endpoint.getEndpointId(),p=n.getIBTTransportEndpoint(l,n.transportDependencyProviderService.isCallingRelatedCommand(s.name),!0);s.endpoint=p;var v=n.transportDependencyProviderService.utilityService.generateUUID();return s.causeId=v,n.activeOutgoingCommands.delete(r),n.activeOutgoingCommands.set(v,s),s.commandResponseListener&&s.commandResponseListener.dispose(),s.commandResponseListener=n.createBTTOutgoingCommandListener(e),n.logger.error("First attempt for command failed. Retry-ing command "+s.name+", causeId "+r+" with new causeid "+v),void p.setupSession(s.causeId,s.name,m,s.commandResponseListener)}s.acknowledgementReceived=!0;var g=i?JSON.parse(i):"";(i=g.phrase||""+g.subCode||"")||(i="errorCode is "+o);var u={requestCauseId:r,statusCode:o,errorDetails:i,errorCode:o.toString(),salt:[-1]};s.onResponseReceived.reject(u);var h="Failed on second attempt. causeId "+r+", errorDetails - "+i+", errorCode - "+o+", time taken is "+n.cleanupOutgoingCommand(r);n.logger.error(h),e.fail({message:o,message1:h})}else n.logger.error("No valid outgoing command in request-failed. causeId - "+(t.causeId?t.causeId:"causeID not present"))}),t},e.prototype.getIBTTransportEndpoint=function(e,n,t,r){if(void 0===t&&(t=!1),void 0===r&&(r=!1),!e){if(this.logger.info("endpoint id is not given, trying to get it from pairedAndActive Endpoint"),!(i=this.transportDependencyProviderService.getPairedAndActiveEndpoint(n)))return this.logger.error("There is no active paired device to send the command."),null;e=i.endPointId}this.logger.info("trying to get endpoint from transport user for endpointid - "+e);var o;if(t){o=this.transportUser.discover().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using discover(). "+!!o);var i=this.transportDependencyProviderService.getPairedAndActiveEndpoint(n);o&&(i&&i.endPointId==e||r)&&o.setSessionEstablished(!0)}else o=this.transportUser.getEndpoints().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using getEndpoints(). "+!!o);return o},e.prototype.getScenarioNameForIncomingCommand=function(e){switch(e){case teamspace.services.IncomingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.response;case teamspace.services.IncomingCommand.Broadcast:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.broadcast;case teamspace.services.IncomingCommand.Pair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.pair;case teamspace.services.IncomingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unpair;case teamspace.services.IncomingCommand.Autopair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.autoPair;case teamspace.services.IncomingCommand.Locked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingLock;case teamspace.services.IncomingCommand.Unlocked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingUnlock;case teamspace.services.IncomingCommand.ReplyOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.replyFromDesktop;case teamspace.services.IncomingCommand.OpenFileOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openFile;case teamspace.services.IncomingCommand.UpdateEndpoint:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.updateEndpoint;case teamspace.services.IncomingCommand.OpenShare:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openShare;case teamspace.services.IncomingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startcall;case teamspace.services.IncomingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.endcall;case teamspace.services.IncomingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.mute;case teamspace.services.IncomingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unmute;case teamspace.services.IncomingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startvideo;case teamspace.services.IncomingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopvideo;case teamspace.services.IncomingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startaudio;case teamspace.services.IncomingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopaudio;case teamspace.services.IncomingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.holdcall;case teamspace.services.IncomingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unholdcall;case teamspace.services.IncomingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.invalidCommand}},e.prototype.getScenarioNameForOutgoingCommand=function(e){switch(e){case teamspace.services.OutgoingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.response;case teamspace.services.OutgoingCommand.KeepAlive:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.keepAlive;case teamspace.services.OutgoingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unpair;case teamspace.services.OutgoingCommand.Lock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingLock;case teamspace.services.OutgoingCommand.Unlock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingUnlock;case teamspace.services.OutgoingCommand.JoinCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.joincall;case teamspace.services.OutgoingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startcall;case teamspace.services.OutgoingCommand.CreateAndStartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.createandstartcall;case teamspace.services.OutgoingCommand.DialNumber:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.dialNumber;case teamspace.services.OutgoingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.endcall;case teamspace.services.OutgoingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.mute;case teamspace.services.OutgoingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unmute;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.holdcall;case teamspace.services.OutgoingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unholdcall;case teamspace.services.OutgoingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.invalidCommand}},e}();n.TransportCommandRouter=s},2594:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(2595),o=t(2596),i=t(2597),s=t(2598),a=t(2599),c=t(2600),d=t(2601),m=t(2602),l=t(2603),p=t(2604),v=t(2605),g=t(2606),u=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("IncomingCommandFactory")}return e.prototype.createCommand=function(e,n){var t=e.command.toLowerCase(),u=JSON.parse(e.commandDetails),h=e.endpointId,C=this.shouldCreateCommand(t,u,h,n);if(!C.result)return C;switch(t){case teamspace.services.IncomingCommand.Broadcast:return new r.BroadcastCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Pair:return new o.PairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Unpair:return new i.UnpairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Autopair:return new s.AutopairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Locked:return new a.LockedCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Unlocked:return new c.UnlockedCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.ReplyOnDesktop:return new d.ReplyFromDesktopCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.OpenFileOnDesktop:return new m.OpenFileCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.UpdateEndpoint:return new l.UpdateEndpointCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.OpenShare:return new p.OpenShareCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.StartCall:return new v.StartCallCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.EndCall:return new v.EndCallCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.StartAudio:case teamspace.services.IncomingCommand.StopAudio:case teamspace.services.IncomingCommand.Mute:case teamspace.services.IncomingCommand.Unmute:case teamspace.services.IncomingCommand.StartVideo:case teamspace.services.IncomingCommand.StopVideo:case teamspace.services.IncomingCommand.HoldCall:case teamspace.services.IncomingCommand.UnholdCall:return new v.BaseCallToggleStateCommand(u,this.transportDependencyProviderService,t,n);case teamspace.services.IncomingCommand.ReportProblem:return new g.ReportProblemIncomingCommand(u,this.transportDependencyProviderService,n);default:return n.fail({message:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand,message1:t}),{result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidCommand}}},e.prototype.shouldCreateCommand=function(e,n,t,r){var o=this.transportDependencyProviderService.getTransportConnectionHandler().getAllPairedDevices();if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.ReportProblem||!!o&&o.find(function(e){return e.endPointId===t}))){a={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired};return this.logger.error(a.errorCode),r.fail({message:a.errorCode}),a}if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.ReportProblem||this.transportDependencyProviderService.getTransportConnectionHandler().verifySalt(n))){a={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.invalidSalt};return this.logger.error(a.errorCode),r.fail({message:a.errorCode}),a}var i=!!this.transportDependencyProviderService.getPairedAndActiveEndpoint(!1);if(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.Locked||e===teamspace.services.IncomingCommand.Unlocked||e===teamspace.services.IncomingCommand.UpdateEndpoint||e===teamspace.services.IncomingCommand.ReportProblem||i||this.transportDependencyProviderService.isCallingRelatedCommand(e)){var s=this.meetingsAllowed(e,n);return s.result||r.fail({message:s.errorCode,message1:s.message}),s}var a={result:!1,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pairedButNotConnected},c="Cannot execute command with name - "+e;return this.logger.error(c),r.fail({message:a.errorCode,message1:c}),a},e.prototype.meetingsAllowed=function(e,n){var t,r=this.transportDependencyProviderService.isCallingRelatedCommand(e),o=n;return e===teamspace.services.IncomingCommand.StartCall&&this.transportDependencyProviderService.appStateService.machineState==teamspace.services.MachineState.MachineLocked?(this.logger.error("start call command received, but machine is in locked state - ignore command"),t={result:!1,message:"Incoming StartCall ignored. Machine locked",errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.machinestateislocked}):(r?o.conversationId||o.pstnMri?t=this.transportDependencyProviderService.isConnectedToTransportEndpointForConversation({conversationId:o.conversationId,pstnMri:o.pstnMri}):(t={result:!1,message:"conversationId is null, command name - "+e,errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty},this.logger.error("errorCode - "+t.errorCode+", errorDetails - "+t.message)):t={result:!0,message:""},t)},e}();n.IncomingCommandFactory=u},2595:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,r){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.resources,i=n.$translate;this.responseDeferred=t.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler();return s.checkProximity(this.endpointId).promise.then(function(n){if(n){var t=window.desktopEnvironment&&window.desktopEnvironment.hostname?window.desktopEnvironment.hostname:i.instant(o.strings.meeting_unknown_status_text),a=r({deviceName:t},s.getResponseDetails());e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(a)}else{a=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.broadcast.notInProximity},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:a.errorCode}),e.responseDeferred.reject(a)}}).catch(function(n){var t=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.broadcast.errorInCheckingProximity,errorDetails:n},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.responseDeferred.reject(t)}),this.responseDeferred},e}();n.BroadcastCommand=o},2596:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,r){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.$translate,i=n.resources,s=n.dialogService;this.responseDeferred=t.defer();var a=this.transportDependencyProviderService.getTransportConnectionHandler(),c=t.defer();return a.verifySalt(this.commandDetails)?c.resolve(!0):c=a.checkProximity(this.endpointId),c.promise.then(function(n){if(n){var t="REJECTED_BY_USER",c={okButtonText:o.instant(i.strings.better_together_pair_button),closeButtonText:o.instant(i.strings.better_together_cancel_button),confirmMessageTitle:o.instant(i.strings.better_together_pair_title),confirmMessageHtmlBody:o.instant(i.strings.better_together_pair_message,{deviceName:e.commandDetails.deviceName}),callback:function(){t="ACCEPTED_BY_USER",e.onUserResponse(t)},preCloseCallback:function(n){"ACCEPTED_BY_USER"!=n&&("REJECTED_BY_TIMEOUT"==n?e.onUserResponse(n):e.onUserResponse("REJECTED_BY_USER"))}},d=s.open(e.transportDependencyProviderService.constants.dialogs.confirmDialog,c);setTimeout(function(){d.close("REJECTED_BY_TIMEOUT")},5e4)}else{var m=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pair.notInProximity},a.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:m.errorCode}),e.responseDeferred.reject(m)}}).catch(function(n){var t=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.pair.errorInCheckingProximity,errorDetails:n},a.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.responseDeferred.reject(t)}),this.responseDeferred},e.prototype.onUserResponse=function(e,n){var t=this.transportDependencyProviderService.getTransportConnectionHandler(),o=r({accepted:"ACCEPTED_BY_USER"==e},t.getResponseDetails());if("ACCEPTED_BY_USER"==e){var i={endPointId:this.endpointId,deviceName:this.commandDetails.deviceName,connectionStatus:teamspace.services.PairedConnectionStatus.Connected,clientType:this.commandDetails.clientType||"",clientVersion:this.commandDetails.clientVersion||""};this.incomingCommandReceivedScenario.stop({message1:"clientType - "+i.clientType+", endpointId - "+i.endPointId+", clientVersion - "+i.clientVersion}),t.onNewDevicePaired(i),this.responseDeferred.resolve(o)}else o.accepted=!1,o.errorCode=e,this.incomingCommandReceivedScenario.stop({message:o.errorCode}),this.responseDeferred.reject(o)},e}();n.PairCommand=o},2597:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onDeviceUnpaired(this.endPointId)?(this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(t)):(t.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({message:t.errorCode}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UnpairCommand=r},2598:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,r){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService.$q;this.responseDeferred=n.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler();return t.checkProximity(this.endpointId).promise.then(function(n){if(n){var o=t.reconnect(e.endpointId,!1);if(o.result)e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(t.getResponseDetails());else{i=r({errorCode:o.errorCode},t.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:o.errorCode}),e.responseDeferred.reject(i)}}else{var i=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.autoPair.notInProximity},t.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:i.errorCode}),e.responseDeferred.reject(i)}}).catch(function(n){var o=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.autoPair.errorInCheckingProximity,errorDetails:n},t.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:o.errorCode,message1:o.errorDetails}),e.responseDeferred.reject(o)}),this.responseDeferred},e}();n.AutopairCommand=o},2599:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,r){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onDeviceLocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({message:(this.commandDetails.reason||"")+" "+!!this.transportDependencyProviderService.getPairedAndActiveEndpoint(!1)}),this.responseDeferred.resolve(t)):(t=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired},t),this.incomingCommandReceivedScenario.fail({message:t.errorCode}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.LockedCommand=o},2600:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onDeviceUnlocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({message1:this.commandDetails.reason||""}),this.responseDeferred.resolve(t)):(t.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:this.commandDetails.reason||""}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UnlockedCommand=r},2601:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.callingNavigationService,o=n.channelService,i=n.multiWindowService;this.responseDeferred=t.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();if(this.commandDetails.conversationId){var a=o.getChannelByObjectId(this.commandDetails.conversationId);i.enabled&&!a?i.openWindow(new teamspace.services.ChatChildWindowParams(this.commandDetails.conversationId),"ReplyFromDesktopCommand").then(function(n){e.incomingCommandReceivedScenario.stop({message:"multi_window"}),e.responseDeferred.resolve(s)}).catch(function(n){s.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.multiwindowError,s.errorDetails="error in opening new window with details - "+n,e.incomingCommandReceivedScenario.fail({message:s.errorCode,message1:s.errorDetails}),e.responseDeferred.reject(s)}):("0"==this.commandDetails.rootMessageId.toString()?r.navigateToConversation(this.commandDetails.conversationId):r.navigateToConversation(this.commandDetails.conversationId,this.commandDetails.rootMessageId.toString())).then(function(n){e.incomingCommandReceivedScenario.stop({message:"angular_window"}),e.responseDeferred.resolve(s)}).catch(function(n){s.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.windowError,s.errorDetails="error in navigating to conversation with details - "+n,e.incomingCommandReceivedScenario.fail({message:s.errorCode,message1:s.errorDetails}),e.responseDeferred.reject(s)})}else s.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.replyFromDesktop.conversationIdIsEmpty,this.incomingCommandReceivedScenario.stop({message:s.errorCode}),this.responseDeferred.reject(s);return this.responseDeferred},e}();n.ReplyFromDesktopCommand=r},2602:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.deepLinkService;this.responseDeferred=t.defer();var o=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();return this.commandDetails.objectUrl&&this.commandDetails.fileId?r.resolveFileDeepLink(this.commandDetails).then(function(){e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(o)}).catch(function(n){o.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openFile.deeplinkServiceError,e.incomingCommandReceivedScenario.fail({message:o.errorCode}),e.transportDependencyProviderService.loggingService.error(o.errorCode+", error - "+n),e.responseDeferred.reject(o)}):(o.errorDetails="ObjectUrl is empty - "+!this.commandDetails.objectUrl+" or fileId is empty - "+!this.commandDetails.fileId,o.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openFile.urlIsEmpty,this.incomingCommandReceivedScenario.fail({message:o.errorCode,message1:o.errorDetails}),this.responseDeferred.reject(o)),this.responseDeferred},e}();n.OpenFileCommand=r},2603:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onUpdateEndpoint(this.commandDetails.previousEndpointId,this.endPointId)?(this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(t)):(t.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired,this.incomingCommandReceivedScenario.fail({message:t.errorCode}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UpdateEndpointCommand=r},2604:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this.transportDependencyProviderService,n=e.$rootScope,t=e.$q,r=e.eventingService;this.responseDeferred=t.defer();var o={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl},i=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();if(this.commandDetails.conversationId)if(this.transportDependencyProviderService.getTransportCallKeeper().isCallActiveOnTransport(o)){var s=this.transportDependencyProviderService.callingService.getCallByCallId(this.commandDetails.callId);if(!s)return i.errorDetails="No call found for callId = "+this.commandDetails.callId,i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.openShare.callNotFound,this.incomingCommandReceivedScenario.fail({message:i.errorCode,message1:i.errorDetails}),this.responseDeferred.reject(i),this.responseDeferred;r.$emit(this.transportDependencyProviderService.constants.events.calling.openSharingPanel),n.$emit(this.transportDependencyProviderService.constants.events.betterTogether.callingScreenStatusChanged,{__typename:"CallingScreenStatusChanged",teamsCallId:s.teamsCallId,callingScreenStatusData:{isShareTrayVisible:!0,timeStamp:Date.now()}}),this.responseDeferred.resolve(i),this.incomingCommandReceivedScenario.stop()}else i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent,this.responseDeferred.reject(i),this.incomingCommandReceivedScenario.fail({message:i.errorCode});else i.errorDetails="conversation id is not present, conversationId - "+this.commandDetails.conversationId+", messageId - "+this.commandDetails.messageId,i.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,this.incomingCommandReceivedScenario.fail({message:i.errorCode,message1:i.errorDetails}),this.responseDeferred.reject(i);return this.responseDeferred},e}();n.OpenShareCommand=r},2605:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){l=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+l.errorCode+", errorDetails - "+l.errorDetails),this.incomingCommandReceivedScenario.fail({message:l.errorCode,message1:l.errorDetails}),this.responseDeferred.reject(l),this.responseDeferred}var i={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl},s=this.transportDependencyProviderService.getTransportCallKeeper(),a=this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(i),c=o.getAllCalls(),d=c&&c.length>0?c.filter(function(e){return s.isCallEqualTransportCall(e,i)}):[];if(d&&d.length>0){var m=d[0];o.leaveCall(m,"EndCallCommand").then(function(){e.transportDependencyProviderService.loggingService.info("End call succeeded"),e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())}).catch(function(n){var t=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed,errorDetails:"Endcall failed with error "+n},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.transportDependencyProviderService.loggingService.error("errorCode - "+t.errorCode+", errorDetails - "+t.errorDetails),e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.responseDeferred.reject(t)})}else if(a&&(this.commandDetails.pstnMri||this.transportDependencyProviderService.$injector.get("conversationsService").getCallingConversation(this.commandDetails.conversationId).isChat()))this.transportDependencyProviderService.loggingService.info("End call succeeded for P2P call"),this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());else{var l=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent,errorDetails:"callId - "+(i.callId||"")+", conversationId -  "+(i.conversationId||"")+", messageId - "+(i.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.transportDependencyProviderService.loggingService.error("errorCode - "+l.errorCode+", errorDetails - "+l.errorDetails),this.incomingCommandReceivedScenario.fail({message:l.errorCode}),this.responseDeferred.reject(l)}return this.responseDeferred},e}();n.EndCallCommand=o;var i=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t,this.logger=n.loggingService.newLogger("TransportCallingIncomingCommand")}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){d=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+d.errorCode+", errorDetails - "+d.errorDetails),this.incomingCommandReceivedScenario.fail({message:d.errorCode,message1:d.errorDetails}),this.responseDeferred.reject(d),this.responseDeferred}var i={isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},s={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl,callState:i},a=this.transportDependencyProviderService.getTransportCallKeeper();if(a.isCallActiveOnTransport(s)){var c=a.getTransportCallWithDetails(s),d=r({callId:c.callId,conversationId:c.conversationId,messageId:c.messageId,pstnMri:c.pstnMri,isBroadcast:!1,startCallOptions:{isMicMuted:c.callState.isMicMuted,isSpeakerMuted:c.callState.isSpeakerMuted,withVideo:c.callState.isVideoOn}},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.logger.info("StartCallCommand CallId: "+this.commandDetails.callId+" is ActiveOnTransport mode"),this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(d)}else a.ringingCallResolved(s).then(function(){var n=o.getActiveCall();if(n&&a.isCallEqualTransportCall(n,s))e.logger.info("StartCallCommand  CallId: "+e.commandDetails.callId+" upgrade existing call to BT mode"),s.callState.isMicMuted=n.isMuted,s.callState.isSpeakerMuted=n.isSpeakerMuted,s.callState.isVideoOn=n.isVideoOn,s.callState.isCallOnHold=!1,e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(s),n.stopVideo(n.getTag()).then(function(){return n.muteSpeaker()}).then(function(){return n.mute()}).then(function(){n.initForTransportCompanion(),n.setupSlimCorePropsToTransportState();var t=r({callId:n.callId,conversationId:n.conversationId,messageId:n.messageId,pstnMri:s.pstnMri,isBroadcast:!1,startCallOptions:{isMicMuted:n.isMuted,isSpeakerMuted:n.isSpeakerMuted,withVideo:n.isVideoOn}},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.resolve(t)}).catch(function(n){var t=r({errorDetails:"Error changing call settings to BTmode "+JSON.stringify(n),errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.logger.error(t.errorDetails),e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.responseDeferred.reject(t)});else{e.logger.info("StartCallCommand CallId: "+e.commandDetails.callId+" not active. Start new call"),e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(s);var i=void 0;if(e.commandDetails.conversationId){var c={conversationId:e.commandDetails.conversationId,startCallScenarioPromise:t.resolve(null),secondaryScenarios:[],withVideo:e.commandDetails.startCallOptions.withVideo,muted:e.commandDetails.startCallOptions.isMicMuted,callId:e.commandDetails.callId};i=o.startCall(c)}else{var d=e.commandDetails.pstnMri?e.commandDetails.pstnMri.replace(SkypeX.Services.ChatServiceUtils.PstnPrefix,""):void 0;i=e.transportDependencyProviderService.dialingService.startPstnCall(d,null,t.resolve(null),[],void 0,void 0,e.commandDetails.startCallOptions.isMicMuted,void 0,e.commandDetails.callId)}i.then(function(n){e.logger.info("Start call succeeded"),e.incomingCommandReceivedScenario.stop({message:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent}),e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())}).catch(function(n){var t=r({errorDetails:"Start call failed with error "+JSON.stringify(n),errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.logger.error(t.errorDetails),e.responseDeferred.reject(t)})}});return this.responseDeferred},e}();n.StartCallCommand=i;var s=function(){function e(e,n,t,r){this.commandDetails=e,this.transportDependencyProviderService=n,this.commandName=t,this.incomingCommandReceivedScenario=r}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId&&!this.commandDetails.pstnMri){l=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.conversationIdIsEmpty,errorDetails:"callId - "+(this.commandDetails.callId||"")+", conversationId -  "+(this.commandDetails.conversationId||"")+", messageId - "+(this.commandDetails.messageId||"")},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());return this.transportDependencyProviderService.loggingService.error("errorCode - "+l.errorCode+", errorDetails - "+l.errorDetails),this.incomingCommandReceivedScenario.fail({message:l.errorCode,message1:l.errorDetails}),this.responseDeferred.reject(l),this.responseDeferred}var i,s={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:this.commandDetails.conversationUrl},a=this.transportDependencyProviderService.getTransportCallKeeper(),c=o.getAllCalls(!1,!1,!1),d=c?c.filter(function(e){return a.isCallEqualTransportCall(e,s)}):void 0;if(d&&d.length>0){var m=d[0];i=this.transportDependencyProviderService.getCallToggleDefer(this.commandName,m,s),this.commandName==teamspace.services.IncomingCommand.UnholdCall&&this.commandDetails.startCallOptions&&i.then(function(){e.transportDependencyProviderService.syncCallState(e.commandDetails.startCallOptions,m,s)})}else{var l=r({errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.callNotPresent},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.transportDependencyProviderService.loggingService.error("errorCode - "+l.errorCode),this.incomingCommandReceivedScenario.fail({message:l.errorCode}),this.responseDeferred.reject(l)}return i&&i.then(function(){e.incomingCommandReceivedScenario.stop(),e.transportDependencyProviderService.$timeout(function(){return e.responseDeferred.resolve(e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails())},0)}).catch(function(n){var t=r({errorCode:e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.calling.operationFailed,errorDetails:"Endcall failed with error "+JSON.stringify(n)},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.transportDependencyProviderService.loggingService.error("errorCode - "+t.errorCode+", errorDetails - "+t.errorDetails),e.incomingCommandReceivedScenario.fail({message:t.errorCode,message1:t.errorDetails}),e.responseDeferred.reject(t)}),this.responseDeferred},e}();n.BaseCallToggleStateCommand=s},2606:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,r=n.constants,o=n.settingsService,i=this.transportDependencyProviderService.getTransportConnectionHandler(),s=this.transportDependencyProviderService.getBrbV2FeedbackService(),a=t.defer(),c=i.getResponseDetails();return o.valueAsBoolean(r.settings.names.enableBetterTogetherReportProblemSynching)?s?(s.extendFeedbackReport(this.commandDetails.brbContainerId,{category:"Better Together",title:"Addition of logfiles by laptop for Better Together problem report",description:"Addition of logfiles for endpointId "+this.commandDetails.targetEndpointId},!0).then(function(){e.incomingCommandReceivedScenario.stop(),a.resolve(c)}).catch(function(n){c.errorCode=e.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.reportProblem.operationFailed,c.errorDetails=n,e.transportDependencyProviderService.loggingService.error("errorCode - "+c.errorCode+", errorDetails - "+c.errorDetails),e.incomingCommandReceivedScenario.fail({message:c.errorCode,message1:c.errorDetails}),a.reject(c)}),a):(c.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.reportProblem.serviceNotLoaded,a.reject(c),this.incomingCommandReceivedScenario.fail({message:c.errorCode}),a):(c.errorCode=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.incomingCommand.featureDisabled,this.incomingCommandReceivedScenario.fail({message:c.errorCode}),a.reject(c),a)},e}();n.ReportProblemIncomingCommand=r},2607:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(2608),o=t(2609),i=t(2610),s=t(2611),a=t(2612),c=t(2613),d=t(2614),m=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("OutgoingCommandFactory")}return e.prototype.generateCauseId=function(){return this.transportDependencyProviderService.utilityService.generateUUID()},e.prototype.createCommand=function(e,n,t,m){var l;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)&&e!=teamspace.services.OutgoingCommand.Lock)return this.logger.error("Machine is in locked state. Outgoing command with name - "+e+" will not be created."),m.fail({message:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.desktopIsLocked,message1:e}),null;e=e.toLowerCase();var p=this.generateCauseId();switch(e){case teamspace.services.OutgoingCommand.Response:l=new r.ResponseCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.KeepAlive:l=new o.KeepAliveCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Lock:l=new i.LockCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Unlock:l=new s.UnlockCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Unpair:l=new a.UnpairCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.JoinCall:case teamspace.services.OutgoingCommand.StartCall:l=new c.StartCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.CreateAndStartCall:case teamspace.services.OutgoingCommand.DialNumber:l=new c.CreateAndStartCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.EndCall:l=new c.EndCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Mute:case teamspace.services.OutgoingCommand.Unmute:case teamspace.services.OutgoingCommand.StartAudio:case teamspace.services.OutgoingCommand.StopAudio:case teamspace.services.OutgoingCommand.StartVideo:case teamspace.services.OutgoingCommand.StopVideo:case teamspace.services.OutgoingCommand.HoldCall:case teamspace.services.OutgoingCommand.UnholdCall:l=new c.BaseCallCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.ReportProblem:l=new d.ReportProblemOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;default:return m.fail({message:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.invalidCommand,message1:e}),null}return l.name=e,l.startTime=new Date,l.isRetry=!1,l.acknowledgementReceived=!1,l},e}();n.OutgoingCommandFactory=m},2608:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var i=r.$q;this.onResponseReceived=i.defer(),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0);var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.ResponseCommand=r},2609:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0;var i=r.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=i.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;if(e){if(n="Error response: "+e.errorDetails,"NotPaired"===(t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint)&&this.transportDependencyProviderService.settingsService.valueAsBoolean(this.transportDependencyProviderService.constants.settings.names.enableBetterTogetherRemoveOutofSyncPairing)){var r=this.endpoint.getEndpointId();this.transportDependencyProviderService.loggingService.error("Remove the device from the list of paired devices, endpointId - "+r),this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnpaired(r)}}else n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse;this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.KeepAliveCommand=r},2610:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceLocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device locked"),this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.LockCommand=r},2611:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnlocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device unlocked"),this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.UnlockCommand=r},2612:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var i=r.$q;this.onResponseReceived=i.defer();var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.UnpairCommand=r},2613:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({message1:"Completed command "+this.name+" for call id "+this.commandDetails.callId});else{var n=void 0,t=void 0;e?(n=this.name+" command failed for call id "+this.commandDetails.callId+", Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.BaseCallCommand=r;var o=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i),this.logger=r.loggingService.newLogger("TransportStartCallOutgoingCommand")}return e.prototype.onCommandExecuted=function(e){var n=this;if(e&&!e.errorDetails){var t={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},r={callId:this.commandDetails.callId,conversationId:e.conversationId,messageId:e.messageId,pstnMri:this.commandDetails.pstnMri,conversationUrl:e.conversationUrl,callState:t};this.commandDetails.isP2PCall||this.commandDetails.accepted?this.transportDependencyProviderService.getTransportCallKeeper().ringingCallResolved(r).then(function(){n.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(r);var o;if(n.commandDetails.pstnMri){var i=n.commandDetails.pstnMri.replace(SkypeX.Services.ChatServiceUtils.PstnPrefix,"");o=n.transportDependencyProviderService.dialingService.startPstnCall(i,null,n.transportDependencyProviderService.$q.resolve(null),[],void 0,void 0,t.isMicMuted,void 0,n.commandDetails.callId)}else{var s={conversationId:e.conversationId,startCallScenarioPromise:n.transportDependencyProviderService.$q.resolve(null),secondaryScenarios:[],withVideo:t.isVideoOn,muted:t.isSpeakerMuted,callId:n.commandDetails.callId};o=n.transportDependencyProviderService.callingService.startCall(s)}o.then(function(e){n.logger.info("StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" is successful"),n.sendOutgoingCommandScenario.stop({message:n.commandDetails.pstnMri?"PSTN_CALL":"P2P_CALL",message1:"StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" is successful"})}).catch(function(e){n.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(r),n.logger.info("StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" failed with error - "+e),n.sendOutgoingCommandScenario.fail({message:(n.commandDetails.pstnMri?"PSTN_CALL":"P2P_CALL")+"_"+n.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailed,message1:"StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" failed with error - "+e})})}):(this.logger.info("StartCallCommand for other calls CallId: "+this.commandDetails.callId+". Start new call"),this.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(r),this.sendOutgoingCommandScenario.stop({message:"MEETING",message1:"Other Calls with callid started on companion device "+this.commandDetails.callId}))}else{var o=void 0,i=void 0;e?(o="Error response: "+e.errorDetails,i=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(o="",i=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),i=this.commandDetails.isP2PCall?this.commandDetails.pstnMri?"PSTN_CALL_"+i:"P2P_CALL_"+i:"MEETING_"+i,this.sendOutgoingCommandScenario.fail({message:i,message1:o}),this.logger.error("errorCode - "+i+", errorDetails - "+o)}},e}();n.StartCallOutgoingCommand=o;var i=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i),this.logger=r.loggingService.newLogger("TransportCreateAndStartCallOutgoingCommand");var s={isMicMuted:t.startCallOptions.isMicMuted,isVideoOn:t.startCallOptions.withVideo,isSpeakerMuted:t.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.activeCall={callId:t.callId,conversationId:t.conversationId,messageId:t.messageId,pstnMri:t.pstnMri,conversationUrl:t.conversationUrl,callState:s},r.getTransportCallKeeper().addActiveCall(this.activeCall)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)if(e.callFailureReason)this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall),this.logger.error("call failed on transport companion device callid "+this.commandDetails.callId+" with reason "+e.callFailureReason),this.sendOutgoingCommandScenario.stop({message:e.callFailureReason,message1:"call failed on transport companion device callid "+this.commandDetails.callId});else{var n={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(this.activeCall,n),this.logger.info("Call with callid started on companion device "+this.commandDetails.callId),this.sendOutgoingCommandScenario.stop({message1:"Call with callid started on companion device "+this.commandDetails.callId})}else{this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall);var t=void 0,r=void 0;e?(t="Error response: "+e.errorDetails,r=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(t="",r=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:r,message1:t}),this.logger.error("errorCode - "+r+", errorDetails - "+t)}},e}();n.CreateAndStartCallOutgoingCommand=i;var s=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=r.$q.defer(),this.onCommandReadyToSend=r.$q.defer(),this.onCommandReadyToSend.resolve(!0);var i=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(i).catch(i)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({message1:"Call with callid stopped on companion device "+this.commandDetails.callId});else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.EndCallOutgoingCommand=s},2614:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,t,r,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=r,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var i=r.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=i.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=i.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.loggingService.info("Outgoing report problem command for brbContainerId "+this.commandDetails.brbContainerId+" successful for endpoint: "+this.endpoint.getEndpointId()+"."),this.sendOutgoingCommandScenario.stop();else{var n=void 0,t=void 0;e?(n="Error response: "+e.errorDetails,t=e.errorCode?e.errorCode:this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.operationFailedOnRemoteEndpoint):(n="",t=this.transportDependencyProviderService.constants.transportTelemetryErrorCode.outgoingCommand.nullResponse),this.sendOutgoingCommandScenario.fail({message:t,message1:n}),this.transportDependencyProviderService.loggingService.error("errorCode - "+t+", errorDetails - "+n)}},e}();n.ReportProblemOutgoingCommand=r},2615:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)},o=this&&this.__rest||function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var o=0,r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]]);return t};Object.defineProperty(n,"__esModule",{value:!0});var i;!function(e){e.InitState="InitState",e.IsScanRunning="IsScanRunning",e.LastKeepAliveSentForSession="LastKeepAliveSentForSession",e.IsSendingKeepAlives="IsSendingKeepAlives",e.HasConnectedDevices="HasConnectedDevices",e.HasPairedDevices="HasPairedDevices",e.PairedDeviceCount="PairedDeviceCount",e.IsContinousScanRunning="IsContinousScanRunning"}(i=n.TransportConnectionHandlerStates||(n.TransportConnectionHandlerStates={}));var s=function(){function e(e,n){this.transportDependencyProviderService=e,this.transportCommandRouter=n,this.keepAliveInterval=3e4,this.deviceNotFoundThreshold=15e3,this.continousScanInterval=18e3,this.currentSalt=0,this.ComponentName="TransportConnectionHandler",this.disableProximityScan=!1,this.keepAliveTimer=void 0,this.logger=e.loggingService.newLogger(this.ComponentName),this.constants=e.constants,this.storageService=e.storageService,this.bluetoothLEService=e.bluetoothLEService,this.logger.info("connectionHandler object successfully created, initialization is still pending.")}return e.prototype.initializeConnectionHandler=function(){var n=this;this.logger.info("initializing states and Ipc listeners, and rehydrating previous connection.");var t=void 0,r=this.transportDependencyProviderService.loggingService.newScenario(this.transportDependencyProviderService.constants.scenarios.betterTogether.connectionHandler.userPreferenceStoreInitialized,null,null,null,!0);this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)&&(r.stop(),t=this.transportDependencyProviderService.myUserPreferencesStore.getUserPreferences().pairedTransportCompanionDevices),t||(r.fail(),(t=this.storageService.get(e.BTPairedDevicesKey))?this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)&&this.updateStoredPairedDevices(t):t=[]),t&&t.forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.pairedDevices=t,this.setupInitialStates(),this.setupIpcForMachineState(),this.ipcRenderer?(this.ipcRenderer.once(this.constants.events.desktopApp.getLockState,function(e,t){n.logger.info("state of machine is "+t),t===n.constants.desktopApp.lockState.unlocked&&(n.logger.info("machine is in unlocked state."),n.rehydratePreviousConnection(!1,"TransportConnectionHandler is initialized"))}),this.ipcRenderer.send(this.constants.events.desktopApp.getLockState)):this.logger.error("ipcRenderer is not available"),this.disableProximityScan=this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.disableBetterTogetherProximityScan),this.states.set(i.InitState,teamspace.services.ITransportComponentState.Initialized),this.logger.info("connectionHandler successfully initialized")},e.prototype.updateStoredPairedDevices=function(n){if(n){var t=n.map(function(e){e.connectionStatus;return o(e,["connectionStatus"])});this.transportDependencyProviderService.settingsService.valueAsBoolean(this.constants.settings.names.enableUserPreferenceStoreForBetterTogether)&&this.transportDependencyProviderService.myUserPreferencesStore.setUserPreference(SkypeX.Services.MyUserPreferenceStorageKey.PairedTransportCompanionDevices,JSON.stringify(t)),this.storageService.set(e.BTPairedDevicesKey,t)}},e.prototype.onNewDevicePaired=function(n){this.logger.info("Caching new device paired");var t;this.pairedDevices&&(t=this.pairedDevices.filter(function(e){return e.endPointId!==n.endPointId})),this.pairedDevices=t?t.concat(n):[n],this.updateStoredPairedDevices(this.pairedDevices),this.storageService.set(e.LastPairedDeviceEndpointKey,n.endPointId),this.storageService.set(this.constants.storageNames.transportCompanionSelected,!0),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0),this.setupKeepAlive(n.endPointId)},e.prototype.onDeviceUnpaired=function(n){if(this.pairedDevices){var t=this.pairedDevices.find(function(e){return e.endPointId===n});if(t)return t.connectionStatus===teamspace.services.PairedConnectionStatus.Connected&&(this.disconnect(!0,!1,"device unpaired",!0),this.storageService.set(e.LastPairedDeviceEndpointKey,""),this.storageService.set(e.LastSaltUpdateTimeKey,"0")),this.pairedDevices=this.pairedDevices.filter(function(e){return e.endPointId!==n}),this.updateStoredPairedDevices(this.pairedDevices),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0),this.logger.info("Device unpaired"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found");return!1},e.prototype.unpairDevice=function(e){var n=this.getAllPairedDevices();if(n&&n.find(function(n){return n.endPointId===e})){var t=this.getCommandDetails();this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unpair,t,e),this.onDeviceUnpaired(e)}},e.prototype.onDeviceLocked=function(n){if(!n)return this.logger.error("Cannot mark device as locked, endpointid is null"),!1;if(this.pairedDevices){var t=this.pairedDevices.find(function(e){return e.endPointId===n});if(t)return t.connectionStatus=teamspace.services.PairedConnectionStatus.Locked,this.storageService.set(e.LastPairedDeviceEndpointKey,t.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!1),this.logger.info("Paired device status set to: locked"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found");return!1},e.prototype.onDeviceUnlocked=function(n){if(!n)return this.logger.error("Cannot mark device as unlocked, endpointid is null"),!1;if(this.pairedDevices){var t=this.pairedDevices.find(function(e){return e.endPointId===n});if(t)return t.connectionStatus=teamspace.services.PairedConnectionStatus.Connected,this.storageService.set(e.LastPairedDeviceEndpointKey,t.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(!1),this.logger.info("Paired device status set to: unlocked and connected"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("Device unlocked but no paired devices found");return!1},e.prototype.onUpdateEndpoint=function(e,n){if(this.pairedDevices){var t=this.pairedDevices.find(function(n){return n.endPointId===e});if(t)return t.endPointId=n,this.updateStoredPairedDevices(this.pairedDevices),this.transportCommandRouter.endSession(e),this.transportCommandRouter.startSession(n),this.logger.info("endpoint id updated successfully. previousEndpointId - "+e+", newEndpointId - "+n),!0;this.logger.error("Device not found in list of pairedDevices. previousEndpointId - "+e+", newEndpointId - "+n)}else this.logger.error("No paired devices found. previousEndpointId - "+e+", newEndpointId - "+n);return!1},e.prototype.getConnectedDevice=function(){var e=this.getAllPairedDevices();if(e)return e.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected})},e.prototype.continousCheckProximity=function(e){var n=this;void 0===e&&(e=!1),this.continousCheckProximityInterval?this.logger.error("A continous check for proximity is already running, isReconnectCallback is - "+e):(this.continousCheckProximityDeferred=this.checkProximity(),e?this.continousCheckProximityDeferred.promise.then(this.reconnectCallback):this.continousCheckProximityDeferred.promise.catch(function(){n.logger.info("checkProximity failed, dont have a reconnectCallback function")}),this.continousCheckProximityInterval=setInterval(function(){n.continousCheckProximityDeferred=n.checkProximity(),e?n.continousCheckProximityDeferred.promise.then(n.reconnectCallback):n.continousCheckProximityDeferred.promise.catch(function(){n.logger.info("checkProximity failed, dont have a reconnectCallback function"),n.transportDependencyProviderService.setPairedDeviceInDeviceManager(!0)})},this.continousScanInterval))},e.prototype.checkProximity=function(e){var n=this;this.logger.info("Attempting Proximity check");var t=this.transportDependencyProviderService.$q,r=t.defer(),o=this.bluetoothLEService;return this.transportDependencyProviderService.canInitializeTransport()?this.disableProximityScan?(r.resolve(!0),r):(teamspace.services.QCancelable.toCancelablePromise(t,o.onceInitialized()).then(function(){if(!o.isBLEsupported||!o.isBluetoothRadioOn){var t="Bluetooth scan was not started. BLE might not be supported";return n.logger.error(t),r.reject(t),r}n.logger.info("Scan started for better together companion devices."),n.states.set(i.IsScanRunning,!0);var s,a=setTimeout(function(){o.unsubscribe(s),n.logger.log("Unsubscribed for blehandle "+s+" due to timeout."),r.resolve(!1),n.logger.error("Timeout reached. Device not found. Scan stopped"),n.states.set(i.IsScanRunning,!1)},n.deviceNotFoundThreshold);s=o.subscribe(function(t,o){n.onCompanionDevicesFound(o,r,s,a,e)},n.constants.events.bluetoothLE.adjacent,n.constants.events.bluetoothLE.companionDiscovery)}).catch(function(e){e="Bluetooth scan was not started. BLE might not be supported due to error - "+e.toString(),n.logger.error(e),r.reject(e),n.states.set(i.IsScanRunning,!1)}),r):(r.reject("transportation can not be initialised"),r)},e.prototype.verifySalt=function(e){return e.salt[0]===this.currentSalt||!!e.salt[1]&&e.salt[1]===this.currentSalt||this.disableProximityScan},e.prototype.getCommandDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getResponseDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getStates=function(){var e=this.getAllPairedDevices(),n=this.getConnectedDevice();return this.states.set(i.HasConnectedDevices,!!n),this.states.set(i.HasPairedDevices,e&&e.length>0),this.states.set(i.PairedDeviceCount,e?e.length:0),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(i.InitState,teamspace.services.ITransportComponentState.Uninitialized),this.states.set(i.IsScanRunning,!1),this.states.set(i.LastKeepAliveSentForSession,""),this.states.set(i.IsSendingKeepAlives,!1)},e.prototype.getAllPairedDevices=function(){return this.pairedDevices},e.prototype.rehydratePreviousConnection=function(n,t){var o=this,i=this.getAllPairedDevices();if(i&&i.length>0){this.logger.info("Rehydrating transport connection"),this.setAllPairedDevicesAsDisconnected(!1);var s=this.storageService.get(e.LastSaltUpdateTimeKey);if((s=(new Date).getTime()-s)<6e4&&n){var a=this.storageService.get(e.LastPairedDeviceEndpointKey);this.logger.info("sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+t);var c=r({reason:"sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+t},this.getCommandDetails()),d=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,c,a);if(!d){var m="unlock command not created for quick unlock strategy, trying with long unlock strategy, reason - "+t;this.logger.error(m),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,m),this.continousCheckProximity(!0)}d.promise.then(function(){o.logger.info("Unlock succeeded with quick unlock strategy"),o.reconnect(a,!1)}).catch(function(e){var n="unlock command failed due to error - "+JSON.stringify(e)+" in quick unlock strategy, reason - "+t;o.logger.error(n),o.reconnectCallback=o.findProximalDeviceAndReconnect.bind(o,n),o.continousCheckProximity(!0)})}else{var l="salt is not updated, trying to unlock by long unlock strategy, reason - "+t;this.logger.info(l),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,l),this.continousCheckProximity(!0)}}},e.prototype.onCompanionDevicesFound=function(e,n,t,r,o){var s=this;if(e){var a=e.data,c=this.transportDependencyProviderService,d=c.authenticationService,m=c.utilityService;d.getUserInformation().then(function(e){var c=m.packetGUID2String(a),d=!1,l=s.getAllPairedDevices();if(o){v=m.convertGUIDString2Uint8Array(o);a[19]===v[15]&&a[20]===v[14]&&(d=!0)}else if(l&&l.length>0)for(var p=0;p<l.length;p++){var v=m.convertGUIDString2Uint8Array(l[p].endPointId);if(a[19]===v[15]&&a[20]===v[14]){d=!0;break}}e.profile.oid===c&&d&&(s.logger.info("Better together companion device found and bleHandle is "+t+". Unsubscribing now"),s.bluetoothLEService.unsubscribe(t),s.updateSalt(a),clearTimeout(r),s.states.set(i.IsScanRunning,!1),n.resolve(!0))}).catch(function(e){s.logger.error("device with incorrect authentication sent payload"+e)})}},e.prototype.findProximalDeviceAndReconnect=function(e,n){var t=this;if(n&&!this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)){this.logger.info("Paired device in proximity. Will attempt keep alive to all paired devices");var r=this.getAllPairedDevices();r&&0!==r.length&&r.forEach(function(n){t.logger.info("Sending keep alive to get status from "+n.endPointId);var r=t.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,t.getCommandDetails(),n.endPointId);r&&r.promise.then(function(r){t.logger.info("Keep alive successful from "+n.endPointId),t.reconnect(n.endPointId,!0,"keepAlive successful, reason - "+e),t.states.set(i.LastKeepAliveSentForSession,new Date)})})}},e.prototype.reconnect=function(e,n,t){var o=this;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked))return this.logger.info("machine is in locked state, cancelling reconnect."),{result:!1,errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.desktopIsLocked};if(this.logger.info("Reconnecting to endpoint "+e),!this.getAllPairedDevices().find(function(n){return n.endPointId===e}))return{result:!1,errorCode:this.constants.transportTelemetryErrorCode.incomingCommand.deviceNotPaired};var i=this.transportDependencyProviderService.$q.defer();if(n){var s=r({reason:"trying to send a unlock command from reconnect function, reason - "+t},this.getCommandDetails());i=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,s,e)}else i.resolve();return i.promise.then(function(){o.onDeviceUnlocked(e),o.transportCommandRouter.startSession(e),o.setupKeepAlive(e),o.cleanUpContinousProximityScan()}),{result:!0}},e.prototype.disconnect=function(n,t,o,s){var a=this;this.logger.info("Disconnecting from paired device.");var c=this.getAllPairedDevices(),d=c?c.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected}):void 0;if(d){if(clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.keepAliveDeferred&&this.keepAliveDeferred.reject(e.KeepAliveCancelled),this.states.set(i.IsSendingKeepAlives,!1),n)this.transportCommandRouter.endSession(d.endPointId);else{var m=r({reason:"sending lock command from disconnect function, reason - "+o},this.getCommandDetails());this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Lock,m).promise.finally(function(){a.transportCommandRouter.endSession(d.endPointId)})}d.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected,this.storageService.set(e.LastPairedDeviceEndpointKey,d.endPointId),this.setAllPairedDevicesAsDisconnected(s),t&&this.keepScanOn()}},e.prototype.setAllPairedDevicesAsDisconnected=function(e){this.getAllPairedDevices().forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(e)},e.prototype.onProximityLost=function(){this.logger.error("Proximity lost. Stopping keep alive and starting continous scan for autopair"),this.disconnect(!1,!1,"On proximity lost.",!0),this.rehydratePreviousConnection(!1,"On proximity lost")},e.prototype.setupKeepAlive=function(n){var t=this;this.keepAliveTimer||(this.logger.info("Setting up keep alive"),this.states.set(i.IsSendingKeepAlives,!0),this.keepAliveTimer=setInterval(function(){t.sendKeepAlive(n).promise.catch(function(r){t.logger.error("keep alive failed for 1st time - error "+r),r!==e.KeepAliveCancelled&&t.onKeepAliveCheckFailed(n)})},this.keepAliveInterval))},e.prototype.onKeepAliveCheckFailed=function(n){var t=this;clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.sendKeepAlive(n).promise.then(function(){t.setupKeepAlive(n)}).catch(function(n){n!==e.KeepAliveCancelled&&(t.logger.error("Proximity lost, KeepAlive failed 2 times."),t.onProximityLost())})},e.prototype.sendKeepAlive=function(e){var n=this,t=this.transportDependencyProviderService.$q;return this.keepAliveDeferred=t.defer(),this.logger.info("checking proximity when trying to send keepAlive command"),this.checkProximity(e).promise.then(function(t){if(t){var r=n.getCommandDetails(),o=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,r,e);n.states.set(i.LastKeepAliveSentForSession,new Date),o.promise.then(function(){n.keepAliveDeferred.resolve("keepAlive successfull")}).catch(function(e){n.logger.error("keepAlive command failed, because of error - "+JSON.stringify(e)),n.keepAliveDeferred.reject("keepAlive command failed, because of error - "+JSON.stringify(e))})}else n.keepAliveDeferred.reject("checkProximity failed, device not in proximity")}).catch(function(e){n.keepAliveDeferred.reject("sending keepAlive failed with error - "+e)}),this.keepAliveDeferred},e.prototype.updateSalt=function(n){if(n.length>18){var t=n[18]<<8|n[17];if(this.currentSalt!==t){this.logger.info("Salt updated. previous salt - "+this.currentSalt+", new salt - "+t),this.currentSalt=t;var r=new Date;this.storageService.set(e.LastSaltUpdateTimeKey,r.getTime())}}},e.prototype.keepScanOn=function(){this.logger.log("Starting continous scan for keeping scan on for quick unlock strategy"),this.continousCheckProximity()},e.prototype.setupIpcForMachineState=function(){var e=this;this.ipcRenderer=window.electronSafeIpc,this.isConsecutiveLock=!1,this.ipcRenderer&&this.transportDependencyProviderService.canInitializeTransport()?(this.ipcEventHandler=function(n,t){t!==e.constants.events.desktopApp.machineLock||e.isConsecutiveLock?t===e.constants.events.desktopApp.machineUnlock&&(e.isConsecutiveLock=!1,e.logger.info("Got machine unlocked event"),e.cleanUpContinousProximityScan(),e.rehydratePreviousConnection(!0,"Got machine unlocked event")):(e.isConsecutiveLock=!0,e.logger.info("Got machine locked event"),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0,"Got machine locked event",!1))},this.ipcEventHandler=this.ipcEventHandler.bind(this),this.ipcRenderer.on(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.ipcRenderer.on(this.constants.desktopApp.powerMonitor.suspend,function(){!e.isConsecutiveLock&&e.transportDependencyProviderService.settingsService.valueAsBoolean(e.constants.settings.names.enableBetterTogetherLockonAppSuspend)&&(e.isConsecutiveLock=!0,e.logger.info("Got machine suspended event"),e.transportDependencyProviderService.loggingService.newScenario(e.transportDependencyProviderService.constants.scenarios.betterTogether.connectionHandler.machineSuspend,null,null,null,!0).stop(),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0,"Got machine suspended event",!1))})):this.logger.error("ipcRenderer is not defined.")},e.prototype.cleanUpConnectionHandler=function(){this.logger.info("clean up of connectionHandler has been called. disconnecting the current device and removing all listeners to ipcRenderer"),this.disconnect(!1,!1,"cleanup of connectionHandler has been called.",!0),this.cleanUpContinousProximityScan(),this.ipcRenderer.removeListener(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.transportCommandRouter=void 0},e.prototype.cleanUpContinousProximityScan=function(){var e="cleaning up continousProximityScan related promise and bleHandle.";this.logger.info(e),clearInterval(this.continousCheckProximityInterval),this.continousCheckProximityDeferred&&this.continousCheckProximityDeferred.reject(e),this.continousCheckProximityInterval=void 0},e.BTPairedDevicesKey="BTPairedDevices",e.KeepAliveCancelled="keepAlive deferred cancelled in disconnect function.",e.LastSaltUpdateTimeKey="LastSaltUpdateTime",e.LastPairedDeviceEndpointKey="LastPairedDeviceEndpoint",e}();n.TransportConnectionHandler=s},2616:function(e,n,t){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n){this.transportCommandRouter=e,this.transportConnectionHandler=n}return e.prototype.sendReportProblemId=function(e){var n=this,t=r({brbContainerId:e},this.transportConnectionHandler.getCommandDetails());this.transportConnectionHandler.getAllPairedDevices().map(function(e){n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.ReportProblem,t,e.endPointId)})},e}();n.TransportAgentHandler=o},2617:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r;!function(e){e.InitState="InitState",e.ActiveCallDetails="ActiveCallDetails"}(r||(r={}));var o=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("TransportCallkeeper"),this.activeCompanionDeviceCalls=[],this.isActiveCompannionDeviceCallsDeferred=void 0,this.activeRingingCalls=[],this.states=new Map,this.logger.info("TransportCallkeeper initialized."),this.states.set(r.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.ringingCallResolved=function(e){var n=this,t=this.activeRingingCalls.find(function(t){return n.areTransportCallsEqual(t.transportCall,e)});if(t)return t.defer.promise;var r=this.transportDependencyProviderService.$q.defer();return r.resolve(),r.promise},e.prototype.activeCallResolved=function(){var e=this.transportDependencyProviderService.$q.defer(),n=this.activeCompanionDeviceCalls?this.activeCompanionDeviceCalls.filter(function(e){return 1!=e.disableCallTransfer}):void 0;return this.isActiveCompannionDeviceCallsDeferred?e.reject():n&&n.length>0?this.isActiveCompannionDeviceCallsDeferred=e:e.resolve(),e},e.prototype.addRingingCall=function(e){var n={callId:e.callId,conversationId:e.conversationId,messageId:e.messageId},t=e.callQueueInfo&&e.callQueueInfo.onBehalfOf?e.callQueueInfo.onBehalfOf.id:e.callerMri;SkypeX.Services.ChatServiceUtils.isPstnMri(t)&&(n.pstnMri=t);var r={transportCall:n,defer:this.transportDependencyProviderService.$q.defer()};this.activeRingingCalls.push(r),this.logger.info("Added ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeRingingCallFromNotification=function(e){var n=this,t=this.activeRingingCalls.find(function(t){return n.areTransportCallsEqual(t.transportCall,e)});t&&!t.transportCall.intentId&&(t.defer.resolve(),this.activeRingingCalls=this.activeRingingCalls.filter(function(t){return!n.areTransportCallsEqual(t.transportCall,e)}),this.logger.info("Removed ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId))},e.prototype.removeRingingCallByIntentId=function(e){var n=this.activeRingingCalls.find(function(n){return!!e&&n.transportCall.intentId==e});n&&(n.defer.resolve(),this.activeRingingCalls=this.activeRingingCalls.filter(function(n){return!(e&&n.transportCall.intentId==e)}),this.logger.info("Removed ringing transport  call with intentId "+e))},e.prototype.addIntentIdToRingingCall=function(e){var n=this,t=this.activeRingingCalls.find(function(t){return n.areTransportCallsEqual(t.transportCall,e)});t&&(t.transportCall.intentId=e.intentId,this.logger.info("Added intentId to ringing transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId+" and intentId "+e.intentId))},e.prototype.addActiveCall=function(e){this.activeCompanionDeviceCalls.push(e),this.logger.info("Added active call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeActiveCall=function(e){var n=this,t=this.isCallActiveOnTransport(e);return this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(t){return!n.areTransportCallsEqual(t,e)}),this.logger.info("Removed call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId),0==this.activeCompanionDeviceCalls.filter(function(e){return 1!=e.disableCallTransfer}).length&&this.isActiveCompannionDeviceCallsDeferred&&(this.isActiveCompannionDeviceCallsDeferred.resolve(),this.isActiveCompannionDeviceCallsDeferred=void 0),t},e.prototype.updateCall=function(e,n){var t=this;this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(n){return!t.areTransportCallsEqual(n,e)}),this.activeCompanionDeviceCalls.push(n);var r=this.activeRingingCalls.find(function(n){return t.areTransportCallsEqual(n.transportCall,e)});r&&(r.transportCall=n)},e.prototype.isCallActiveOnTransport=function(e){var n=this;return-1!==this.activeCompanionDeviceCalls.findIndex(function(t){return n.areTransportCallsEqual(t,e)})},e.prototype.getTransportCallWithDetails=function(e){var n=this;return this.activeCompanionDeviceCalls.find(function(t){return n.areTransportCallsEqual(t,e)})},e.prototype.getCallStateForCall=function(e){var n=this.getTransportCallWithDetails(e);return n?n.callState:void 0},e.prototype.setCallStateForCall=function(e,n){var t=this;this.activeCompanionDeviceCalls.find(function(n){return t.areTransportCallsEqual(n,e)}).callState=n,this.logger.info("Updated call state for the transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.disableCallTransfer=function(){this.activeCompanionDeviceCalls.forEach(function(e){e.disableCallTransfer=!0}),this.isActiveCompannionDeviceCallsDeferred&&(this.isActiveCompannionDeviceCallsDeferred.resolve(),this.isActiveCompannionDeviceCallsDeferred=void 0),this.logger.info("disable IncallDevice Settings for all transport calls - "+JSON.stringify(this.activeCompanionDeviceCalls))},e.prototype.enableCallTransfer=function(){this.activeCompanionDeviceCalls.forEach(function(e){e.disableCallTransfer=!1}),this.logger.info("enabled IncallDevice Settings for activeCompanionDeviceCalls")},e.prototype.areTransportCallsEqual=function(e,n){return e.callId==n.callId},e.prototype.isCallEqualTransportCall=function(e,n){var t=e.callId==n.callId||n.conversationId==e.conversationId&&(!n.messageId||"0"==n.messageId||n.messageId==e.messageId);if(!t&&this.transportDependencyProviderService.$injector.get("conversationsService")){var r=e.getCallingConversation();r.isOneToOnePstn()&&(t=r.members.find(function(e){return SkypeX.Services.ChatServiceUtils.isPstnMri(e.id)}).id==n.pstnMri&&!!n.pstnMri)}return t},e.prototype.cleanupCallKeeper=function(){this.activeCompanionDeviceCalls=[],this.states=void 0},e.prototype.getStates=function(){return this.states.set(r.ActiveCallDetails,JSON.stringify(this.activeCompanionDeviceCalls)),this.states},e}();n.TransportCallKeeper=o}},[2591]);