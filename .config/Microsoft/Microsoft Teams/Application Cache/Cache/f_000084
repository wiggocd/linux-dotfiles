"use strict";var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),__spreadArrays=this&&this.__spreadArrays||function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;for(var n=Array(e),a=0,t=0;t<i;t++)for(var o=arguments[t],s=0,r=o.length;s<r;s++,a++)n[a]=o[s];return n},teamspace;!function(e){!function(t){var i,n=skype.calling.EventEmitter;!function(e){e[e.HoldCall=0]="HoldCall",e[e.TransferCall=1]="TransferCall",e[e.ConsultThenTransferCall=2]="ConsultThenTransferCall",e[e.DtmfKeypad=3]="DtmfKeypad"}(i||(i={}));var a=function(e){function i(i,n){var a=e.call(this)||this;return a.ipc=i,a.frameSink=n,a.emitHandler=function(e,t){for(var i=[],n=2;n<arguments.length;n++)i[n-2]=arguments[n];return a.emit.apply(a,__spreadArrays([t],i))},t.MTMAIpcUtility.onWithTenantScope(i,"callMonitor:videoRenderer:emit",a.emitHandler),a}return __extends(i,e),i.prototype.dispose=function(){this.ipc.removeListener("callMonitor:videoRenderer:emit",this.emitHandler)},i.prototype.getFrameSink=function(){return this.frameSink},i.prototype.getRendererType=function(){return 4},i.prototype.getVideoSize=function(){},i.prototype.setScalingMode=function(e){return this.ipc.send("callMonitor:videoRenderer:invoke","setScalingMode",e),Promise.resolve()},i}(n),o=function(n){function o(e,t,i,a,o,s,r,c,l,h,d,g,p,u,v,S,f,m,y,C,b,T,w,k,I,A,M,_,N,D,E){var P=n.call(this)||this;return P.$window=e,P.$translate=t,P.$templateCache=i,P.callingAgentsService=a,P.callingService=o,P.callingSupportService=s,P.callingNavigationService=r,P.constants=c,P.conversationsService=l,P.loggingService=h,P.resources=d,P.callTitleService=g,P.peopleService=p,P.eventingService=u,P.$rootScope=v,P.deviceManagerService=S,P.callTogglingService=f,P.appConfig=m,P.settingsService=y,P.callingAlertsService=C,P.callLobbyService=b,P.callingDurationService=T,P.utilityService=w,P.desktopUtilityService=k,P.authenticationService=I,P.videoSupportService=A,P.callingQualityFeedbackService=_,P.callingIntentMultiWindowService=N,P.callingMultiWindowService=D,P.platformDetectService=E,P.isShownInExternalWindow=!1,P.isCallScreenVisible=void 0,P.isCurrentlyScreenSharing=!1,P.showNewCriticalUfdDesign=!1,P.showCallQualityIndicator=!1,P.callingFooterAlert=null,P.callingCriticalAlert=null,P.callsChanged=0,P.callStateChangedSubscriptions={},P.alwaysVisibleAlertNames=["SomeoneWaitingInLobby"],P.setHiContrast=function(e,t){P.isHighContrast="contrast"===t,P.monitoredCall&&P.sendUpdate(P.monitoredCall)},P.ipc=e.electronSafeIpc,M.registerForMtma(P),P.logger=h.newLogger("CallMonitor.Desktop"),P.initializeOnAppLaunchAndReinit(),P}return __extends(o,n),o.$inject=["$window","$translate","$templateCache","callingAgentsService","callingService","callingSupportService","callingNavigationService","constants","conversationsService","loggingService","resources","callTitleService","peopleService","eventingService","$rootScope","deviceManagerService","callTogglingService","appConfig","settingsService","callingAlertsService","callLobbyService","callingDurationService","utilityService","desktopUtilityService","authenticationService","videoSupportService","orchestrationService","callingQualityFeedbackService","callingIntentMultiWindowService","callingMultiWindowService","platformDetectService"],o.prototype.initializeOnAppLaunchAndReinit=function(e){var i=this;t.MTMAIpcUtility.onWithTenantScope(this.ipc,"callMonitor:callScreen:event",this.onCallMonitorEvent.bind(this)),this.useMeetingPolicyInScreenSharingFromChat=this.settingsService.valueAsBoolean(this.constants.settings.names.useMeetingPolicyInScreenSharingFromChat),this.adminSettings=this.callingService.getAdminSettings(),this.advancedSettings=this.callingService.getAdvancedCallSettings(),this.areTogglingIncomingVideoFlagsEnabled=this.advancedSettings.isTogglingIncomingVideoEnabled,this.isHighContrast=this.settingsService.getActiveTheme()===this.constants.themes.highContrast,this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.layout.themeChanged,this.setHiContrast),this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.calling.callRetriedOrCancelled,function(e,t){return i.removeCallStateChangedSubscription(t)}),t.MTMASubscriptionUtility.subscribe(this.callingService,function(e,t){return i.onNetworkReconnect(t.teamsCallId)},this.constants.events.calling.networkReconnect),this.deviceManagerService.whenInitialized().then(function(){i.deviceManagerSubscription=t.MTMASubscriptionUtility.subscribe(i.deviceManagerService,function(){return i.onDeviceChange()},i.constants.events.calling.devicesChanged),i.onDeviceChange()}),this.areTogglingIncomingVideoFlagsEnabled&&(this.incomingVideoSubscription=t.MTMASubscriptionUtility.subscribe(this.callTogglingService,function(){return i.onIncomingVideoValueChanged()},t.CallTogglingService.isIncomingVideoChanged)),this.defaultTitle=this.$translate.instant(this.resources.strings.calling_meetup_default_title),this.defaultWindowTitle=this.$translate.instant(this.resources.strings.calling_multitasking_dialog_title_call),this.qualityIndicatorTooltipText=this.$translate.instant(this.resources.strings.calling_qualityIndicatorTooltip),this.minimizeTooltipText=this.$translate.instant(this.resources.strings.desktopapp_minimize_button_text),this.alertCloseTooltipText=this.$translate.instant(this.resources.strings.modal_dialog_close_button),this.muteParticipantEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.enableRemoteMuteParticipant),this.showCallMonitorOnMinimize=this.settingsService.valueAsBoolean(this.constants.settings.names.enableCallMonitorOnMinimize),this.escalateScreensharingCallEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.enableSharingOnlyCallEscalation),this.canMinimizeExternalCallMonitor=this.settingsService.valueAsBoolean(this.constants.settings.names.enableMinimizeCallMonitor),this.disableVideoForVDI=this.desktopUtilityService.isDesktopPluginless(),this.callingConstantsUI=this.settingsService.valueFor(this.constants.settings.names.callingConstants).ui,this.callingButtonTooltips=this.getCallingButtonTooltips(),this.callMonitorTemplate=this.$templateCache.get("components/calling-monitor/calling-monitor.desktop.html"),this.enableUnifiedControlBarInCallMonitor=this.settingsService.valueAsBoolean(this.constants.settings.names.enableUnifiedControlBarInCallMonitor),this.enableConfirmAudioEscalation=this.settingsService.valueAsBoolean(this.constants.settings.names.enableConfirmAudioEscalation),this.useBufferSharing=this.settingsService.valueAsBoolean(this.constants.settings.names.callingEnableBufferSharing),this.shouldShowCQFFromSSFC=this.settingsService.valueAsBoolean(this.constants.settings.names.shouldShowCQFFromSSFC),t.MTMASubscriptionUtility.subscribe(this.callingService,function(){i.callsChanged||(i.callsChanged=_.defer(function(){return i.callingServiceChanged()}))}),this.showCallMonitorOnMinimize&&this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.appState.minimizedChanged,function(e,t){i.logger.info("received appState.minimizedChanged event with screen visible: "+!t),i.onShowCallMonitorEvent(!t,!1)})},o.prototype.mtmaTelemetryIdentifier=function(){return"CallMonitor.Desktop"},o.prototype.cleanupOnAppTeardown=function(e){this.unsubscribeAtCleanup(),this.isShownInExternalWindow=!1,this.isCurrentlyScreenSharing=!1,this.isCallScreenVisible=void 0,this.callMonitorTemplate=void 0,this.monitoredCall=void 0,this.showNewCriticalUfdDesign=!1,this.monitoredCallSubscription=void 0,this.inLobbyCountSubscription=void 0,this.callRecordingSubscription=void 0,this.enableUnifiedControlBarInCallMonitor=void 0,this.defaultTitle=void 0,this.defaultWindowTitle=void 0,this.meetupTitleSubscription=void 0,this.deviceManagerSubscription=void 0,this.incomingVideoSubscription=void 0,this.callingAlertsServiceSubscription=void 0,this.cameraAvailable=void 0,this.isMicAvailable=void 0,this.isIncomingVideoOn=void 0,this.videoRenderer=void 0,this.isHighContrast=void 0,this.dominantSpeaker=void 0,this.callStartDate=void 0,this.avatarBackgroundColor=void 0,this.dominantSpeakerVideoIsAvailable=void 0,this.dominantSpeakerSubscription=void 0,this.dominantSpeakerAvatar=void 0,this.frameSink=void 0,this.showCallQualityIndicator=!1,this.qualityIndicatorTooltipText=void 0,this.minimizeTooltipText=void 0,this.alertCloseTooltipText=void 0,this.adminSettings=void 0,this.advancedSettings=void 0,this.areTogglingIncomingVideoFlagsEnabled=void 0,this.callingConversation=void 0,this.callingFooterAlert=null,this.callingCriticalAlert=null,this.callingButtonTooltips=void 0,this.muteParticipantEnabled=void 0,this.showCallMonitorOnMinimize=void 0,this.escalateScreensharingCallEnabled=void 0,this.canMinimizeExternalCallMonitor=void 0,this.broadcastLivePreviewProvider=void 0,this.lastReceivedAlertName=void 0,this.callsChanged=0,this.callStateChangedSubscriptions={},this.callingConstantsUI=void 0,this.disableVideoForVDI=void 0,this.enableConfirmAudioEscalation=void 0,this.useBufferSharing=void 0,this.shouldShowCQFFromSSFC=void 0,this.useMeetingPolicyInScreenSharingFromChat=void 0,this.alwaysVisibleAlertNames=["SomeoneWaitingInLobby"]},o.prototype.unsubscribeAtCleanup=function(){this.monitoredCallSubscription&&this.monitoredCallSubscription.dispose(),this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.dispose(),this.inLobbyCountSubscription&&e.services.MTMASubscriptionUtility.unsubscribe(this.callLobbyService,this.inLobbyCountSubscription),this.callRecordingSubscription&&this.callRecordingSubscription.dispose(),this.callingAlertsServiceSubscription&&e.services.MTMASubscriptionUtility.unsubscribe(this.callingAlertsService,this.callingAlertsServiceSubscription),this.meetupTitleSubscription&&this.meetupTitleSubscription.dispose(),this.deviceManagerSubscription&&e.services.MTMASubscriptionUtility.unsubscribe(this.deviceManagerService,this.deviceManagerSubscription),this.incomingVideoSubscription&&e.services.MTMASubscriptionUtility.unsubscribe(this.callTogglingService,this.incomingVideoSubscription)},o.prototype.callingServiceChanged=function(){var e=this;this.callsChanged=0;var i=this.callingService.getAllCalls(!1),n=Object.keys(this.callStateChangedSubscriptions).filter(function(i){return!e.callingService.getCallByTeamsCallId(t.TeamsCallService.parseTeamsCallId(i))}),a=i.filter(function(t){return!e.callStateChangedSubscriptions[t.teamsCallId]});n.forEach(function(t){e.removeCallStateChangedSubscription(t)}),a.forEach(function(t){e.callStateChangedSubscriptions[t.teamsCallId]=t.changed(function(){return e.updateCallMonitor(t)}),e.isCallScreenVisible=e.initIsCallScreenVisible(t),e.updateCallMonitor(t)})},o.prototype.initIsCallScreenVisible=function(e){if(!e.isScreenshareFromChat){if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableBetterTogetherExternalCallMonitor)||!e.isInTransportCompanionMode()||this.isCallFromChildWindow(e))return!0;this.log("We are in Better Together call started from the Kingston, so the call is not shown in the child window. teamsCallId = "+e.teamsCallId+", conversationId = "+e.conversationId+".")}},o.prototype.removeCallStateChangedSubscription=function(e){this.callStateChangedSubscriptions[e]&&(this.callStateChangedSubscriptions[e].dispose(),delete this.callStateChangedSubscriptions[e])},o.prototype.monitor=function(i){var n=this;this.log("start monitoring call"),this.monitoredCall=i,this.callingConversation=i.getCallingConversation(),this.callingAlertsServiceSubscription=t.MTMASubscriptionUtility.subscribe(this.callingAlertsService,this.onNewAlertReceived.bind(this)),this.inLobbyCountSubscription=t.MTMASubscriptionUtility.subscribe(this.callLobbyService,function(){return n.sendUpdate(i)},t.CallLobbyServiceEvents.Type_InLobbyCountChanged,t.TeamsCallService.getTeamsCallIdAsString(i.teamsCallId)),this.callRecordingSubscription=this.monitoredCall.on("recordingStatusChanged",function(){return n.sendUpdate(i)}),this.callingConversation.isGroup()&&this.conversationsService.safeSubscribe(this.$rootScope,function(){return n.updateTitle(i)},e.services.ConversationsServiceEvents.EventType_TopicChanged),this.startBroadcastMonitoring(i),this.updateTitle(i),this.callingDurationService.whenCallStartDateRetrieved(i).then(function(e){n.callStartDate=e,n.updateTitle(i)}),this.callingConversation.isChannel()&&(this.meetupTitleSubscription=this.callTitleService.subscribeForMeetupTitle(i.teamsCallId,this.updateTitle.bind(this))),this.isIncomingVideoOn=this.callTogglingService.isIncomingVideoOn(i)},o.prototype.renderPreview=function(e){var t=this;this.broadcastLivePreviewProvider&&window.setTimeout(function(){try{t.sendRenderUpdateToExternalWindow(e)}catch(e){t.logger.error("Error while sending render update to call monitor {0}",e)}},0)},o.prototype.isVideoAvailable=function(){return this.cameraAvailable&&this.adminSettings.isVideoEnabled&&!this.disableVideoForVDI},o.prototype.onDeviceChange=function(){var e=this;try{this.deviceManagerService.getCameraAvailable().then(function(t){return e.cameraAvailable=t}),this.isMicAvailable=this.deviceManagerService.getMicrophones().length>0}catch(e){this.logger.error("onDeviceChange failed. error: {0}",e)}},o.prototype.onNewAlertReceived=function(){var i=this.callingAlertsService.getAlerts(t.WindowType.ExternalCallMonitor);if(i.length>0){var n=i[i.length-1];this.showNewCriticalUfdDesign=this.callingAlertsService.showNewCriticalUFDDesign()&&_.includes([t.AlertType.Error,t.AlertType.Warning],n.type),!this.showNewCriticalUfdDesign||n.isAffirmational?(this.updateCallQualityIndicator(n),this.updateFooterAlert()):this.updateCriticalAlert(),this.lastReceivedAlertName!==n.name&&(this.callingAlertsService.sendBITelemetry(this.$rootScope,n.name,e.PanelType.callExternalMonitor),this.lastReceivedAlertName=n.name)}else this.updateQualityIndicatorVisibility(!1),this.showNewCriticalUfdDesign=!1,this.updateFooterAlert(),this.updateCriticalAlert()},o.prototype.updateFooterAlert=function(){var e=this.callingAlertsService.getAlerts(t.WindowType.CallingFooter);e.length>0?this.callingFooterAlert=e[0]:this.callingFooterAlert=null,this.sendUpdate(this.monitoredCall)},o.prototype.updateCriticalAlert=function(){this.getLatestCriticalAlertsOnDisplay(),this.sendUpdate(this.monitoredCall)},o.prototype.updateCallQualityIndicator=function(e){var t;e&&(t=e.showQualityIndicator,this.qualityIndicatorTooltipText=e.text?e.text:this.$translate.instant(this.resources.strings.calling_holdOn_message_callingMonitor)),this.updateQualityIndicatorVisibility(t)},o.prototype.updateQualityIndicatorVisibility=function(e){e!==this.showCallQualityIndicator&&(this.log("showCallQualityIndicator = "+e),this.showCallQualityIndicator=e,this.sendUpdate(this.monitoredCall))},o.prototype.updateTitle=function(e){var t=this;this.callTitleService.getDefaultCallTitle(this.constants.scenarios.calling.context.externalCallMonitor,e,this.constants.dialogs.settings.numberOfNamesInTitle,this.callingConversation).then(function(e){t.defaultTitle=e.titleText,t.sendUpdate(t.monitoredCall)}).catch(function(i){t.logger.error("Could not get default title for call "+e.callId+" error="+i)})},o.prototype.canRenderBroadcastControl=function(){return this.monitoredCall.isBroadcast},o.prototype.startBroadcastMonitoring=function(e){var i=e.setupArgs.meetingInfo;this.canRenderBroadcastControl()&&i&&i.broadcastRole&&"producer"===i.broadcastRole.toLowerCase()&&(this.broadcastLivePreviewProvider&&(this.logger.error("'startBroadcastMonitoring': Broadcast live preview provider should have been null"),this.broadcastLivePreviewProvider.dispose(),this.broadcastLivePreviewProvider=null),this.broadcastLivePreviewProvider=new t.BroadcastLivePreviewProvider(e,this,this.$translate,this.appConfig,this.resources,this.logger),this.broadcastLivePreviewProvider.init())},o.prototype.stopMonitoring=function(){this.log("stopped monitoring"),this.monitoredCall=null,this.callingConversation=null,this.monitoredCallSubscription&&(this.monitoredCallSubscription.dispose(),this.monitoredCallSubscription=null),this.broadcastLivePreviewProvider&&(this.broadcastLivePreviewProvider.dispose(),this.broadcastLivePreviewProvider=null),this.inLobbyCountSubscription&&(e.services.MTMASubscriptionUtility.unsubscribe(this.callLobbyService,this.inLobbyCountSubscription),this.inLobbyCountSubscription=null),this.callRecordingSubscription&&(this.callRecordingSubscription.dispose(),this.callRecordingSubscription=null),this.callingAlertsServiceSubscription&&(e.services.MTMASubscriptionUtility.unsubscribe(this.callingAlertsService,this.callingAlertsServiceSubscription),this.callingAlertsServiceSubscription=null),this.meetupTitleSubscription&&(this.meetupTitleSubscription.dispose(),this.meetupTitleSubscription=null),this.deviceManagerSubscription&&(e.services.MTMASubscriptionUtility.unsubscribe(this.deviceManagerService,this.deviceManagerSubscription),this.deviceManagerSubscription=null),this.incomingVideoSubscription&&(e.services.MTMASubscriptionUtility.unsubscribe(this.callTogglingService,this.incomingVideoSubscription),this.incomingVideoSubscription=null),this.disposeFrameSink(),this.disposeDominantSpeakerSubscription(),this.dominantSpeaker=null},o.prototype.disposeFrameSink=function(){if(this.frameSink)try{this.frameSink.removeAllListeners(),this.frameSink.dispose(),this.ipc.removeAllListeners("callMonitor:frameSink:invoke")}catch(e){this.logger.error("Error disposing frameSink: "+e)}finally{this.frameSink=null}},o.prototype.onCallMonitorEvent=function(e,t){switch(t.type){case"openCall":return void this.onOpen();case"toggleMic":return void this.onToggleMic();case"toggleVideo":return void this.onToggleVideo();case"togglePresenting":return void this.onTogglePresenting();case"endCall":return void this.onEndCall();case"minimizeCallMonitor":return void this.onMinimizeCallMonitor();case"dtmfKeypad":return void this.onDtmfKeypadClick();case"transfer":return void this.onTransferClick();case"consultation":return void this.onConsultationClick();case"hold":return void this.onHoldClick();case"closeAlert":return void this.onCloseAlert();case"clickOnAlertActionButton":return void this.onAlertAction()}},o.prototype.getFrameSink=function(){var e=this;return this.frameSink?this.frameSink:(this.frameSink=this.callingAgentsService.createFrameSink(),t.MTMAIpcUtility.onWithTenantScope(this.ipc,"callMonitor:frameSink:invoke",function(t,i,n){switch(i){case"setVideoPreference":e.frameSink.setVideoPreference(n.width,n.height);break;case"setTextureSharingSupported":e.frameSink.setTextureSharingSupported&&e.frameSink.setTextureSharingSupported(n.supported);break;case"log":e.frameSink.log&&e.frameSink.log(n.level,n.message)}}),this.frameSink)},o.prototype.onShowCallMonitorEvent=function(e,t){var i=this.monitoredCall||this.callingService.getActiveCall();if(i){var n=this.isCallFromChildWindow(i),a=this.showCallMonitorOnMinimize&&(n?t:!t);this.logger.info("[onShowCMEvent]-\n        isCallScreenWindowVisible: "+e+",\n        isVisibilityChangedFromChildWindow: "+t+",\n        isCallFromChildWindow: "+n+",\n        shouldUpdateCallMonitor: "+a),a&&(this.isCallScreenVisible=e,this.updateCallMonitor(i))}},o.prototype.isCallFromChildWindow=function(e){return this.callingSupportService.isCallPoppedOutInMultiWindow(e)},o.prototype.shouldShowExternalCallMonitor=function(e,t){var i=3===e.state,n=e.setupArgs.isProbeCall,a=this.showCallMonitorOnMinimize&&!1===this.isCallScreenVisible,o=void 0===this.isCallScreenVisible,s=3!==e.sharingSourceType&&e.isScreenSharingOn,r=!this.$window.isRigel&&i&&!n&&(a||(this.showCallMonitorOnMinimize?o:s));return t!==r&&this.logger.info("[shouldShowCM]-\n          showCallMonitorOnMinimize: "+this.showCallMonitorOnMinimize+",\n          isCallConnected: "+i+",\n          isProbeCall: "+n+",\n          isCallScreenVisible: "+this.isCallScreenVisible+",\n          ssfcSharingRole: "+(e.isScreenshareFromChat&&e.screenSharingControl?e.screenSharingControl.role:"Not applicable")+",\n          isSSFCCallScreenNotVisible: "+o+",\n          isScreenSharingOn: "+e.isScreenSharingOn+",\n          shouldShowExternalCallMonitor : "+r),r},o.prototype.updateCallMonitor=function(e){var t=!!this.monitoredCall,i=this.shouldShowExternalCallMonitor(e,t),n=!1;this.isCurrentlyScreenSharing!==e.isScreenSharingOn&&(this.isCurrentlyScreenSharing=e.isScreenSharingOn,t&&!e.isScreenSharingOn&&(i=!1,this.isCallScreenVisible=!0,n=!0,this.logger.info("[updateCM]- dismiss CM and navigate to calling screen when an active screen sharing session is stopped"))),t&&this.callTogglingService.isHoldStateChanging()&&(i=!1,this.isCallScreenVisible=!0,this.logger.info("[updateCM]- dismiss CM when hold state changing")),3===e.state&&this.sendRenderUpdateToExternalWindow(e),t!==i&&(i?this.showCallMonitor(e,"updateCallMonitor"):t&&e.callId===this.monitoredCall.callId&&(this.hideCallMonitor(e,"updateCallMonitor"),n&&this.navigateToCallScreen(e,{},"updateCallMonitor")))},o.prototype.showCallMonitor=function(e,t){this.logger.info("[showCM]- from "+t+", isScreenSharingOn: "+e.isScreenSharingOn),this.monitor(e),this.openWindow(e),this.sendRenderUpdateToExternalWindow(e)},o.prototype.hideCallMonitor=function(e,t){this.logger.info("[hideCM]: from "+t+", isScreenSharingOn: "+e.isScreenSharingOn),this.closeWindow(),this.stopMonitoring()},o.prototype.sendRenderUpdateToExternalWindow=function(t){var i=this;if(this.isShownInExternalWindow){var n=null;if(this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.isPreviewReady())n=this.broadcastLivePreviewProvider.getComposerIdIfExist();else{var a=[].concat(t.dominantSpeakerInfo.speakerList.filter(function(e){return t.participants.some(function(t){return t.id===e})})).concat(t.participants.filter(function(e){return 3===e.state}).map(function(e){return e.id})).filter(function(t){return!e.services.CallUtilities.isCallingSystemBot(t,i.callingConstantsUI.blacklistedBots)});n=a[0]}var o=_.find(t.participants,function(e){return e.id===n});if(o){var s=t.isEmergencyCall&&t.emergencyCalleeMri===o.id;this.updateDominantSpeaker(o,s,t)}else this.removeDominantSpeaker(t);this.sendUpdate(t)}},o.prototype.removeDominantSpeaker=function(e){this.log("removeDominantSpeaker "+(this.dominantSpeaker?this.dominantSpeaker.id:"")+" from callId "+e.callId),this.disposeDominantSpeakerSubscription(),this.dominantSpeaker&&e.participants.indexOf(this.dominantSpeaker)<0&&(this.dominantSpeaker=null,this.dominantSpeakerVideoIsAvailable=!1)},o.prototype.updateDominantSpeaker=function(e,t,i){var n=this;e!==this.dominantSpeaker&&(this.dominantSpeaker&&this.disposeDominantSpeakerSubscription(),this.log("updateDominantSpeaker "+e.id),this.dominantSpeaker=e,this.dominantSpeakerVideoIsAvailable=!1,this.disableVideoForVDI||(this.dominantSpeakerSubscription=e.changed(function(){return n.updateDominantSpeakerVideo(i)})),this.updateDominantSpeakerAvatar(e,t),this.updateDominantSpeakerVideo(i))},o.prototype.updateDominantSpeakerVideo=function(e){var t=this;if(!this.disableVideoForVDI){var i=skype.calling.ICallParticipantHelpers.bestVideoFor(this.dominantSpeaker),n=!!i&&i.isAvailable&&this.callingSupportService.isIPVideoModeEnabledForCall(e);this.areTogglingIncomingVideoFlagsEnabled&&(n=n&&this.isIncomingVideoOn),n!==this.dominantSpeakerVideoIsAvailable&&(n?i.start({renderer:this.createVirtualRenderer()}).then(function(e){var n=skype.calling.ICallParticipantHelpers.bestAvailableVideoFor(t.dominantSpeaker);n&&n.id==i.id?t.videoRenderer=e:t.disposeRenderer(e)}).catch(function(e){t.logger.error("Failed to start video: "+e)}):this.disposeDominantSpeakerVideo(),this.dominantSpeakerVideoIsAvailable=n,this.sendUpdate(this.monitoredCall))}},o.prototype.createVirtualRenderer=function(){return new a(this.ipc,this.getFrameSink())},o.prototype.disposeDominantSpeakerSubscription=function(){this.dominantSpeakerSubscription&&(this.dominantSpeakerSubscription.dispose(),this.dominantSpeakerSubscription=null),this.disposeDominantSpeakerVideo()},o.prototype.disposeDominantSpeakerVideo=function(){this.videoRenderer&&this.disposeRenderer(this.videoRenderer)},o.prototype.disposeRenderer=function(e){try{e.dispose()}catch(e){this.logger.warn("An error occurred while disposing the video renderer: "+(e&&e.message))}finally{e=null}},o.prototype.updateDominantSpeakerAvatar=function(e,t){var i=this;if(!this.dominantSpeakerVideoIsAvailable){if(t)return this.dominantSpeakerAvatar="emergency",void this.sendUpdate(this.monitoredCall);if(SkypeX.Services.ChatServiceUtils.isPstnMri(e.id)&&this.dominantSpeaker&&this.dominantSpeaker.id===e.id)return this.dominantSpeakerAvatar="pstn",this.avatarBackgroundColor=this.utilityService.pstnBackgroundColorClass(e.id.replace("+","")),void this.sendUpdate(this.monitoredCall);this.peopleService.getPeopleProfile(e.id,"calling-monitor-service").then(function(e){return i.authenticationService.isAnonymous()?i.peopleService.getUserInitialsPicture(e.displayName,i.constants.profilePictureSizes.small,"meetup").then(function(e){return e.replace(i.constants.pictureLoad.mimeJpeg,"")}):i.peopleService.getUserProfilePicture({userId:e.userPrincipalName,displayName:e.displayName,imageUri:e.imageUri},"meetup")}).then(function(t){t?i.dominantSpeaker&&i.dominantSpeaker.id===e.id&&(i.dominantSpeakerAvatar=i.constants.pictureLoad.mimeProgressivejpeg+t,i.sendUpdate(i.monitoredCall)):i.logger.warn("Received empty avatar picture")}).catch(function(e){return i.logger.error("Failed to get user avatar: "+e)})}},o.prototype.onNetworkReconnect=function(e){this.monitoredCall&&this.monitoredCall.teamsCallId===e&&this.isShownInExternalWindow&&this.monitoredCall.isNetworkReconnectOngoing()&&this.onOpen()},o.prototype.onOpen=function(i){if(void 0===i&&(i=t.CallMoreOption.None),this.monitoredCall){var n=this.monitoredCall,a=n.isScreenshareFromChat?{isMultiTasking:!0,rightPanelToOpen:e.components.Calling.RightPanel.CallingChat,callMoreOptionToExecute:i}:{isMultiTasking:!0,callMoreOptionToExecute:i};this.logger.info("[onOpen]- invoked"),this.navigateToCallScreen(n,a,"onOpen")}else this.logger.info("[onOpen]- no monitored call found")},o.prototype.navigateToCallScreen=function(e,t,i){var n=this.isCallFromChildWindow(e);t.isCallJoinedFromChildWindow=n,!n&&this.ipc.send("callScreen:restore"),this.callingNavigationService.navigateToCallScreen(e,t),this.logger.info("[navigateToCallScreen]-"+i+": Navigated to "+(n?"child":"main")+" window"),this.isCallScreenVisible=!0,this.updateCallMonitor(e)},o.prototype.onToggleMic=function(){var e,t=this;if(this.monitoredCall){var i=this.isCallFromChildWindow(this.monitoredCall);this.monitoredCall.isContentOnlyMode&&this.enableConfirmAudioEscalation&&!i&&(this.ipc.send("callScreen:restore"),this.logger.info("[onToggleMic]: Navigated to main window to confirm audio escalation")),this.callTogglingService.toggleMuteAudio(this.monitoredCall,i?3:1,null,(e={},e[this.constants.counters.eventNames.context]=this.constants.scenarios.calling.context.externalCallMonitor,e),!!i).then(function(){t.logger.info("[onToggleMic]: toggleMuteAudio completed, isMuted: "+t.monitoredCall.isMuted),t.sendUpdate(t.monitoredCall)})}},o.prototype.onDtmfKeypadClick=function(){this.onMoreOptionClicked(t.CallMoreOption.ShowDtmfKeypad)},o.prototype.onTransferClick=function(){this.onMoreOptionClicked(t.CallMoreOption.StartTransferring)},o.prototype.onConsultationClick=function(){this.onMoreOptionClicked(t.CallMoreOption.StartConsulting)},o.prototype.onHoldClick=function(){this.onMoreOptionClicked(t.CallMoreOption.ToggleHold)},o.prototype.onToggleVideo=function(){var e=this;this.callTogglingService.toggleVideo(this.monitoredCall,this.constants.scenarios.calling.context.externalCallMonitor).then(function(){e.logger.info("[onToggleVideo]: toggleVideo completed, isVideoOn: "+e.monitoredCall.isVideoOn),e.sendUpdate(e.monitoredCall)})},o.prototype.onIncomingVideoValueChanged=function(){this.isIncomingVideoOn=this.callTogglingService.isIncomingVideoOn(this.monitoredCall),this.sendUpdate(this.monitoredCall)},o.prototype.onTogglePresenting=function(){if(this.monitoredCall){var e={isSharingPanelRequested:!this.monitoredCall.isScreenSharingOn,forceCallingScreenReloading:!0};if(this.monitoredCall.isScreenSharingOn){var t=this.constants.scenarios.calling.context.externalCallMonitor;this.monitoredCall.stopScreenSharingOnCall(t),this.logger.info("[onTogglePresenting]- stop screen share, isScreenSharingOn: "+this.monitoredCall.isScreenSharingOn),this.trigger(o.Type_ExternalMonitorStopScreenshare)}this.navigateToCallScreen(this.monitoredCall,e,"onTogglePresenting")}else this.logger.info("[onTogglePresenting]- No call found")},o.prototype.popoutCQF=function(e){if(this.shouldShowCQFFromSSFC&&e&&this.callingMultiWindowService.isCallingMultiWindowEnabled()&&this.monitoredCall.isScreenSharingOn){var t=this.monitoredCall.getIntent();null!=t&&void 0!==t||(t=this.callingIntentMultiWindowService.saveIntentFromCall(this.monitoredCall)),t.joinOptions.CQFCallId=this.monitoredCall.callId,this.callingMultiWindowService.popoutIntent(t,"end-call-ssfc-cqf")}},o.prototype.onEndCall=function(){var e=this;if(this.monitoredCall){var i=this.monitoredCall,n=this.isCallFromChildWindow(this.monitoredCall);if(this.monitoredCall.isScreenshareFromChat&&n){var a=void 0;this.callingQualityFeedbackService.shouldEnableSlimcoreCQFAPI()?this.callingQualityFeedbackService.retrieveCQFInfo(t.FeedbackCallType.ScreenshareFromChat,this.monitoredCall).then(function(i){i&&i.showQuestionary&&i.experience===t.FeedbackExperienceType.Modal?e.popoutCQF(!0):e.callingService.leaveCall(e.monitoredCall,e.constants.scenarios.calling.context.externalCallMonitor)}).catch(function(t){e.logger.error("callMonitorService.desktop: Failed to retrieve CQF info: "+t)}):(a=this.callingQualityFeedbackService.checkIfSampledForPostCallCQF(t.FeedbackCallType.ScreenshareFromChat,this.monitoredCall.callId),this.popoutCQF(a))}else n||this.navigateToCallScreen(this.monitoredCall,{},"onEndCall");this.callingService.leaveCall(i,this.constants.scenarios.calling.context.externalCallMonitor)}},o.prototype.onMinimizeCallMonitor=function(){this.isShownInExternalWindow&&this.canMinimizeExternalCallMonitor&&(this.ipc.send("callScreen:callMonitor:minimize"),this.logger.info("[onMinimizeCM]: sent ipc to minimize"))},o.prototype.onCloseAlert=function(){this.monitoredCall&&this.callingCriticalAlert&&this.callingAlertsService.dismiss(this.callingCriticalAlert)},o.prototype.onAlertAction=function(){this.monitoredCall&&this.callingCriticalAlert&&this.callingCriticalAlert.actions.length>0&&(this.callingCriticalAlert.actions[0].command(),this.callingAlertsService.dismiss(this.callingCriticalAlert))},o.prototype.getLatestCriticalAlertsOnDisplay=function(){var e=this,i=this.callingAlertsService.getAlerts(t.WindowType.ExternalCallMonitor).filter(function(i){return i.type===t.AlertType.Warning||i.type===t.AlertType.Error||_.includes(e.alwaysVisibleAlertNames,i.name)});this.callingCriticalAlert=i.length>0?i[0]:null},o.prototype.getRecordingState=function(e){return e.getRecordingStatus()===t.CallRecordingStatus.recording||e.getVoiceCollectionStatus()===t.CallingVoiceCollectionStatus.started?t.CallRecordingStatus.recording:e.getRecordingStatus()===t.CallRecordingStatus.pending?t.CallRecordingStatus.pending:t.CallRecordingStatus.none},o.prototype.isVideoButtonAvailable=function(t){return!e.services.CallUtilities.isOneToOnePstnCall(t)&&!e.services.CallUtilities.isVoicemailGreetingCall(t)&&!t.isEmergencyCall&&this.callingSupportService.isIPVideoModeEnabledForCall(t)},o.prototype.isShareButtonAvailable=function(i){return!e.services.CallUtilities.isOneToOnePstnCall(i)&&(this.callingSupportService.isTFLRenderer()||!t.CallUtilities.isSkypeConsumerCall(i))&&!e.services.CallUtilities.isVoicemailGreetingCall(i)&&!i.isEmergencyCall&&(i.isScreenSharingOn||i.isActionExecutable(t.MeetingAction.Share))},o.prototype.isAudioButtonAvailable=function(t){return!(t.isEmergencyCall&&t.myRoleInEmergencyCall===e.services.UserRoleInEmergencyCall.Caller)&&this.callingSupportService.isIPAudioModeEnabledForCall(t)},o.prototype.computeCallMonitorDescription=function(e,t){return this.$translate.instant(e.isScreenshareFromChat&&!t?this.resources.strings.calling_monitor_sharingOnly_clickHereToGoBack:e.isScreenshareFromChat?this.resources.strings.calling_monitor_screeshareOnly_clickHereToGoBack:this.resources.strings.calling_monitor_clickHereToGoBack)},o.prototype.getState=function(i){this.getLatestCriticalAlertsOnDisplay();var n=this.callingSupportService.isPrivateCallingEnabled,a=this.callTitleService.getMeetupTitleForCall(i),o=this.isVideoAvailable(),s=this.callLobbyService.isSomeoneInLobby(i.teamsCallId),r=this.getRecordingState(i),c=i.isScreenshareFromChat,l=this.broadcastLivePreviewProvider&&this.broadcastLivePreviewProvider.isPreviewReady()&&!this.dominantSpeaker?this.broadcastLivePreviewProvider.getErrorMessage():this.computeCallMonitorDescription(i,n),h=c&&this.$translate.instant(this.resources.strings.calling_monitor_screeshareOnly_microphone_text),d=this.$translate.instant(this.resources.strings.calling_monitor_screenshareOnly_leavebutton_text),g={title:this.defaultTitle,subtitle:a,windowTitle:this.defaultWindowTitle,state:i.state,startTime:this.callStartDate&&this.callStartDate.getTime(),isMuted:i.isMuted||this.muteParticipantEnabled&&i.isServerMuted||!this.callingSupportService.isIPAudioModeEnabledForCall(i),isContentOnlyMode:i.isContentOnlyMode,enableConfirmAudioEscalation:this.enableConfirmAudioEscalation,isVideoOn:i.isVideoOn&&this.callingSupportService.isIPVideoModeEnabledForCall(i),isVideoButtonAvailable:this.isVideoButtonAvailable(i),isShareButtonAvailable:this.isShareButtonAvailable(i),isAudioButtonAvailable:this.isAudioButtonAvailable(i),isScreenSharingOn:i.isScreenSharingOn,isIncomingVideoOn:this.isIncomingVideoOn&&this.callingSupportService.isIPVideoModeEnabledForCall(i),isSomeoneInLobby:s,isRecording:r,isScreenshareFromChat:c,escalateScreensharingCallEnabled:this.escalateScreensharingCallEnabled,isRemoteVideoOn:!(!this.dominantSpeaker||!skype.calling.ICallParticipantHelpers.bestAvailableVideoFor(this.dominantSpeaker)),avatarBackgroundColor:this.avatarBackgroundColor?this.avatarBackgroundColor:null,dominantSpeakerId:this.dominantSpeaker?this.dominantSpeaker.id:null,dominantSpeakerAvatar:this.dominantSpeaker?this.dominantSpeakerAvatar:null,description:l,showQualityIndicator:this.showCallQualityIndicator,showQualityIndicatorTooltip:this.qualityIndicatorTooltipText,isVideoEnabled:o&&this.callingSupportService.isIPVideoModeEnabledForCall(i),isMicEnabled:this.isMicAvailable&&this.callingSupportService.isIPAudioModeEnabledForCall(i),isScreenSharingEnabled:this.adminSettings.isScreenSharingEnabled,isMinimizeMonitorEnabled:this.canMinimizeExternalCallMonitor,isPptSharingEnabled:this.advancedSettings.isPPTSharingEnabled,isHighContrast:this.isHighContrast,frameSinkName:this.getFrameSinkName(),showMoreBtn:this.showMoreBtn(),moreBtnDropDownVM:this.setMoreBtnDropdownViewModel(),callingFooterAlert:this.callingFooterAlert,callingCriticalAlert:this.callingCriticalAlert,callingButtonsTooltips:this.callingButtonTooltips,alertCloseTooltip:this.alertCloseTooltipText,minimizeTooltip:this.minimizeTooltipText,isBroadcast:this.canRenderBroadcastControl(),enableUnifiedControlBarInCallMonitor:this.enableUnifiedControlBarInCallMonitor,microphoneButtonTitleForScreenshareOnlyCalls:h,leaveButtonTitleForScreenshareOnlyCalls:d,pstnImgTitle:this.$translate.instant(this.resources.strings.icons_person),disableVideoForVDI:this.disableVideoForVDI,blockAVOverIPInMeetings:this.callingSupportService.blockAVOverIPInMeetings(),allowPrivateCalling:n,useMeetingPolicyInScreenSharingFromChat:!!this.useMeetingPolicyInScreenSharingFromChat,useBufferSharing:!!this.useBufferSharing,isMac:this.platformDetectService.getOS()===this.constants.os.mac,isSelfHardMuted:i.isSelfAttendeeRestrictedForModality(t.RestrictableModalities.Audio)};if(g.isBroadcast){var p=this.getBroadcastStatus(i),u=p&&p.toString(),v=e.services.BroadcastUtilities.getBroadcastStatusResourceString(p,this.resources,!0),S=this.$translate.instant(v);g.broadcastInfo={status:u,statusText:S}}return g},o.prototype.getBroadcastStatus=function(e){var t=e&&e.broadcastMeeting&&e.broadcastMeeting.broadcastState;return t&&t.status},o.prototype.getCallingButtonTooltips=function(){return{startVideo:this.$translate.instant(this.resources.strings.calling_startVideo),stopVideo:this.$translate.instant(this.resources.strings.calling_stopVideo),muteMicrophone:this.$translate.instant(this.resources.strings.calling_button_mute),unmuteMicrophone:this.$translate.instant(this.resources.strings.calling_unmute),turnOnAudio:this.$translate.instant(this.resources.strings.calling_confirm_audio_escalation_button_text),moreActions:this.$translate.instant(this.resources.strings.calling_more_actions),stopSharingDesktop:this.$translate.instant(this.resources.strings.calling_stopSharingDesktop),startSharingDesktop:this.$translate.instant(this.resources.strings.calling_startSharingDesktop),hangup:this.$translate.instant(this.resources.strings.calling_hangup),ecalateScreensharingCall:this.$translate.instant(this.resources.strings.calling_screenshare_only_call_escalation_microphone_disabled_external_call_monitor),videoDisabled:this.getVideoDisabledReason(),micDisabled:this.$translate.instant(this.resources.strings.calling_microphone_disabled),sharingDisabled:this.getSharingDisabledReason(),micHardMuted:this.$translate.instant(this.resources.strings.calling_microphone_disabled_by_hard_mute)}},o.prototype.getVideoDisabledReason=function(){if(this.disableVideoForVDI)return this.$translate.instant(this.resources.strings.calling_video_disabled_while_sharing_screen);var e=this.monitoredCall||this.callingService.getActiveCall(),t=e?this.videoSupportService.getVideoUnavailableReasonString(e.teamsCallType):this.resources.strings.calling_video_disabled_by_admin;return this.$translate.instant(t)},o.prototype.getSharingDisabledReason=function(){return this.monitoredCall&&!this.monitoredCall.isActionExecutable(t.MeetingAction.Share)?this.$translate.instant(this.resources.strings.calling_sharing_not_allowed_tooltip):this.$translate.instant(this.videoSupportService.getScreenSharingUnavailableReasonString())},o.prototype.getFrameSinkName=function(){return this.frameSink&&this.frameSink.getBufferName?this.frameSink.getBufferName():void 0},o.prototype.openWindow=function(e){if(this.log("openWindow"),!this.isShownInExternalWindow){this.dominantSpeaker=null,this.callingButtonTooltips.videoDisabled=this.getVideoDisabledReason(),this.callingButtonTooltips.sharingDisabled=this.getSharingDisabledReason(),e.isScreenshareFromChat&&(this.callingButtonTooltips.hangup=this.escalateScreensharingCallEnabled?this.$translate.instant(this.resources.strings.calling_screensharing_call_escalated_hangup):this.$translate.instant(this.resources.strings.calling_screensharing_call_hangup));var i=this.callMonitorTemplate,n=this.getState(e);this.isShownInExternalWindow=!0,this.trigger(o.Type_ExternalMonitorChanged,null,!1),e.isScreenshareCasting||this.ipc.send("callScreen:callMonitor:open",i,n);var a=this.isCallFromChildWindow(this.monitoredCall);this.shouldMinimizeApp(e)&&!a&&this.ipc.send("callScreen:minimize");var s=this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.screenSharingSender,t.TeamsCallService.getTeamsCallIdAsString(e.teamsCallId));s?s.mark(this.constants.scenarios.steps.calling.screenSharing.senderCallMonitorShown):this.loggingService.warn("attempted to set performance mark "+this.constants.scenarios.steps.calling.screenSharing.senderCallMonitorShown+" but could not find scenario")}},o.prototype.shouldMinimizeApp=function(t){return!this.callingSupportService.isCallPoppedOutInMultiWindow(t)&&((!this.settingsService.valueAsBoolean(this.constants.settings.names.enableBetterTogetherExternalCallMonitor)||!t.isInTransportCompanionMode())&&(t.isBroadcast?!t.broadcastMeeting||t.broadcastMeeting.role!==e.services.BroadcastMeeting.constants.role.producer:!t.isScreenshareFromChat||t.isScreenshareCasting))},o.prototype.sendUpdate=function(e){this.isShownInExternalWindow&&this.ipc.send("callScreen:callMonitor:update",this.getState(e))},o.prototype.closeWindow=function(){this.logger.info("[closeWindow]: isShownInExternalWindow: "+this.isShownInExternalWindow),this.isShownInExternalWindow&&(this.isShownInExternalWindow=!1,this.trigger(o.Type_ExternalMonitorChanged,null,!0),this.ipc.send("callScreen:callMonitor:close"))},o.prototype.log=function(e){this.logger.info("CallMonitorService.Desktop."+e+": callId = "+(this.monitoredCall?this.monitoredCall.callId:"no-call")+", isShownInExternalWindow = "+this.isShownInExternalWindow)},o.prototype.onMoreOptionClicked=function(e){this.trigger(o.Type_ExternalMonitorMoreOptionClicked,null,e),e===t.CallMoreOption.ShowDtmfKeypad||this.closeWindow(),this.onOpen(e)},o.prototype.setMoreBtnDropdownViewModel=function(){var e;return e={},e[i.DtmfKeypad]={name:"dtmfKeypad",value:this.$translate.instant(this.resources.strings.calling_open_dtmf_keypad),enabled:this.showDtmfKeypadOption()},e[i.HoldCall]={name:"hold",value:this.$translate.instant(this.resources.strings.calling_hold_call),enabled:this.showHoldOption()},e[i.TransferCall]={name:"transfer",value:this.$translate.instant(this.resources.strings.calling_transfer_call),enabled:this.showTransferOption()},e[i.ConsultThenTransferCall]={name:"consultation",value:this.$translate.instant(this.resources.strings.calling_consultThenTransfer),enabled:this.showConsultationOption()},e},o.prototype.showTransferOption=function(){return!!this.monitoredCall&&(1===this.monitoredCall.teamsCallType&&this.advancedSettings.isCallTransferEnabled)},o.prototype.showConsultationOption=function(){return!1},o.prototype.showDtmfKeypadOption=function(){return!!this.monitoredCall&&(1===this.monitoredCall.teamsCallType&&this.advancedSettings.isDtmfEnabled)},o.prototype.showHoldOption=function(){return!!this.monitoredCall&&(this.callingConversation.isOneToOne()&&this.advancedSettings.isHoldResumeEnabled)},o.prototype.showMoreBtn=function(){return!this.isCallFromChildWindow(this.monitoredCall)&&!this.monitoredCall.isScreenshareFromChat&&(this.showTransferOption()||this.showConsultationOption()||this.showDtmfKeypadOption()||this.showHoldOption())},o.Type_ExternalMonitorChanged="call-external-monitor-changed",o.Type_ExternalMonitorMoreOptionClicked="call-external-monitor-more-option-clicked",o.Type_ExternalMonitorStopScreenshare="call-external-monitor-stop-screenshare",o}(SkypeX.Services.ObservableBase);t.CallMonitorServiceElectronImplementation=o,angular.module("teamspace.callMonitorService",["teamspace.constants","teamspace.callingAgentsService","teamspace.callingService","teamspace.callingNavigationService","teamspace.callTitleService","teamspace.conversationsService","teamspace.peopleService","skypeX.sxConfig","teamspace.deviceManagerService","teamspace.callTogglingService","teamspace.settingsService","teamspace.callingAlertsService","teamspace.callLobbyService","teamspace.callingDurationService","teamspace.utilityService","teamspace.desktopUtilityService","teamspace.authenticationService","skypeX.conversationsStore","teamspace.videoSupportService","teamspace.orchestrationService","teamspace.callingMultiWindowService","teamspace.callingIntentMultiWindowService","teamspace.callingQualityFeedbackService","teamspace.platformDetectService"]).service("callMonitorService",o)}(e.services||(e.services={}))}(teamspace||(teamspace={}));var teamspace;!function(e){!function(e){var t=function(){function t(e,t,i,n,a,o,s,r,c,l,h,d,g){var p=this;this.activeCall=e,this.$q=t,this.constants=i,this.callingTelemetryService=a,this.callingAgentsService=o,this.deviceManagerService=s,this.triggerUpdate=r,this.rigelFrameSinkHelper=c,this.isContentCameraBasedIngestEnabled=l,this.hdmiPluggedIn=h,this.hdmiIngestCamera=d,this.whiteboardCamera=g,this.activeCallUserActivitySubscription=null,this.contentPreviewSource=null,this.startContentPreviewScenario=null,this.startRenderingContentPreviewTimeoutMs=2e4,this.stream={isAvailable:!1,renderer:null,frameSink:null,stream:null,streamSubscription:null},this.logger=n.newLogger("RigelContentCameraPreviewManager"),this.activeCallUserActivitySubscription=e.on("userActivityChanged",function(){p.checkCallSharing()})}return t.prototype.init=function(){this.hdmiPluggedIn&&(this.logger.info("HDMI ingest source has already been plugged in, starting preview"),this.startHdmiIngestPreview())},t.prototype.hdmiPluggedInChanged=function(e){this.hdmiPluggedIn=e,this.hdmiPluggedIn&&!this.stream.frameSink?(this.logger.info("HDMI ingest was just plugged in and there is no active content sharing, starting HDMI ingest preview"),this.startHdmiIngestPreview()):!this.hdmiPluggedIn&&this.contentPreviewSource&&1===this.contentPreviewSource.cameraType&&(this.logger.info("We are currently previewing HDMI ingest and the cable was just unplugged, disposing preview stream"),this.disposeStream())},t.prototype.startPreview=function(t){var i=this;if(this.logger.info("Starting preview for "+JSON.stringify(t)),this.stream.frameSink)return this.logger.warn("Active framesink already exists, not starting preview"),Promise.resolve();if(1===t.cameraType&&!this.isContentCameraBasedIngestEnabled)return this.logger.info("Content camera-based HDMI ingest is not enabled, not starting preview"),Promise.resolve();var n={contentType:t.cameraType};this.startContentPreviewScenario=this.callingTelemetryService.newCallingScenario(this.activeCall,this.constants.scenarios.calling.rigelStartContentCameraPreview,n,this.startRenderingContentPreviewTimeoutMs),this.contentPreviewSource=t;var a=this.rigelFrameSinkHelper.createVirtualRenderer();return this.stream.frameSink=a.getFrameSink(),this.stream.frameSink?this.callingAgentsService.deviceManager.createPreview({renderer:a},{kind:"camera",device:t.cameraId},{scalingMode:1,transparent:!1,ignoreMirroring:!0}).then(function(e){i.logger.info("Content camera preview created successfully, framesink name: "+i.stream.frameSink.getBufferName()),i.startContentPreviewScenario.stop(),i.stream.renderer=e,i.rendererChangedSubscription=e.changed(function(){return i.previewRendererChanged}),i.triggerUpdate()}).catch(function(t){var n=e.CallingTelemetryService.getErrorMessage(t);i.logger.error("Error while starting the content camera preview: "+n),i.startContentPreviewScenario.fail({errorInfo:n}),i.disposeStream()}):(this.startContentPreviewScenario.fail({errorInfo:"Unable to create virtual renderer"}),Promise.reject("Virtual renderer was not created properly, unable to start preview"))},t.prototype.startHdmiIngestPreview=function(){var e=this;return this.deviceManagerService.getHdmiIngestCameraAsync().then(function(t){return t?e.startPreview({cameraId:t.getDeviceId(),cameraType:1}):e.$q.reject("Could not find HDMI ingest camera")})},t.prototype.previewRendererChanged=function(){this.stream.renderer.isRendering&&(this.stream.isAvailable=!0,this.disposeRendererChangedSubscription())},t.prototype.checkCallSharing=function(){if(!this.activeCall.isScreenSharingOn&&this.stream.renderer&&1!==this.contentPreviewSource.cameraType)this.logger.info("Non-HDMI content sharing was stopped, disposing current preview"),this.disposeStream(),this.hdmiPluggedIn&&(this.logger.info("Content sharing was stopped but HDMI source is still plugged in, starting HDMI ingest preview"),this.startHdmiIngestPreview());else if(this.activeCall.isScreenSharingOn&&(!this.contentPreviewSource||1===this.activeCall.sharingSourceType||this.activeCall.cameraSharingSourceId!==this.contentPreviewSource.cameraId)){if(this.stream.frameSink&&this.disposeStream(),1===this.activeCall.sharingSourceType)return void this.logger.info("Doing screen scraping, no content preview to start");var e=void 0;if(this.activeCall.cameraSharingSourceId.contains(this.hdmiIngestCamera.deviceId))e=1;else{if(!this.activeCall.cameraSharingSourceId.contains(this.whiteboardCamera.deviceId))return void this.logger.error("Current shared camera "+this.activeCall.cameraSharingSourceId+" does not match ingest or whiteboard cameras");e=0}this.startPreview({cameraId:this.activeCall.cameraSharingSourceId,cameraType:e})}},t.prototype.getStream=function(){return this.stream},t.prototype.disposeRendererChangedSubscription=function(){this.rendererChangedSubscription&&this.rendererChangedSubscription.dispose()},t.prototype.disposeStream=function(){this.startContentPreviewScenario&&(this.startContentPreviewScenario.cancel(),this.startContentPreviewScenario=null),this.disposeRendererChangedSubscription(),this.stream.isAvailable=!1,this.contentPreviewSource=null,this.rigelFrameSinkHelper.disposeFrameSink(this.stream),this.rigelFrameSinkHelper.disposeStream(this.stream),this.triggerUpdate()},t.prototype.dispose=function(){this.disposeStream(),this.activeCallUserActivitySubscription&&this.activeCallUserActivitySubscription.dispose()},t}();e.RigelContentCameraPreviewManager=t}(e.services||(e.services={}))}(teamspace||(teamspace={}));var teamspace;!function(e){!function(e){var t=function(){function t(e,t,i,n,a,o,s,r,c,l,h,d,g,p,u,v,S,f,m,y,C){this.call=e,this.$q=t,this.constants=i,this.loggingService=n,this.callingMultiWindowService=a,this.pushDataEventDispatcher=o,this.windowSyncDataService=s,this.callingAgentsService=r,this.autoScreenSharing=c,this.deviceManagerService=l,this.hdmiPluggedIn=h,this.hdmiIngestCamera=d,this.whiteboardCamera=g,this.callingTelemetryService=u,this.$rootScope=v,this.diagnosticsActionService=S,this.$translate=f,this.resources=m,this.callingAlertsService=y,this.windowTypes=C,this.autoScreenSharingInitialized=!1,this.contentCameraPreviewManagerInitialized=!1,this.isIncomingCall=!1,this.logger=n.newLogger("RigelMultiWindowCallManager"),this.rigelSettings=p.valueFor(i.settings.names.rigel),this.isIncomingCall=1===e.state,this.init()}return t.prototype.init=function(){var e=this;this.initializeServices(),this.openWindows().then(function(){e.logInfo("Windows created successfully")}).catch(function(t){e.logError("Error creating windows: "+t)})},t.prototype.initializeServices=function(){var t=this;this.rigelFrameSinkHelper=new e.RigelFrameSinkHelper(this.pushDataEventDispatcher,this.windowSyncDataService,this.constants,this.callingAgentsService,this.logger),this.rigelAutoScreenShare=new e.RigelAutoScreenShare(this.$q,this.call,this.autoScreenSharing,this.logger,this.constants,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.rigelSettings,this.loggingService,this.callingTelemetryService,this.$translate,this.callingAlertsService,this.resources),this.rigelContentCameraPreviewManager=new e.RigelContentCameraPreviewManager(this.call,this.$q,this.constants,this.loggingService,this.callingTelemetryService,this.callingAgentsService,this.deviceManagerService,function(){return t.sendUpdate()},this.rigelFrameSinkHelper,!0,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera)},t.prototype.openWindows=function(){var e=this;this.windowTypes.length||this.logWarn("Cannot open external windows because there are not enough monitors");var t=[];return this.windowTypes.forEach(function(i){return t.push(e.openWindow(i))}),this.$q.all(t)},t.prototype.openWindow=function(e){var t={windowType:e};return this.callingMultiWindowService.popoutCall(this.call,this.constants.events.multiWindow.entryPoints.rigelConsole,t)},t.prototype.sendUpdate=function(){var e=this.rigelContentCameraPreviewManager.getStream(),t=e.frameSink?e.frameSink.getBufferName():null;this.currentContentPreviewFrameSink!=t&&(this.currentContentPreviewFrameSink=t,this.logInfo("sending contentCameraSharingChanged with frameSinkName="+this.currentContentPreviewFrameSink),this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.contentCameraSharingChanged,this.currentContentPreviewFrameSink))},t.prototype.onContentCameraSharingSubscriptionRegistered=function(){var e=this;if(this.logInfo("onContentCameraSharingSubscriptionRegistered, initializing related services"),this.contentCameraPreviewManagerInitialized)return this.logInfo("content camera sharing already initialized, sending contentCameraSharingChanged with frameSinkName="+this.currentContentPreviewFrameSink),void this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.contentCameraSharingChanged,this.currentContentPreviewFrameSink);if(this.contentCameraPreviewManagerInitialized=!0,this.rigelContentCameraPreviewManager.init(),3===this.call.state)this.initializeAutoScreenSharing();else var t=this.call.on("callStateChanged",function(){3===e.call.state&&(e.initializeAutoScreenSharing(),t.dispose())})},t.prototype.initializeAutoScreenSharing=function(){this.autoScreenSharingInitialized||this.isIncomingCall||(this.logInfo("initializing auto screen sharing"),this.rigelAutoScreenShare.evaluateAutoScreenSharing()),this.autoScreenSharingInitialized=!0},t.prototype.updateHdmiPluggedIn=function(e){this.hdmiPluggedIn!=e&&(this.logInfo("HDMI plugged in state changed to: "+e),this.hdmiPluggedIn=e,this.rigelAutoScreenShare.hdmiPluggedInChanged(e),this.rigelContentCameraPreviewManager.hdmiPluggedInChanged(e),this.sendUpdate())},t.prototype.updateHdmiIngestCamera=function(e){this.logInfo("HDMI ingest camera changed to: "+JSON.stringify(e)),this.hdmiIngestCamera=e,this.sendUpdate()},Object.defineProperty(t.prototype,"isDisconnecting",{get:function(){return!!this.disposeDefer},enumerable:!0,configurable:!0}),t.prototype.onCallDisconnecting=function(){return this.disposeDefer||(this.logInfo("onCallDisconnecting"),this.disposeDefer=this.$q.defer(),this.handleDisconnectingState()),this.disposeDefer.promise},t.prototype.handleDisconnectingState=function(){this.downloadLogs(),this.dispose()},t.prototype.downloadLogs=function(){var e=this,t=setTimeout(function(){t=null,e.logInfo("Logs download timed out"),e.disposeDefer.resolve()},3e3);this.diagnosticsActionService.download().finally(function(){if(e.logInfo("Logs download complete"),!t)return e.logInfo("Log download time out already occurred"),e.$q.resolve();clearTimeout(t),e.disposeDefer.resolve()})},t.prototype.logInfo=function(e){this.logger.info(e+", callId = "+this.call.callId)},t.prototype.logWarn=function(e){this.logger.warn(e+", callId = "+this.call.callId)},t.prototype.logError=function(e){this.logger.error(e+", callId = "+this.call.callId)},t.prototype.dispose=function(){this.rigelContentCameraPreviewManager.dispose()},t}();e.RigelMultiWindowCallManager=t}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),teamspace;!function(e){!function(t){var i=function(i){function n(e,n,a,o,s,r,c,l,h,d,g,p){var u=i.call(this)||this;return u.loggingService=e,u.$q=n,u.$rootScope=a,u.eventingService=o,u.constants=s,u.settingsService=r,u.rigelServiceHandler=c,u.rigelNavigationService=l,u.callingQualityFeedbackService=h,u.callRingingService=d,u.callTogglingService=g,u.meetingPolicySettingsStore=p,u.teamsState=t.TeamsCallState.Idle,u.autoExitingMeeting=!1,u.defaultCallDisposedTimeOut=3e3,u.logger=e.newLogger("RigelCallHandler"),u.rigelSettings=r.valueFor(s.settings.names.rigel),u.callDisposedTimer=null,u.callDisposedTimeOut=u.rigelSettings.callDisposedTimeout?u.rigelSettings.callDisposedTimeout:u.defaultCallDisposedTimeOut,u}return __extends(n,i),n.$inject=["loggingService","$q","$rootScope","eventingService","constants","settingsService","rigelServiceHandler","rigelNavigationService","callingQualityFeedbackService","callRingingService","callTogglingService","meetingPolicySettingsStore"],n.prototype.init=function(){return this.$q.when(this.initHandler())},n.prototype.initHandler=function(){var e=this;this.rigelServiceHandler.appReadyPromise.then(function(){e.eventingService.$on(e.$rootScope,e.constants.events.calling.callCreated,e.monitor.bind(e)),e.eventingService.$on(e.$rootScope,e.constants.events.calling.callDisposed,e.callDisposed.bind(e)),e.eventingService.$on(e.$rootScope,e.constants.events.rigel.service.eventTypes.autoExitMeetingUserActionEvent,function(t,i){return e.shouldAutoExitMeeting(i)}),e.eventingService.$on(e.$rootScope,e.constants.events.calling.callEscalated,e.onCallEscalated.bind(e))})},n.prototype.callDisposed=function(e,t){this.onCallDisposed(t)},n.prototype.getCurrentTeamsState=function(){return this.teamsState},n.prototype.monitor=function(e,i){var n=this;i&&([6,7].includes(i.state)?this.logger.error("Received call created callId="+i.callId+" with state="+t.CallUtilities.stringifyCallState(i.state)+". Will not monitor."):(this.logger.info("New call created callId="+i.callId),this.monitoredCall&&i.callId===this.monitoredCall.callId||(this.monitoredCall&&![7,0].includes(this.monitoredCall.state)?(this.logger.info("Rejecting newly created call since there is already a monitored call\n            in state="+t.CallUtilities.stringifyCallState(this.monitoredCall.state)),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInATeamsMeeting)):this.monitoredCall&&7===this.monitoredCall.state&&this.callDisposedTimer?(this.logger.info("Rejecting newly created call while call is disposing and in state="+t.CallUtilities.stringifyCallState(this.monitoredCall.state)),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInACallDisposing)):this.teamsState===t.TeamsCallState.PostCall?(this.logger.info("Rejecting newly created call due to post call now"),this.rejectCall(i,this.constants.scenarios.calling.reasons.autoRejectInAPostCall)):(this.monitoredCallSubscription&&this.monitoredCallSubscription.dispose(),this.logger.info("reset call disposed timer"),this.callDisposedTimer=null,this.callDisposedScenario=null,this.webLogDownloadDefer=this.$q.defer(),this.monitoredCallSubscription=i.on("callStateChanged",function(){return n.onCallStateChanged(i)}),this.monitoredCall=i,this.onCallStateChanged(i)))))},n.prototype.getWebLogDownloadDeferred=function(){return this.webLogDownloadDefer},n.prototype.onCallStateChanged=function(e){var i=this;switch(this.logger.info("onCallStateChanged to call.state:"+t.CallUtilities.stringifyCallState(e.state)),_.includes([6,7],e.state)||this.checkIfVideoAllowed(),e.state){case 2:this.updateTeamsState(t.TeamsCallState.InACall,"onCallStateChanged",e);break;case 7:null===this.callDisposedTimer&&null!==this.monitoredCall&&(this.logger.info("registering call disposed timer and timeout = "+this.callDisposedTimeOut),this.createCallDisposedScenario(),this.callDisposedScenario.mark("timer_start"),this.callDisposedTimer=setTimeout(function(){return i.onCallDisposed(e)},this.callDisposedTimeOut));break;case 1:this.onCallStateNotified(e)}},n.prototype.createCallDisposedScenario=function(){null===this.callDisposedScenario&&(this.callDisposedScenario=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.callDisposed,null,null,this.callDisposedTimeOut+2e3))},n.prototype.updateTeamsState=function(e,i,n){if(void 0===n&&(n=null),this.teamsState!==e){(e===t.TeamsCallState.InACall&&this.teamsState!=t.TeamsCallState.Incoming||e===t.TeamsCallState.Incoming)&&this.$rootScope.$broadcast(this.constants.events.rigel.call.eventTypes.callCreated,n);var a=this.teamsState;this.teamsState=e,this.rigelServiceHandler.updateTeamsCallState(this.teamsState,i),this.logger.info("TeamsCallState updated: "+t.TeamsCallState[a]+" ("+a+") ---\x3e "+t.TeamsCallState[e]+" ("+e+"), reason: "+i)}},n.prototype.onCallDisposed=function(e){if(this.monitoredCall)if(this.logger.info("onCallDisposed called, this.monitoredCall.callId = "+this.monitoredCall.callId+", call.callId = "+e.callId),this.monitoredCall.callId===e.callId){if(7!==e.state||e.setupArgs.isProbeCall||this.callRingingService.playCallDisconnectedAudio(),this.callDisposedTimer&&(this.logger.info("clearing callDisposedTimer"),clearTimeout(this.callDisposedTimer),this.callDisposedTimer=null),this.monitoredCallSubscription&&(this.monitoredCallSubscription.dispose(),this.monitoredCallSubscription=null),this.monitoredCall=null,this.createCallDisposedScenario(),this.callDisposedScenario.stop(),this.rigelSettings.enableCQF&&this.teamsState===t.TeamsCallState.InACall&&!this.autoExitingMeeting){this.logger.info("try to get questionnaire by call id = "+e.callId);var i=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.getQuestionnaireForCqf),n=this.callingQualityFeedbackService.getQuestionnaire(e.callId);if(n)switch(i.stop(),n.type){case t.FeedbackType.Quality:return this.logger.info("navigate to post call page"),this.updateTeamsState(t.TeamsCallState.PostCall,"onCallStateDisconnected"),this.webLogDownloadDefer.resolve(),void this.rigelNavigationService.navigateToPostCallPage(e.callId);case t.FeedbackType.ShortDurationHangup:this.logger.info("CQF enabled, but its too short to show CQF"),this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.callingQualityFeedbackShortDuration).stop();break;default:this.logger.warn("unhandled feedback type and navigate to default = "+n.type)}else i.fail(),this.logger.error("cant get questionnaire")}this.logger.info("update teams call state idle"),this.updateTeamsState(t.TeamsCallState.Idle,"onCallStateDisconnected"),this.autoExitingMeeting=!1,this.webLogDownloadDefer.reject()}else this.logger.error("call disposed event with different call id");else this.logger.info("monitoredCall is null")},n.prototype.onCallStateNotified=function(e){if(this.rigelServiceHandler.sfbState===t.SfBState.Idle){var i=this.settingsService.valueFor(this.constants.settings.names.rigel);i.enableIncomingCall&&2===e.teamsCallType||i.enableIncomingP2P&&1===e.teamsCallType?(this.$rootScope.$broadcast(this.constants.events.rigel.call.eventTypes.attemptAutoJoin,e),this.updateTeamsState(t.TeamsCallState.Incoming,"onCallStateNotified",e)):this.logger.info("Incoming call of type "+e.teamsCallType+" is not enabled on this build.")}else this.logger.info("Will reject incoming because SfB is already in a call."),this.rejectCall(e,this.constants.scenarios.calling.reasons.autoRejectInAnSfbMeeting)},n.prototype.rejectCall=function(e,i){e.reject();var n=t.TeamsCallService.getTeamsCallIdAsString(e.teamsCallId),a=this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingCall,n)||this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingPstnCall,n)||this.loggingService.findScenarioByNameAndId(this.constants.scenarios.calling.incomingInteropCall,n);a&&a.cancel({reason:i})},n.prototype.shouldAutoExitMeeting=function(t){this.autoExitingMeeting=t===e.services.RigelAutoExitMeetingUserAction.Leave},n.prototype.onCallEscalated=function(e,t){var i=this;this.logger.info("Escalating Event Recieved. Call is escalated and navigating to Console State."),this.logger.info("Escalated Call ID="+t.teamsCallId+" Conversation ID="+t.conversationId),t.getMeetingDetails().then(function(e){i.logger.info("Meeting details available after call escalated"),_.includes([6,7],t.state)||i.checkIfVideoAllowed()}).catch(function(){i.logger.error("Failed in getting meeting details for call: "+t.callId)});var n=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.callEscalated);this.rigelNavigationService.navigateToRigelConsoleState(n,t.conversationId,void 0,t.teamsCallId,void 0).then(function(){return n.stop()}).catch(function(){n.fail()})},n.prototype.checkIfVideoAllowed=function(){!this.isVideoAllowed()&&this.monitoredCall.isVideoOn&&(this.logger.info("Toggling video to off because video is disabled by policy"),this.callTogglingService.toggleVideo(this.monitoredCall,this.constants.scenarios.calling.context.rigelConsoleScreen))},n.prototype.isVideoAllowed=function(){var e=!0;return e=!!this.meetingPolicySettingsStore.getSettingValue(SkypeX.Services.MeetingPolicySettingsStorageKey.allowIPVideo),this.logger.info("Local allowIPVideo meeting policy: "+e),this.monitoredCall&&(this.monitoredCall.meetingDetails&&this.monitoredCall.meetingDetails.meetingCapability&&!this.monitoredCall.meetingDetails.meetingCapability.allowIPVideo&&(this.logger.info("AllowIPVideo is false for meeting organizer"),e=!1),this.monitoredCall.isEmergencyCall&&(this.logger.info("Video not allowed for emergency call"),e=!1)),e},n}(SkypeX.Services.ObservableBase);t.RigelCallHandlerImplementation=i,angular.module("teamspace.rigelCallHandler",["teamspace.constants","teamspace.loggingService","teamspace.settingsService","teamspace.eventingService","teamspace.rigelServiceHandler","teamspace.rigelNavigationService","teamspace.callingQualityFeedbackService"]).service("rigelCallHandler",i)}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++){t=arguments[i];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)},teamspace;!function(e){!function(t){var i=function(i){function n(e,t,n,a,o,s,r,c,l,h,d,g,p,u,v,S,f,m,y,C,b,T,w,k,I,A,M,_,N,D,E,P,R,$,O){var x=i.call(this)||this;return x.$q=e,x.$injector=t,x.$timeout=n,x.callingAgentsService=a,x.constants=o,x.loggingService=s,x.peopleService=r,x.eventingService=c,x.$rootScope=l,x.appConfig=h,x.settingsService=d,x.contextViewLauncherService=g,x.pushDataEventDispatcher=p,x.windowSyncDataService=u,x.sxConfig=v,x.$translate=S,x.resources=f,x.callingAlertsService=m,x.utilityService=y,x.contentSharingService=C,x.localizationService=b,x.callingTelemetryService=T,x.pstnNumberService=w,x.$window=k,x.lazyLoadService=I,x.diagnosticsActionService=A,x.callingPerfCollectorService=M,x.rigelServiceHandler=_,x.callingMultiWindowService=N,x.deviceManagerService=D,x.rigelCallHandler=E,x.callingParticipantService=P,x.dialogService=R,x.callingService=$,x.calendarService=O,x.autoScreenSharing=!1,x.hdmiPluggedIn=!1,x.externalWindowCount=1,x.connectedDisplayCount=2,x.hdmiIngestAudioDevice=null,x.hdmiIngestCamera=null,x.whiteboardCamera=null,x.autoExitMeetingFeatureEnabled=!1,x.autoExitMeetingEnabled=!1,x.cameraSharingEnabled=!1,x.ingestCameraIdEnabled=!1,x.contentCameraEnhancementEnabled=!1,x.contentCameraInverted=!1,x.roomCameraVideoCaptureConfig=null,x.contentCameraVideoCaptureConfig={},x.teamsAudioSharingEnabled=!1,x.enableUwpAudioIngestPlayback=!1,x.callManagers=[],x.multiWindowCallManagers=[],x.autoExitMeetingManagers=[],x.logger=s.newLogger("RigelCallScreenService.desktop"),x.rigelSetting=d.valueFor(o.settings.names.rigel),x.ingestCameraIdEnabled=k.desktopSettings&&k.desktopSettings[o.events.rigel.desktopSettings.enableRigelIngestCameraId],x.autoExitMeetingFeatureEnabled=k.desktopSettings&&k.desktopSettings[o.events.rigel.desktopSettings.enableRigelAutoExitMeeting],x.cameraSharingEnabled=d.valueAsBoolean(o.settings.names.enableCameraSharing),x.teamsAudioSharingEnabled=k.desktopSettings&&k.desktopSettings[o.events.rigel.desktopSettings.enableRigelTeamsAudioSharing],x}return __extends(n,i),n.$inject=["$q","$injector","$timeout","callingAgentsService","constants","loggingService","peopleService","eventingService","$rootScope","appConfig","settingsService","contextViewLauncherService","pushDataEventDispatcher","windowSyncDataService","sxConfig","$translate","resources","callingAlertsService","utilityService","contentSharingService","localizationService","callingTelemetryService","pstnNumberService","$window","lazyLoadService","diagnosticsActionService","callingPerfCollectorService","rigelServiceHandler","callingMultiWindowService","deviceManagerService","rigelCallHandler","callingParticipantService","dialogService","callingService","calendarService"],n.prototype.init=function(){return this.$q.when(this.initService())},n.prototype.getHdmiPluggedIn=function(){return this.hdmiPluggedIn},n.prototype.getWhiteboardCamera=function(){return this.whiteboardCamera},n.prototype.getHdmiIngestCamera=function(){return this.hdmiIngestCamera},n.prototype.getHdmiIngestAudioDevice=function(){return this.hdmiIngestAudioDevice},n.prototype.getRoomCameraConfig=function(){return this.roomCameraVideoCaptureConfig},n.prototype.getContentCameraConfig=function(){return this.contentCameraVideoCaptureConfig},n.prototype.downloadFoRlog=function(){this.pushDataEventDispatcher.dispatch({actionType:e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_DOWNLOAD_LOG})},n.prototype.getExternalWindowCount=function(){return this.externalWindowCount},n.prototype.getConnectedDisplayCount=function(){return this.connectedDisplayCount},n.prototype.isContentCameraEnhancementEnabled=function(){return this.contentCameraEnhancementEnabled},n.prototype.isTeamsAudioSharingEnabled=function(){return!!this.teamsAudioSharingEnabled},n.prototype.getCurrentWindowTypes=function(){var e=[];return this.externalWindowCount>1&&3===this.connectedDisplayCount?e=[t.RigelWindowType.Gallery,t.RigelWindowType.Content]:this.connectedDisplayCount>=2&&(e=[t.RigelWindowType.GalleryAndContent]),e},n.prototype.initService=function(){this.isHighContrast=this.settingsService.getActiveTheme()===this.constants.themes.highContrast,this.registerListeners()},n.prototype.registerListeners=function(){var i=this;this.eventingService.$on(this.$rootScope,this.constants.events.layout.themeChanged,this.setHighContrast.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.call.eventTypes.callCreated,this.onCallCreated.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.autoScreenSharing,this.onAutoScreenSharingChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.hdmiPluggedIn,this.onHdmiPluggedInChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.userSelectedLayout,this.onUserLayoutSelectionChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.externalWindowCount,this.updateExternalWindowCount.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.connectedDisplayCount,this.updateConnectedDisplayCount.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.frontOfRoomWindowsSwapDone,this.onFrontOfRoomWindowsSwapDone.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.onHdmiIngestCameraChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.disableTeamsAudioSharing,this.onDisableTeamsAudioSharingChanged.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.contentCameraSharingSubscriptionRegistered,this.onContentCameraSharingSubscriptionRegistered.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.whiteboardCamera,this.onWhiteboardCameraChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraEnhancementEnabled,this.onContentCameraEnhancementEnabledChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraInverted,this.onContentCameraInvertedChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.roomCameraCaptureConfig,this.onRoomCameraCaptureConfigChanged.bind(this)),this.eventingService.$on(this.$rootScope,this.constants.events.rigel.service.eventTypes.contentCameraCaptureConfig,this.onContentCameraCaptureConfigChanged.bind(this)),e.services.MTMASubscriptionUtility.subscribe(this.rigelServiceHandler,function(e,t){i.onRigelServiceEventReceived(t)},t.RigelServiceHandlerEvents.onRigelServiceEvent),this.windowSyncDataService.registerPush(this.OnTelemetryEventFired.bind(this),[e.shared.PushDataActionType.TELEMETRY_SCENARIO_DATA_EMIT]),this.windowSyncDataService.registerRequest(this.onProxyRequest.bind(this),[e.shared.RequestDataActionType.EXTERNAL_CALLING_SCREEN_SERVICE_PROXY]),this.windowSyncDataService.registerRequest(this.emitPowerPointSlidesCount.bind(this),[e.shared.RequestDataActionType.EXTERNAL_CALLING_SCREEN_GET_PRESENTATION_SLIDES_COUNT]),this.deviceManagerService.whenInitialized().then(function(){i.deviceManagerSubscription=i.deviceManagerService.subscribe(i.onDeviceChanged.bind(i),i.constants.events.calling.devicesChanged),i.onDeviceChanged()}),this.externalWindowCount=this.rigelServiceHandler.getExternalWindowCount()},n.prototype.getPromiseResult=function(e){return e.then(function(e){return{result:e,resolved:!0}}).catch(function(e){return{error:e,resolved:!1}})},n.prototype.invokeServiceMethod=function(e,t,i){var n=this,a=this.$q.resolve(!0).then(function(){var a=n.$injector.get(e);return(t?a[t]:a).apply(a,i)});return this.getPromiseResult(a)},n.prototype.onProxyRequest=function(t){var i=this;return this.invokeServiceMethod(t.service,t.method,t.args).then(function(n){i.pushDataEventDispatcher.dispatch({actionType:e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_SERVICE_PROXY_REPLY,payload:{result:n.resolved?n.result:n.error,resolved:n.resolved,id:t.id}})}),this.$q.when()},n.prototype.emitPowerPointSlidesCount=function(e){this.eventingService.$emit(this.constants.events.rigel.service.eventTypes.frontOfRoomPptSlidesCount,e)},n.prototype.setHighContrast=function(e,t){var i=this;this.isHighContrast=t===this.constants.themes.highContrast,this.callManagers.forEach(function(e){return e.manager.updateHighContrast(i.isHighContrast)})},n.prototype.onRigelServiceEventReceived=function(e){e.type===this.constants.events.rigel.service.eventTypes.autoExitMeetingEnabled&&(this.autoExitMeetingEnabled=!!e.data,this.logger.info("Received an auto-exit-meeting-enabled event "+this.autoExitMeetingEnabled))},n.prototype.onAutoScreenSharingChanged=function(e,t){this.logger.info("Auto screen-sharing set to "+t),this.autoScreenSharing=t},n.prototype.onHdmiPluggedInChanged=function(e,t){var i=this;this.hdmiPluggedIn=t,this.callManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(i.hdmiPluggedIn)}),this.multiWindowCallManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(i.hdmiPluggedIn)}),this.autoExitMeetingManagers.forEach(function(e){return e.manager.updateHdmiPluggedIn(i.hdmiPluggedIn)})},n.prototype.onHdmiIngestCameraChanged=function(e,t){var i=this;this.hdmiIngestCamera=t,this.ingestCameraIdEnabled&&(this.deviceManagerService.setHdmiIngestCameraId(t.deviceId),this.updateHdmiIngestAudioDevice()),this.callManagers.forEach(function(e){return e.manager.updateHdmiIngestCamera(i.hdmiIngestCamera)}),this.multiWindowCallManagers.forEach(function(e){return e.manager.updateHdmiIngestCamera(i.hdmiIngestCamera)})},n.prototype.onWhiteboardCameraChanged=function(e,t){this.whiteboardCamera=t,this.cameraSharingEnabled&&this.deviceManagerService.setWhiteboardCameraId(t?t.deviceId:null)},n.prototype.onContentCameraEnhancementEnabledChanged=function(e,t){this.contentCameraEnhancementEnabled=t},n.prototype.onContentCameraInvertedChanged=function(e,t){this.contentCameraInverted=t},n.prototype.onRoomCameraCaptureConfigChanged=function(e,t){this.logger.info("New room camera capture config override found: "+JSON.stringify(t)),this.roomCameraVideoCaptureConfig=t},n.prototype.onContentCameraCaptureConfigChanged=function(e,t){this.logger.info("New content camera capture config override found: "+JSON.stringify(t)),this.contentCameraVideoCaptureConfig=t},n.prototype.onDisableTeamsAudioSharingChanged=function(e,t){this.logger.info("Disable Teams Audio Sharing has changed to: "+t),this.teamsAudioSharingEnabled=this.teamsAudioSharingEnabled&&!t},n.prototype.onDeviceChanged=function(){this.updateHdmiIngestAudioDevice(),this.hdmiIngestAudioDevice&&this.deviceManagerService.unsubscribe(this.deviceManagerSubscription)},n.prototype.initializeWhiteboardCamera=function(){var e=this;if(this.cameraSharingEnabled&&this.whiteboardCamera){var t=this.contentCameraEnhancementEnabled?96:0;this.contentCameraVideoCaptureConfig.orientationOffset=this.contentCameraInverted?180:0,this.deviceManagerService.getWhiteboardCameraAsync().then(function(i){if(i){var n=e.deviceManagerService.setWhiteboardEffectsOnDevice(i.getDeviceId(),t,e.constants.scenarios.calling.context.rigelConfigureWhiteboardCamera).catch(function(t){e.logger.error("Failed to set whiteboard effects: "+t)}),a=e.deviceManagerService.setVideoCaptureConfigOnDevice(i.getDeviceId(),e.contentCameraVideoCaptureConfig,e.constants.scenarios.calling.context.rigelConfigureWhiteboardCamera).catch(function(t){e.logger.error("Failed to set capture config on whiteboard camera: "+t)});return Promise.all([n,a])}e.logger.error("Unable to find whiteboard camera with ID: "+e.whiteboardCamera.deviceId)}).then(function(){return e.logger.info("Whiteboard camera initialization completed")}).catch(function(t){return e.logger.error("Error occurred during whiteboard camera initialization: "+JSON.stringify(t))})}else this.logger.info("Camera sharing is not currently supported")},n.prototype.onUserLayoutSelectionChanged=function(e,t){this.callManagers.forEach(function(e){return e.manager.updateUserSelectedLayout(t)})},n.prototype.updateExternalWindowCount=function(e,t){this.externalWindowCount=t,this.logger.info("externalWindowCount updated to value="+this.externalWindowCount)},n.prototype.updateConnectedDisplayCount=function(e,t){var i=this.$window.desktopSettings?this.$window.desktopSettings.rigelWindowOptions||{}:{};if(i&&Object.keys(i).length)this.connectedDisplayCount=3;else{this.connectedDisplayCount=t,this.logger.info("connected display count changed, externalWindowCount="+this.externalWindowCount+", connectedDisplayCount="+this.connectedDisplayCount);var n=this.createNewScenario(this.constants.events.rigel.service.scenarios.connectedDisplayCount);this.displaysDisconnected?n.mark("some_monitors_disconnected",{context:"{externalWindowCount="+this.externalWindowCount+", connectedDisplayCount="+this.connectedDisplayCount+"}"}):n.mark("all_monitors_connected"),n.stop(),this.updateConnectedDisplayAlert()}},n.prototype.updateHdmiIngestAudioDevice=function(){var e=this;if(this.hdmiIngestCamera&&!this.hdmiIngestAudioDevice){this.logger.info("Searching for hdmi ingest's audio device for camera: "+JSON.stringify(this.hdmiIngestCamera));var t=this.deviceManagerService.getMicrophones().find(function(t){return e.hdmiIngestCamera.pid.toString()==t.productId&&e.hdmiIngestCamera.vid.toString()==t.vendorId});t?(this.hdmiIngestAudioDevice=t,this.logger.info("Found hdmi ingest audio device: "+JSON.stringify(this.hdmiIngestAudioDevice)),this.deviceManagerService.selectDevices({audioIngestDevice:this.hdmiIngestAudioDevice.id})):this.logger.info("No hdmi ingest audio device found")}},n.prototype.updateEnableUwpAudioIngestPlaybackState=function(e,t){void 0===t&&(t=!1);var i=!0;this.isTeamsAudioSharingEnabled()&&e&&this.isCallSharing(e)&&!t&&![6,7].includes(e.state)&&(i=!1),this.enableUwpAudioIngestPlayback!=i&&(this.logger.info("Enable Uwp Audio Ingest Playback has changed to "+i),this.enableUwpAudioIngestPlayback=i,this.eventingService.$emit(this.constants.events.rigel.service.eventTypes.enableUwpAudioIngestPlayback,i))},n.prototype.isCallSharing=function(e){if(!e)return!1;var t=e.isScreenSharingOn,i=t||_.some(e.participants,function(e){return _.some(e.streams[1],function(e){return e.isAvailable})}),n=e.contentSharingSessions.length>0;return t||i||n},n.prototype.onFrontOfRoomWindowsSwapDone=function(){this.logger.info("FoR window swap done event received, hdmiPluggedIn="+this.hdmiPluggedIn),this.hdmiPluggedIn&&this.callManagers.forEach(function(e){return e.manager.requestIngestRegionUpdate()})},n.prototype.onCallCreated=function(e,t){this.logger.info("New call created: callId = "+t.callId),this.rigelServiceHandler.multiWindowEnabled?this.initMultiWindowCallManager(t):this.initCallManager(t),this.autoExitMeetingFeatureEnabled&&this.autoExitMeetingEnabled&&this.initAutoExitMeetingManager(t),this.updateConnectedDisplayAlert(),this.initializeWhiteboardCamera()},n.prototype.initCallManager=function(e){var i=this,n=new t.RigelFrontOfRoomCallManager(e,this.$rootScope,this.$q,this.constants,this.settingsService,this.windowSyncDataService,this.eventingService,this.contextViewLauncherService,this.loggingService,this.appConfig,this.pushDataEventDispatcher,this.callingAlertsService,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera,this.autoScreenSharing,this.isHighContrast,this.callingTelemetryService,this.sxConfig,this.contentSharingService,this.localizationService,this.$window,this.$translate,this.resources,this.utilityService,this.peopleService,this.pstnNumberService,this.callingAgentsService,this.lazyLoadService,this.callingPerfCollectorService,this.getCurrentWindowTypes()),a=this.utilityService.generateUUID();this.callManagers.push({id:a,manager:n,subscription:e.changed(function(){return i.onCallChanged(a,e)})}),this.logger.info("initCallManager: calls in manager="+this.callManagers.map(function(e){return e.manager.call.callId}))},n.prototype.initMultiWindowCallManager=function(e){var i=this,n=new t.RigelMultiWindowCallManager(e,this.$q,this.constants,this.loggingService,this.callingMultiWindowService,this.pushDataEventDispatcher,this.windowSyncDataService,this.callingAgentsService,this.autoScreenSharing,this.deviceManagerService,this.hdmiPluggedIn,this.hdmiIngestCamera,this.whiteboardCamera,this.settingsService,this.callingTelemetryService,this.$rootScope,this.diagnosticsActionService,this.$translate,this.resources,this.callingAlertsService,this.getCurrentWindowTypes().map(function(e){return t.DevicesWindowType[e]})),a=this.utilityService.generateUUID();this.multiWindowCallManagers.push({id:a,manager:n,subscription:e.changed(function(){return i.onMultiWindowCallChanged(a,e)})}),this.logger.info("initMultiWindowCallManager: calls in manager="+this.multiWindowCallManagers.map(function(e){return e.manager.call.callId}))},n.prototype.initAutoExitMeetingManager=function(e){var i=this,n=new t.RigelAutoExitMeetingManager(e,this.$q,this.$rootScope,this.$timeout,this.calendarService,this.callingService,this.callingParticipantService,this.constants,this.dialogService,this.eventingService,this.hdmiPluggedIn,this.loggingService,this.settingsService),a=this.utilityService.generateUUID();this.autoExitMeetingManagers.push({id:a,manager:n,subscription:e.changed(function(){return i.onAutoExitMeetingCallChanged(a,e)})}),this.logger.info("initAutoExitMeetingManager: calls in manager="+this.autoExitMeetingManagers.map(function(e){return e.manager.call.callId}))},n.prototype.onCallChanged=function(e,t){var i=this,n=this.callManagers.find(function(t){return t.id==e});if(n&&!n.manager.isDisconnecting){if([6,7].includes(t.state)){var a=this.rigelSetting.enableCQF?this.rigelCallHandler.getWebLogDownloadDeferred():null;n.manager.onCallDisconnecting().then(function(){n.subscription.dispose(),_.remove(i.callManagers,function(t){return t.id==e}),i.logger.info("Manager removed, callId="+t.callId+", remaining calls in manager="+i.callManagers.map(function(e){return e.manager.call.callId}))}).finally(function(){i.webLogDownload(a)})}n.manager.onCallChanged(t),this.updateEnableUwpAudioIngestPlaybackState(t)}else this.updateEnableUwpAudioIngestPlaybackState(t,!0)},n.prototype.webLogDownload=function(e){var t=this;e?e.promise.then(function(){t.logger.info("download web log after CQF")}).catch(function(){t.logger.warn("webLogDefer rejected and just download web log now"),t.diagnosticsActionService.download()}):(this.logger.info("webLogDefer is null just download web log now"),this.diagnosticsActionService.download())},n.prototype.onMultiWindowCallChanged=function(e,t){var i=this,n=this.multiWindowCallManagers.find(function(t){return t.id===e});if(n&&!n.manager.isDisconnecting){if([6,7].includes(t.state)){var a=this.rigelSetting.enableCQF?this.rigelCallHandler.getWebLogDownloadDeferred():null;n.manager.onCallDisconnecting().then(function(){n.subscription.dispose(),_.remove(i.multiWindowCallManagers,function(t){return t.id===e}),i.logger.info("Manager removed, callId="+t.callId+", remaining calls in manager="+i.multiWindowCallManagers.map(function(e){return e.manager.call.callId}))}).finally(function(){i.webLogDownload(a)})}this.updateEnableUwpAudioIngestPlaybackState(t)}else this.updateEnableUwpAudioIngestPlaybackState(t,!0)},n.prototype.onAutoExitMeetingCallChanged=function(e,t){var i=this.autoExitMeetingManagers.find(function(t){return t.id===e});i&&[6,7].includes(t.state)&&(i.manager.dispose(),i.subscription.dispose(),_.remove(this.autoExitMeetingManagers,function(t){return t.id===e}),this.logger.info("AutoExitManager removed, callId="+t.callId+", remaining calls in manager="+this.autoExitMeetingManagers.map(function(e){return e.manager.call.callId})))},n.prototype.onContentCameraSharingSubscriptionRegistered=function(){this.multiWindowCallManagers.forEach(function(e){return e.manager.onContentCameraSharingSubscriptionRegistered()})},n.prototype.createNewScenario=function(e,t,i){this.logger.info("new scenario created for "+e+" telemetry");var n=this.loggingService.newScenario(e,null,null,i,!0);return n.clientId=this.utilityService.generateUUID(),n.appendEventData(__assign({},t)),n},n.prototype.getOrCreateScenario=function(e){var t=this.loggingService.findScenario(e);return t||(this.logger.info("cant find scenario start and create new one for hdmi"),t=this.createNewScenario(e)),t},n.prototype.OnTelemetryEventFired=function(e){var t=e.data,i=t.scenarioName,n=t.step,a=t.status,o=t.eventData||{};if(null!=t.reason&&(o.reason=t.reason),null!=t.error&&(o.error=t.error),this.logger.info("scenarioName = "+i+", step = "+n+", status = "+a+", reason = "+(t.reason||o.reason)+", error = "+t.error),n!==this.constants.scenarios.steps.start){var s=this.getOrCreateScenario(i);switch(a){case this.constants.scenarioStepStatus.success:n===this.constants.scenarios.steps.stop?s.stop(o,null,a):s.mark(n,o,a);break;case this.constants.scenarioStepStatus.failure:s.fail(o);break;case this.constants.scenarioStepStatus.abandoned:s.cancel(o);break;case this.constants.scenarioStepStatus.incomplete:s.incomplete(o);break;default:s.mark(n,o)}}else this.createNewScenario(i)},n.prototype.updateConnectedDisplayAlert=function(){this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelDualFrontOfRoomSupport]&&(this.logger.info("sending alert for connected displays, isDisconnected="+this.displaysDisconnected),this.eventingService.$emit(this.constants.events.rigel.service.eventTypes.displayDisconnectedAlert,this.displaysDisconnected))},Object.defineProperty(n.prototype,"displaysDisconnected",{get:function(){return this.externalWindowCount>this.connectedDisplayCount-1},enumerable:!0,configurable:!0}),n}(SkypeX.Services.ObservableBase);t.RigelCallScreenServiceImplementation=i,angular.module("teamspace.rigelCallScreenService",["teamspace.constants","teamspace.callingAgentsService","teamspace.conversationsService","teamspace.peopleService","teamspace.contextViewLauncherService","teamspace.callingAlertsService","teamspace.utilityService","teamspace.contentSharingService","teamspace.callingTelemetryService","teamspace.localizationService","teamspace.pstnNumberService","teamspace.lazyLoadService","teamspace.diagnosticsActionService","teamspace.callingPerfCollectorService","skypeX.sxConfig","teamspace.callingMultiWindowService","teamspace.deviceManagerService","teamspace.rigelCallHandler","teamspace.dialogService"]).service("rigelCallScreenService",i)}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),teamspace;!function(e){!function(t){var i=function(i){function n(e,t,n,a,o,s,r,c,l,h){var d=i.call(this)||this;return d.$state=e,d.$q=t,d.constants=n,d.loggingService=a,d.$rootScope=o,d.utilityService=s,d.orchestrationRegistrationService=r,d.broadcastMeetingService=c,d.settingsService=l,d.meetingPolicySettingsStore=h,d.logger=a.newLogger("RigelNavigationService"),d}return __extends(n,i),n.$inject=["$state","$q","constants","loggingService","$rootScope","utilityService","orchestrationRegistrationService","broadcastMeetingService","settingsService","meetingPolicySettingsStore"],n.getErrorDetails=function(e,t){var i="An error occurred in RigelNavigationService",n=t;return e&&(i=e.hasOwnProperty("message")?e.message:e,e.hasOwnProperty("code")&&(n=e.code)),{errMessage:i,errCode:n}},n.prototype.init=function(){this.initHandler()},n.prototype.navigateToRigelConsoleStateWithDeeplink=function(i,a){var o,s=this;this.logger.info("Navigate to rigel console with deeplink");try{a.mark("start_navigate_to_rigel");var r=this.utilityService.parseUrl(i),c=this.orchestrationRegistrationService.getEntityReferenceFromUrl(r);if(!c)return a.mark("not_retrieve_entity_url"),this.logger.warn("Could not retrieve entity reference for a given URL"),this.$q.reject({message:"Could not retrieve entity reference for a given URL",code:t.RigelNavigationServiceErrorCode.UnableToRetrieveEntityUrl});var l=c.context||{};l.DeeplinkId=c.deeplinkId,l.WithVideo=this.isVideoAllowed()?"true":"false";var h=this.settingsService.valueFor(this.constants.settings.names.rigel);if(a.mark("before_call_navigateToRigelConsoleState"),l.IsBroadcastMeeting){var d=this.utilityService.generateUUID();a.mark("before_broadcast_get_attendee_meeting",(o={},o[this.constants.scenarioDataPropNames.broadcastData]=JSON.stringify({joinId:d}),o));var g=this.broadcastMeetingService.getAttendeeMeetingUsingIds(l.Tid,l.Oid,c.containerId,"0",d);return e.services.SfBInteropUtilsService.toIPromise(this.$q,g).then(function(i){var n,o;if(h.blockBroadcastByoeMeeting){var r=i.streamResource;if(r){p={joinId:d,isByoe:r};return a.mark("broadcast_scenario_not_supported",(n={},n[s.constants.scenarioDataPropNames.broadcastData]=JSON.stringify(p),n)),s.logger.error("[resolveUrl] broadcast scenario not supported, broadcastData: "+JSON.stringify(p)),s.$q.reject({message:"This broadcast scenario is not supported",code:t.RigelNavigationServiceErrorCode.CannotJoinByoeBroadcastMeeting})}}var g=i.userRole.toLowerCase();if(g!==e.services.BroadcastMeeting.constants.role.contributor&&g!==e.services.BroadcastMeeting.constants.role.producer){var p={joinId:d,userRole:g};return a.mark("broadcast_attendee_join_not_supported",(o={},o[s.constants.scenarioDataPropNames.broadcastData]=JSON.stringify(p),o)),s.logger.error("[resolveUrl] cannot join broadcast as attendee, broadcastData: "+JSON.stringify(p)),s.$q.reject({message:"Attendee joining broadcast not supported",code:t.RigelNavigationServiceErrorCode.CannotJoinBroadcastAsAttendee})}return s.navigateToRigelConsoleState(a,c.containerId,l,void 0,c.itemId)}).catch(function(e){a.mark("broadcast_get_attendee_meeting_failed");var i=n.getErrorDetails(e,t.RigelNavigationServiceErrorCode.ErrorFetchingAttendeeMeeting),o=i.errMessage,r=i.errCode;return s.logger.error("[resolveUrl] getAttendeeMeetingUsingIds failed to an error: "+o),s.$q.reject({message:"An error occured while fetching attendee meeting: "+o,code:r})})}return this.navigateToRigelConsoleState(a,c.containerId,l,void 0,c.itemId)}catch(e){a.mark("url_not_resolved");var p=n.getErrorDetails(e,t.RigelNavigationServiceErrorCode.ErrorResolvingMeetingUrl),u=p.errMessage,v=p.errCode;return this.logger.error("[resolveUrl] Provided URL could not be resolved due to an error: "+u),this.$q.reject({message:"An error occured when parsing requested meeting URL: "+u,code:v})}},n.prototype.navigateToCortanaPage=function(){var e={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel Cortana"),this.$state.go(this.constants.states.rigelConsoleCortana,{},e)},n.prototype.navigateToPreCallPage=function(e){var t={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel pre-call screen with isPstnCall: "+e),this.$state.go(this.constants.states.rigelConsolePreCall,{isPstnCall:e},t)},n.prototype.navigateToPostCallPage=function(e){var t={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel post-call screen with callId: "+e),this.$state.go(this.constants.states.rigelConsolePostCall,{callId:e},t)},n.prototype.initHandler=function(){this.$rootScope.$on(this.constants.events.rigel.call.eventTypes.incomingCall,this.navigateToRigelConsoleStateWithIncomingCall.bind(this))},n.prototype.navigateToRigelConsoleStateWithIncomingCall=function(e,t){this.logger.info("Navigate to rigel console with incoming call");var i=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.joinMeetingIncoming);return this.navigateToRigelConsoleState(i,t.conversationId,void 0,t.teamsCallId,void 0)},n.prototype.isVideoAllowed=function(){var e=!!this.meetingPolicySettingsStore.getSettingValue(SkypeX.Services.MeetingPolicySettingsStorageKey.allowIPVideo);return this.logger.info("allowIPVideo="+e),e},n.prototype.navigateToRigelConsoleState=function(e,t,i,n,a){var o={location:"replace",inherit:!1,reload:!1};return i=i||{},i.scenarioName=e.name,i.scenarioId=e.clientId,this.logger.info("Calling state transition from "+this.$state.current.name+" to "+this.constants.states.rigelConsole),this.$state.go(this.constants.states.rigelConsole,{messageId:a,notify:!1,reload:!1,conversationId:t,isMeetupCreation:!1,navCtx:"rigel-service",deepLinkContext:i,teamsCallId:n},o).catch(function(){e.mark("state_navigation_failed")})},n.prototype.navigateToHomePage=function(){var e={location:"replace",inherit:!1,reload:!1};this.logger.info("Navigating to rigel home page"),this.$state.go(this.constants.states.rigelConsoleHomePage,{},e)},n}(SkypeX.Services.ObservableBase);t.RigelNavigationServiceImplementation=i,angular.module("teamspace.rigelNavigationService",["ui.router","teamspace.constants","teamspace.loggingService","teamspace.utilityService","teamspace.orchestrationService","teamspace.settingsService","skypeX.meetingPolicySettingsStore"]).service("rigelNavigationService",i)}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),teamspace;!function(e){!function(e){var t=function(t){function i(i,n,a,o,s,r,c,l,h,d,g,p,u,v){var S=t.call(this)||this;return S.$window=i,S.$q=n,S.constants=a,S.loggingService=o,S.$rootScope=s,S.rigelNavigationService=r,S.settingsService=c,S.callingSupportService=l,S.emergencyService=h,S.eventingService=d,S.hybridContentVisibilityManager=g,S.multiWindowService=p,S.platformDetectService=u,S.utilityService=v,S.sfbState=e.SfBState.Idle,S.disableFeedbackButton=!1,S.ingestCameraIdEnabled=!1,S.isAppReady=!1,S.isOemPluginConnected=!1,S.isOemPluginShown=!1,S.externalWindowCount=1,S.currentIngestCamera=null,S.currentWhiteboardCamera=null,S.rigelSettings=null,S.foundCaptureConfigOverride=!1,S._autoExitMeetingEnabled=!1,S._bluetoothBeaconEnabled=!1,S._byomAutoAcceptEnabled=!1,S._cortanaSettingEnabled=!0,S._cortanaWakeWordSettingEnabled=!0,S.appReadyDependantEventTypes=[S.constants.events.rigel.service.eventTypes.joinMeetup,S.constants.events.rigel.service.eventTypes.openPreCall,S.constants.events.rigel.service.eventTypes.toggleCortana,S.constants.events.rigel.service.eventTypes.openRigelCortana],S.VidPidRegExp=RegExp("vid_([0-9a-f]{4})&pid_([0-9a-f]{4})","g"),S.isDesktopVersionValidForMW=!1,S.rigelSettings=c.valueFor(a.settings.names.rigel),S.cameraCaptureConfigOverrides=S.rigelSettings.cameraCaptureConfigOverrides,S.logger=o.newLogger("RigelServiceHandler"),S.isDesktopVersionValidForMW=!S.isDesktopBelowCompareVersion(S.rigelSettings.minDesktopVersionForMultiWindow),S.appReadyDefer=n.defer(),S.appReadyDefer.promise.then(function(){return S.onAppReady()}),S.debouncedCortanaSettingsUpdated=_.debounce(function(){S.logger.info("trigger cortanaSettingsUpdated"),S.trigger(e.RigelServiceHandlerEvents.cortanaSettingsUpdated,SkypeX.Services.ObservableBase.Key_All)},10),S}return __extends(i,t),i.$inject=["$window","$q","constants","loggingService","$rootScope","rigelNavigationService","settingsService","callingSupportService","emergencyService","eventingService","hybridContentVisibilityManager","multiWindowService","platformDetectService","utilityService"],i.prototype.init=function(){return this.$q.when(this.initHandler())},i.prototype.postFeedbackSubmit=function(e,t,i,n){this.logger.info("The teams feedback was filed under the category : '{0}'",t),this.logger.info("The user has requested to include the screenshot in work item : '{0}'",i),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.postFeedbackSubmit,data:{feedbackText:e,feedbackSelectedCategory:t,includeScreenshot:i,childWindow:n}})},i.prototype.showTeams=function(e){this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.showTeams,data:{value:e}})},i.prototype.updateTeamsCallState=function(t,i){this.settingsService.valueFor(this.constants.settings.names.rigel).switchToTeamsStateUpdate?(this.logger.info("Sending new TeamsCallState: "+e.TeamsCallState[t]+" ("+t+")"),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.teamsCallState,data:{value:e.TeamsCallState[t]}})):this.showTeams(t!==e.TeamsCallState.Idle),t===e.TeamsCallState.Idle&&this.rigelNavigationService.navigateToHomePage();var n=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.updateTeamsCallState,null,null,10*this.constants.timeInMiliseconds.second);i&&n.mark(i),n.stop(),this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.teamsCallState,t)},i.prototype.displayOemPlugin=function(e){void 0===e&&(e=!0);var t=this.getIsOemPluginConnected(),i=this.getIsOemPluginShown();this.logger.info("Displaying OEM Plugin, show: "+e+", isOemPluginConnected: "+t+", isOemPluginShown: "+i),t&&e!==i&&this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.displayOemPlugin,data:e})},i.prototype.initHandler=function(){var t=this;this.checkIfAppIsReady(),this.ingestCameraIdEnabled=this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelIngestCameraId],this.ipc=this.$window.electronSafeIpc,this.ipc.on(this.constants.events.rigel.service.event,this.onRigelServiceEvent.bind(this)),this.$rootScope.$on(this.constants.events.rigel.service.event,this.onRigelServiceEvent.bind(this)),this.requestRigelServiceState(),this.callingSupportService.subscribe(function(){return t.sendIsPstnCallingAllowed()},e.CallingSupportServiceEvents.Type_isPstnCallingAllowedChanged),this.sendIsPstnCallingAllowed(),this.initDeviceLocationSubscription(),this.updateTeamsCallState(e.TeamsCallState.Idle,"RigelServiceHandler_initHandler"),this.$rootScope.$on(this.constants.events.rigel.service.eventTypes.enableUwpAudioIngestPlayback,function(e,i){t.sendEnableUwpAudioIngestPlayback(i)})},i.prototype.checkIfAppIsReady=function(){var e=this;if(this.logger.info("[checkIfAppIsReady] multiWindowEnabled="+this.multiWindowEnabled),this.multiWindowEnabled&&!this.hybridContentVisibilityManager.isReady){this.logger.info("MultiWindow not loaded. subscribing to loaded event");var t=this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.multiWindow.loaded,function(){e.logger.info("MultiWindow loaded event received. resolving app ready promise"),e.appReadyDefer.resolve(),t()})}else this.logger.info("app is ready. resolving promise"),this.appReadyDefer.resolve()},i.prototype.onAppReady=function(){this.isAppReady=!0,this.logger.info("[onAppReady] sending ready state to desktop client"),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.appReady,data:this.isAppReady})},i.prototype.initDeviceLocationSubscription=function(){this.eventingService.$on(this.$rootScope,this.constants.events.calling.locationUpdated,this.sendDeviceLocation.bind(this)),this.sendDeviceLocation()},i.prototype.requestRigelServiceState=function(){this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.requestRigelServiceState,data:null})},i.prototype.sendIsPstnCallingAllowed=function(){if(this.settingsService.valueFor(this.constants.settings.names.rigel).enableSendIsEvEnabled){var e=!!this.callingSupportService.isPSTNCallingAllowed();this.logger.info("PSTN is' "+(e?"enabled":"disabled")+"' based on callingSupportService."),this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.isEvEnabled,data:e})}else this.logger.info("enableSendIsEvEnabled is not enabled and isEvEnabled property will not be reflected on the SfB side accurately")},i.prototype.sendDeviceLocation=function(){var e=this.emergencyService.getMyFormattedLocation(this.constants.scenarios.calling.context.rigelConsoleScreen);this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.updateDeviceLocation,data:e||""})},i.prototype.sendEnableUwpAudioIngestPlayback=function(e){this.ipc.send(this.constants.events.rigel.service.callback,{type:this.constants.events.rigel.service.eventTypes.enableUwpAudioIngestPlayback,data:e})},i.prototype.onRigelServiceEvent=function(t,i){if(this.logger.info("Received "+i.type+" with value "+i.data),this.appReadyDependantEventTypes.includes(i.type)&&!this.isAppReady)return this.logger.info("cannot process event="+i.type+", app not ready."),this.$q.reject();switch(i.type){case this.constants.events.rigel.service.eventTypes.autoExitMeetingEnabled:return this._autoExitMeetingEnabled=i.data,this.trigger(e.RigelServiceHandlerEvents.onRigelServiceEvent,SkypeX.Services.ObservableBase.Key_All,i),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.bluetoothBeaconEnabled:return this._bluetoothBeaconEnabled=i.data,this.trigger(e.RigelServiceHandlerEvents.onRigelServiceEvent,SkypeX.Services.ObservableBase.Key_All,i),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.byomAutoAcceptEnabled:return this._byomAutoAcceptEnabled=i.data,this.trigger(e.RigelServiceHandlerEvents.onRigelServiceEvent,SkypeX.Services.ObservableBase.Key_All,i),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.cortanaDeviceSettingEnabled:return i.data!==this._cortanaSettingEnabled&&void 0!==i.data&&(this._cortanaSettingEnabled=i.data,this.debouncedCortanaSettingsUpdated()),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.cortanaWakewordSettingEnabled:return i.data!==this._cortanaWakeWordSettingEnabled&&void 0!==i.data&&(this._cortanaWakeWordSettingEnabled=i.data,this.debouncedCortanaSettingsUpdated()),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.openRigelCortana:return this.trigger(e.RigelServiceHandlerEvents.cortanaOpened,SkypeX.Services.ObservableBase.Key_All),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.toggleCortana:return this.trigger(e.RigelServiceHandlerEvents.cortanaToggled,SkypeX.Services.ObservableBase.Key_All,i.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.joinMeetup:return this.joinMeetup(i.data);case this.constants.events.rigel.service.eventTypes.getAudioVolume:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.getAudioVolume,i.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.hdmiActive:return this.$q.resolve();case this.constants.events.rigel.service.eventTypes.autoScreenSharing:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.autoScreenSharing,i.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.coordinatedMeetingsSettings:return this.logger.info("Received coordinatedMeetingsSettings : "+i.data),this.broadcastOnRootScope(i.type,i.data);case this.constants.events.rigel.service.eventTypes.externalWindowCount:return this.$window.desktopSettings&&this.$window.desktopSettings[this.constants.events.rigel.desktopSettings.enableRigelDualFrontOfRoomSupport]&&(this.externalWindowCount=i.data,this.logger.info("Received externalWindow count "+this.externalWindowCount),this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.externalWindowCount,this.externalWindowCount)),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.connectedDisplayCount:case this.constants.events.rigel.service.eventTypes.frontOfRoomWindowsSwapDone:return this.broadcastOnRootScope(i.type,i.data);case this.constants.events.rigel.service.eventTypes.hdmiPluggedIn:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.hdmiPluggedIn,i.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.disableFeedbackButton:return this.disableFeedbackButton=i.data,this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.disableFeedbackButton,i.data),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.sfbState:var n=this.sfbState;return this.sfbState=i.data,this.logger.info("SfbState updated: "+e.SfBState[n]+" ("+n+") ---\x3e "+e.SfBState[this.sfbState]+" ("+this.sfbState+")"),this.trigger(e.RigelServiceHandlerEvents.sfbStateUpdated,SkypeX.Services.ObservableBase.Key_All,this.sfbState),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.openPreCall:var a=i.data;return this.logger.info("Received "+this.constants.events.rigel.service.eventTypes.openPreCall+" with isPstn "+a),this.rigelNavigationService.navigateToPreCallPage(a),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.hdmiCaptureDevice:if(this.ingestCameraIdEnabled)return this.$q.resolve();var o=i.data;return this.currentIngestCamera=this.createRigelCameraFromVidPid(o.vid,o.pid),this.checkForCameraConfigOverrides(),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.currentIngestCamera);case this.constants.events.rigel.service.eventTypes.ingestCameraId:if(!this.ingestCameraIdEnabled)return this.$q.resolve();var s=i.data;return this.currentIngestCamera=this.createRigelCameraFromInstancePath(s),this.checkForCameraConfigOverrides(),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.hdmiIngestCamera,this.currentIngestCamera);case this.constants.events.rigel.service.eventTypes.contentCameraId:if(this.foundCaptureConfigOverride&&!this.rigelSettings.enableCameraCaptureConfigOverride)return;var r=i.data;return this.currentWhiteboardCamera=this.createRigelCameraFromInstancePath(r),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.whiteboardCamera,this.currentWhiteboardCamera);case this.constants.events.rigel.service.eventTypes.contentCameraEnhancementEnabled:case this.constants.events.rigel.service.eventTypes.contentCameraInverted:return this.broadcastOnRootScope(i.type,i.data);case this.constants.events.rigel.service.eventTypes.oemPluginConnected:var c=i.data;return this.isOemPluginConnected=c,this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.oemPluginConnected,c),this.$q.resolve();case this.constants.events.rigel.service.eventTypes.oemPluginShown:var l=i.data;return this.isOemPluginShown=l,this.$q.resolve();case this.constants.events.rigel.service.eventTypes.frontOfRoomLoadFailed:return this.broadcastOnRootScope(i.type,i.data);case this.constants.events.rigel.service.eventTypes.disableTeamsAudioSharing:return this.$rootScope.$broadcast(this.constants.events.rigel.service.eventTypes.disableTeamsAudioSharing,i.data),this.$q.resolve();default:return this.logger.error("Unrecognized event type: '{0}'",i.type),this.$q.reject("Unrecognized event type: "+i.type)}},i.prototype.createRigelCameraFromInstancePath=function(e){if(!e)return this.logger.warn("Received an empty instance path, camera is not configured currently"),null;var t=e.toLowerCase().replace(/\\/g,"#");this.VidPidRegExp.lastIndex=0;var i=this.VidPidRegExp.exec(t),n=0,a=0;return 3===i.length?(n=parseInt(i[1],16),a=parseInt(i[2],16)):this.logger.error("Unable to parse VID/PID out of instance path"),{deviceId:t,vid:n,pid:a}},i.prototype.createRigelCameraFromVidPid=function(e,t){return{deviceId:"vid_"+this.decimalToPaddedFourDigitHex(e)+"&pid_"+this.decimalToPaddedFourDigitHex(t),vid:e,pid:t}},i.prototype.decimalToPaddedFourDigitHex=function(e){var t="000"+e.toString(16);return t.substr(t.length-4)},i.prototype.broadcastOnRootScope=function(e,t){return this.$rootScope.$broadcast(e,t),this.$q.resolve()},i.prototype.checkForCameraConfigOverrides=function(){if(this.currentIngestCamera){this.foundCaptureConfigOverride=!1;for(var e=0,t=this.cameraCaptureConfigOverrides;e<t.length;e++){var i=t[e];this.currentIngestCamera.vid===i.vendorId&&this.currentIngestCamera.pid===i.productId&&(this.logger.info("Found camera capture config override in ECS config"),this.foundCaptureConfigOverride=!0,this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.roomCameraCaptureConfig,i.roomCameraConfig),this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.contentCameraCaptureConfig,i.contentCameraConfig),this.rigelSettings.enableCameraCaptureConfigOverride||this.broadcastOnRootScope(this.constants.events.rigel.service.eventTypes.whiteboardCamera,null))}}else this.logger.warn("No valid ingest camera found")},i.prototype.joinMeetup=function(e){var t=this,i=this.loggingService.newScenario(this.constants.events.rigel.service.scenarios.joinMeetingStart,null,null,10*this.constants.timeInMiliseconds.second);return this.rigelNavigationService.navigateToRigelConsoleStateWithDeeplink(e.url,i).catch(function(e){return t.logger.error("Error while handling rigel service join-meetup event: "+e.message),t.ipc.send(t.constants.events.rigel.service.callback,{type:t.constants.events.rigel.service.eventTypes.joinMeetupFailure,data:e.code}),i.fail(),t.$q.reject(e)})},i.prototype.getIsOemPluginConnected=function(){return this.isOemPluginConnected},i.prototype.getIsOemPluginShown=function(){return this.isOemPluginShown},i.prototype.getExternalWindowCount=function(){return this.externalWindowCount},i.prototype.getHdmiIngestCamera=function(){return this.currentIngestCamera},i.prototype.getWhiteboardCamera=function(){return this.currentWhiteboardCamera},Object.defineProperty(i.prototype,"autoExitMeetingEnabled",{get:function(){return this._autoExitMeetingEnabled},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"bluetoothBeaconEnabled",{get:function(){return this._bluetoothBeaconEnabled},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"byomAutoAcceptEnabled",{get:function(){return this._byomAutoAcceptEnabled},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"cortanaSettingEnabled",{get:function(){return this._cortanaSettingEnabled},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"cortanaWakeWordSettingEnabled",{get:function(){return this._cortanaWakeWordSettingEnabled},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"multiWindowEnabled",{get:function(){return this.isDesktopVersionValidForMW&&this.multiWindowService.enabled&&this.rigelSettings.enableMultiWindow},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"appReadyPromise",{get:function(){return this.appReadyDefer.promise},enumerable:!0,configurable:!0}),i.prototype.isDesktopBelowCompareVersion=function(e){var t=this.platformDetectService.getDesktopAppVersion();return this.logger.info("[isDesktopBelowCompareVersion] desktopVersion={0}, compareVersion={0}",t,e),this.isValidVersion(t)&&this.isValidVersion(e)?-1===this.utilityService.compareVersions(t,e):(this.logger.info("[isDesktopBelowCompareVersion] version not valid",t,e),!1)},i.prototype.isValidVersion=function(e){return e&&e.length>0&&4===e.split(".").length&&!e.split(".").some(function(e){return isNaN(parseInt(e))})},i}(SkypeX.Services.ObservableBase);e.RigelServiceHandlerImplementation=t,angular.module("teamspace.rigelServiceHandler",["teamspace.constants","teamspace.loggingService","teamspace.rigelNavigationService","teamspace.settingsService","teamspace.emergencyService","teamspace.eventingService"]).service("rigelServiceHandler",t)}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),teamspace;!function(e){!function(t){var i=function(t){function i(i,n,a,o){var s=t.call(this)||this;return s.pushDataEventDispatcher=i,s.windowSyncDataService=n,s.frameSink=a,s.constants=o,n.registerPush(s.handleEmit.bind(s),[e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_VIDEO_RENDERER_EMIT]).then(function(e){s.listenerRegistration=e}),s}return __extends(i,t),i.prototype.handleEmit=function(e){this.emit(e.eventType,e.data)},i.prototype.dispose=function(){this.listenerRegistration&&(this.windowSyncDataService.unregister(this.listenerRegistration),this.listenerRegistration=null)},i.prototype.getFrameSink=function(){return this.frameSink},i.prototype.getRendererType=function(){return 4},i.prototype.getVideoSize=function(){},i.prototype.setScalingMode=function(t){return this.pushDataEventDispatcher.dispatch({actionType:e.shared.PushDataActionType.EXTERNAL_CALLING_SCREEN_VIDEO_RENDERER_INVOKE,payload:{eventType:this.constants.events.rigel.callScreen.videoRenderer.methods.setScallingMode,data:t}}),Promise.resolve()},i}(skype.calling.EventEmitter);t.RigelVirtualRenderer=i}(e.services||(e.services={}))}(teamspace||(teamspace={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),__awaiter=this&&this.__awaiter||function(e,t,i,n){function a(e){return e instanceof i?e:new i(function(t){t(e)})}return new(i||(i=Promise))(function(i,o){function s(e){try{c(n.next(e))}catch(e){o(e)}}function r(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){e.done?i(e.value):a(e.value).then(s,r)}c((n=n.apply(e,t||[])).next())})},__generator=this&&this.__generator||function(e,t){function i(e){return function(t){return n([e,t])}}function n(i){if(a)throw new TypeError("Generator is already executing.");for(;c;)try{if(a=1,o&&(s=2&i[0]?o.return:i[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,i[1])).done)return s;switch(o=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,o=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(s=c.trys,!(s=s.length>0&&s[s.length-1])&&(6===i[0]||2===i[0])){c=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){c.label=i[1];break}if(6===i[0]&&c.label<s[1]){c.label=s[1],s=i;break}if(s&&c.label<s[2]){c.label=s[2],c.ops.push(i);break}s[2]&&c.ops.pop(),c.trys.pop();continue}i=t.call(e,c)}catch(e){i=[6,e],o=0}finally{a=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}var a,o,s,r,c={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r},__rest=this&&this.__rest||function(e,t){var i={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(i[n[a]]=e[n[a]]);return i},teamspace;!function(e){!function(t){var i;!function(e){e[e.Purple=0]="Purple",e[e.Native=1]="Native"}(i=t.NotificationStyle||(t.NotificationStyle={}));var n=function(n){function a(e,i,a,o,s,r,c,l,h,d,g,p,u,v,S,f,m,y,C,b,T,w,k,I,A,M,N,D,E,P,R,$,O,x,U,F,W){var V=n.call(this,i,l,a,u,S,d,p,C,f,w,k,m,y,b,T,g,s,E,W)||this;return V.$injector=e,V.$q=o,V.$rootScope=r,V.$state=c,V.notificationsStore=h,V.peopleService=v,V.chatListService=I,V.analyticsStateService=A,V.userAppsStore=M,V.navigationNotificationService=N,V.platformDetectService=D,V.messagingTelemetryService=P,V.authenticationService=R,V.$http=$,V.deviceManagerService=x,V.notificationsAuxiliaryService=U,V.profilePictureLoaderService=F,V.enableK2CollabNotifications=!1,V.updateTaskbarNotificationFlash=_.throttle(function(e){return __awaiter(V,void 0,void 0,function(){var t,i,n,a,o,s,r,c,l,h,d,g,p,u,v,S,f=this;return __generator(this,function(m){if(t=this.settingsService.valueFor(this.constants.settings.names.flashMWonNotifications),i=this.settingsService.valueFor(this.constants.settings.names.flashConversationUpdateLimit),this.badgeCounts.chat=this.chatListService.getUnreadCountFromChatList(),"v1"==t&&(!i||i<0||e&&e.length<i)){n=this.loggingService.newScenario(this.constants.scenarios.notifications.updateTaskbarNotification);try{if(a=this.chatListService.getUnreadVisibleChats(),e&&e.length>0){for(o=[],s=[],r=function(e){a.find(function(t){return t.id===e})?s.push(e):o.push(e)},c=0,l=e;c<l.length;c++)h=l[c],r(h);for(this.badgeCounts.chat=this.chatListService.countUnreadVisibleChats(),this.logger.info("unreadchat count "+s.length+" and readchat count "+o.length),d=0,g=o;d<g.length;d++)p=g[d],this.getConversationWindowId(p).then(function(e){return f.clearTaskbarWindowFlash(e)});for(0==s.length&&this.updateTaskbarBadge(this.getTotalBadgeCount()),u=0,v=s;u<v.length;u++)S=v[u],this.getConversationWindowId(S).then(function(e){return f.updateTaskbarBadge(f.getTotalBadgeCount(),e)})}else this.logger.info("no unread chats, not flashing"),this.updateTaskbarBadge(this.getTotalBadgeCount());n.stop({conversationCount:e&&e.length})}catch(t){this.logger.log("failure updating mw badge count: "+JSON.stringify(t)),this.updateTaskbarBadge(this.getTotalBadgeCount()),n.fail({errorMessage:this.utilityService.scrubEuii(JSON.stringify(t)),conversationCount:e&&e.length})}}else this.updateTaskbarBadge(this.getTotalBadgeCount());return[2]})})},1e3,{leading:!0,trailing:!0}),V.logger=u.newLogger("Notifications Service Desktop"),V.safeIpc=s.electronSafeIpc,O.registerAction(a.actions.notificationsService.startup,function(){try{return D.isElectronAppSurfaceHub()||("v1"==d.valueFor(a.settings.names.flashMWonNotifications)?t.MTMASubscriptionUtility.safeSubscribe(I,r,function(e,t){return V.updateTaskbarNotificationFlash(t)},t.ChatListServiceEvents.EventType_Batched):t.MTMASubscriptionUtility.safeSubscribe(I,r,function(){return V.updateTaskbarNotificationFlash()},t.ChatListServiceEvents.EventType_UnreadCount)),o.resolve()}catch(e){return o.reject(e)}}),O.registerForMtma(V),V.initializeOnAppLaunchAndReinit("First Initialize"),V.attachEvent(),V}return __extends(a,n),a.$inject=["$injector","ringtoneSettingService","constants","$q","$window","$rootScope","$state","eventingService","notificationsStore","settingsService","utilityService","routeUtilityService","loggingService","peopleService","notificationSettingsStore","audioService","resources","$translate","ariaLiveService","shortcutService","peopleTargetingService","conversationsService","hybridContentVisibilityManager","chatListService","analyticsStateService","userAppsStore","navigationNotificationService","platformDetectService","desktopUtilityService","messagingTelemetryService","authenticationService","$http","orchestrationService","deviceManagerService","notificationsAuxiliaryService","profilePictureLoaderService","localizationService"],a.prototype.initializeOnAppLaunchAndReinit=function(e){var i=this;this.logger.log("onAppReInit - {0}",e),this.isMacNativeNotificationSupported=!1,this.enableNativeNotificationReactionIcon=this.settingsService.valueAsBoolean(this.constants.settings.names.enableNativeNotificationReactionIcon),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationShown,function(e,t){i.onNotificationShown(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationUpdated,function(e,t){i.onNotificationUpdated(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioRequest,function(e,t){i.playNotificationAudio(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationClicked,function(e,t,n,a,o){i.onNotificationClicked(t,n,a,o)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationTimeout,function(e,t){i.onNotificationTimeout(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionDismissed,function(e,t){i.onNotificationDismissed(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionTaken,function(e,t,n,a,o,s){i.onNotificationActionTaken(t,n,o,a,s)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionCancelled,function(e,t,n){i.onNotificationActionCancelled(t,n)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationActionNotShown,function(e,t){i.onNotificationActionNotShown(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.sfbNotificationActionNotShown,function(e,t){i.onSfBNotificationActionNotShown(t)}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationProcessFail,function(e,t,n,a){i.onNotificationProcessFail(t,n,a)}),this.desktopUtilityService.avIsRemoted()&&this.settingsService.valueAsBoolean(this.constants.settings.names.remoteVDINotifications)&&(t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioPlayed,function(e,t,n,a){i.logger.log("VDI: notificationAudioPlayed for audioId: "+t+", src: "+n+", isLoop: "+a);var o=i.deviceManagerService.getSelectedSpeakerApplicationDeviceId();window.vdi.setSinkId(t,o),window.vdi.setLoop(t,a),window.vdi.playNotifyAudio(t,n);var s=i.deviceManagerService.getSelectedSecondaryRingerDeviceId();if(s){var r=t+"_secondary";window.vdi.setSinkId(r,s),window.vdi.setLoop(r,a),window.vdi.playNotifyAudio(r,n)}}),t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.notificationAudioPaused,function(e,t){i.logger.log("VDI: notificationAudioPaused for audioId: "+t),window.vdi.pauseNotifyAudio(t),i.deviceManagerService.getSelectedSecondaryRingerDeviceId()&&window.vdi.pauseNotifyAudio(t+"_secondary")})),this.initializeNotficationsServiceBase(e),this.notificationHandlers=new Map,this.cancellationHandlers=new Map,this.badgeCounts={activity:0,chat:0},this.chatsEnabled=!0,this.userAppsStore.register(this),t.MTMASubscriptionUtility.subscribe(this.notificationsStore,function(e,t){var n=i.loggingService.newScenario(i.constants.scenarios.notifications.e2eLatency.toastEndToEndTrackingOnWebClient);n.eventData.context=JSON.stringify({isFromWebhook:!0}),i.createNotification(t,void 0,void 0,n)},this.constants.events.notifications.store.Type_NewActivitiesHydrated_Recent),this.eventingService.$onWithTenantScope(this.$rootScope,this.constants.events.notifications.bellCountUpdated,function(e,t){i.badgeCounts.activity=t,i.updateTaskbarBadge(i.getTotalBadgeCount())}),this.enableK2CollabNotifications=this.settingsService.valueAsBoolean(this.constants.settings.names.enableK2CollabNotifications)},a.prototype.attachEvent=function(){var e=this;this.platformDetectService.getOS()===this.constants.os.mac&&this.$window&&this.$window.desktopSettings&&this.$window.desktopSettings.enableMacNativeNotification&&(t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.toastStyleChoiceEnabledResponse,function(t,i){e.isMacNativeNotificationSupported=i}),this.safeIpc.send(this.constants.events.desktopApp.toastStyleChoiceEnabledRequest))},a.prototype.getConversationWindowId=function(e){var t=this,i=this.loggingService.newScenario(this.constants.scenarios.notifications.performTaskbarChatAction);return this.logger.info("Calling shouldshowchatnotification with "+e),this.hybridContentVisibilityManager.shouldShowChatNotification(e).then(function(e){var n=e&&e.windowId?e.windowId:void 0;return t.logger.info("got window id "+n+" from shouldshowchatnotification"),i.stop({status:"success",isPopoutWindow:!!n}),n}).catch(function(e){i.fail({status:"failure",errorMessage:t.utilityService.scrubEuii(JSON.stringify(e))}),t.updateTaskbarBadge(t.getTotalBadgeCount())})},a.prototype.cleanupOnAppTeardown=function(e){this.logger.log("onAppTeardown -- reason - {0}",e),this.cleanupNotficationsServiceBase(e),this.notificationHandlers=void 0,this.cancellationHandlers=void 0,this.lastBadgeCountSent=void 0,this.actionNotificationData=void 0,this.badgeCounts=void 0,this.chatsEnabled=void 0,this.isMacNativeNotificationSupported=!1,this.enableK2CollabNotifications=!1,this.enableNativeNotificationReactionIcon=!1},a.prototype.mtmaTelemetryIdentifier=function(){return"NotificationsServiceDesktopImplementation"},a.prototype.createToast=function(e,t,n,a){if(this.platformDetectService.isRigel())return this.logger.info("Skip all toasts for Teams on Rigel."),void SkypeX.Services.NotificationUtility.stopScenarioIfExists(a,{skipToastReason:"Skip all toasts for Teams on Rigel"});this.createDesktopNotification(e,t,n,a),this.$window&&this.$window.desktopSettings&&this.$window.desktopSettings.enableNotificationAudioPlayInSync||this.isMacNativeNotificationSupported&&this.notificationsAuxiliaryService.getNotificationStyle()===i[i.Native].toString()?this.logger.info("control to play audio alert in desktop side"):this.playNotificationAudio(e)},a.prototype.playNotificationAudio=function(e){var i=null,n=this.notificationSettingsStore.getAppUserSettings();e.notificationType===SkypeX.Services.NotificationType.Priority||e.notificationType===SkypeX.Services.NotificationType.NativeNotificationFre?i=this.primaryNotificationAudio:n&&e.notificationType&&n.soundsSettings.alertSound!==t.AlertSoundValue[t.AlertSoundValue.Off]&&(e.notificationType===SkypeX.Services.NotificationType.Mention||e.notificationType===SkypeX.Services.NotificationType.MentionInChat?e.notificationSubType===SkypeX.Services.NotificationSubType.Person?i=this.primaryNotificationAudio:e.notificationSubType!==SkypeX.Services.NotificationSubType.Channel&&e.notificationSubType!==SkypeX.Services.NotificationSubType.Team||(i=this.secondaryNotificationAudio):e.notificationType===SkypeX.Services.NotificationType.Chat?i=this.primaryNotificationAudio:e.notificationType!==SkypeX.Services.NotificationType.Reply&&e.notificationType!==SkypeX.Services.NotificationType.Like&&e.notificationType!==SkypeX.Services.NotificationType.LikeInChat&&e.notificationType!==SkypeX.Services.NotificationType.Reaction&&e.notificationType!==SkypeX.Services.NotificationType.ReactionInChat&&e.notificationType!=SkypeX.Services.NotificationType.Follow&&e.notificationType!=SkypeX.Services.NotificationType.MsGraph&&e.notificationType!=SkypeX.Services.NotificationType.ThirdParty||n.soundsSettings.alertSound===t.AlertSoundValue[t.AlertSoundValue.CallMentionChats]||(i=this.secondaryNotificationAudio)),i&&i.play()},a.prototype.onStateChanged=function(e){this.chatsEnabled=e.hasApp(this.constants.appId.chat),this.platformDetectService.isElectronAppSurfaceHub()||this.updateTaskbarNotificationFlash()},a.prototype.createNotificationWithActions=function(i,n){var a=this;SkypeX.Services.NotificationUtility.markScenarioIfExists(this.constants.scenarios.notifications.e2eLatency.markers.createNotificationWithActions,n);var o={notificationType:i&&i.trackingType,notificationStyle:i&&i.notificationStyle,webhookCorrelationId:i&&i.webhookCorrelationId};void 0===n&&(n=this.loggingService.newScenario(this.constants.scenarios.notifications.e2eLatency.toastEndToEndTrackingOnWebClient),SkypeX.Services.NotificationUtility.setContextForScenarioIfExists(n,{isFromWebhook:!1})),this.actionNotificationData=i;var s=null;if(this.platformDetectService.isRigel())return this.logger.info("Disabling calling notification for Teams on Rigel."),SkypeX.Services.NotificationUtility.stopScenarioIfExists(n,{skipToastReason:"Disabling calling notification for Teams on Rigel"}),s;if(i){var r=this.utilityService.generateUUID();o.notificationId=r,this.populateRingtoneName(i),this.populateNotificationData(i);var c=(new Date).getTime();this.notificationsForConversation[i.sourceId]?this.notificationsForConversation[i.sourceId].push(r):this.notificationsForConversation[i.sourceId]=[r],this.notificationHandlers.set(r,{data:i,time:c}),s=new t.NotificationWithActions(this.$q,function(){return a.cancelNotification(r)},function(e){return a.updateNotification(r,e)}),this.cancellationHandlers.set(r,{cancelable:s,trackingType:i.trackingType,time:c}),this.desktopUtilityService&&this.desktopUtilityService.isIPCRendererListenerRemovalEnabled()?t.MTMAIpcUtility.onceWithTenantScope(this.safeIpc,this.constants.events.desktopApp.playNotificationAudio,function(e,t){var i={notificationType:t.skypexType,notificationSubType:t.skypexSubType};a.playNotificationAudio(i)}):t.MTMAIpcUtility.onWithTenantScope(this.safeIpc,this.constants.events.desktopApp.playNotificationAudio,function(e,t){var i={notificationType:t.skypexType,notificationSubType:t.skypexSubType};a.playNotificationAudio(i)});var l=this.notificationSettingsStore.getAppUserSettings();i.type==e.services.NotificationType.meetingWentLive&&(i.icon="icons-meeting-join");i.onNotificationShown,i.onNotificationUpdated;var h=__rest(i,["onNotificationShown","onNotificationUpdated"]);SkypeX.Services.NotificationUtility.stopScenarioIfExists(n,o),this.safeIpc.send(this.constants.events.desktopApp.notificationAction,r,h,l);var d={};d[this.constants.telemetry.notification.property.id]=r,d[this.constants.telemetry.notification.property.type]=i.trackingType,d[this.constants.telemetry.notification.property.hasHeader]=!!i.headerData,this.loggingService.event(this.constants.telemetry.notification.show,d),i.teamsCallId?this.logger.info("Created notification toast with ID: "+r+" for teamsCallId: "+i.teamsCallId+", [call][incomingCall][createCallToast][teamsCallId="+i.teamsCallId+"][notificationId="+r+"]"):this.logger.info("Created notification toast with ID: "+r),this.removeOldestHandlerCheck(r)&&this.removeOldestHandler()}return SkypeX.Services.NotificationUtility.failScenarioIfExists(n,{failToastReason:this.constants.scenarios.notifications.e2eLatency.toastFailReason.nullNotificationData}),s},a.prototype.removeOldestHandlerCheck=function(e){var n=this.settingsService.valueFor(this.constants.settings.names.maxNotificationHandlers),a=this.notificationHandlers.get(e);return this.notificationHandlers.size>n&&this.notificationsAuxiliaryService.getNotificationStyle()===i[i.Native].toString()&&!(a.data.type===t.NotificationType.oneToOne||a.data.type===t.NotificationType.groupCall||a.data.type===t.NotificationType.oneToOnePstn||a.data.type===t.NotificationType.meeting||a.data.type===t.NotificationType.meetingWentLive)},a.prototype.updateNotification=function(e,t){if(this.settingsService.valueAsBoolean(this.constants.settings.names.enableUpdatingCallToasts))if(e&&t){this.safeIpc.send(this.constants.events.desktopApp.notificationUpdate,e,t);var i={};i[this.constants.telemetry.notification.property.id]=e,i[this.constants.telemetry.notification.property.isTitleUpdated]=!!t.title,i[this.constants.telemetry.notification.property.isImageUpdated]=!!t.image,this.loggingService.event(this.constants.telemetry.notification.update,i);var n=t.teamsCallId||t.callId?"[call][incomingCall][updateCallToast][teamsCallId="+t.teamsCallId+"][callId="+t.callId+"]":"";this.logger.info("[updateNotification] Updated notification toast. [notificationId={0}]{1}",e,n)}else this.logger.warn("[updateNotification] Unable to update notification. Missing data.")},a.prototype.dismissNotification=function(e,i){var n=this,a=t.NotificationType.chat+"|"+e+"|"+i;this.notificationsForConversation[a]&&(_.each(this.notificationsForConversation[a],function(e){n.cancelNotification(e)}),delete this.notificationsForConversation[a]),this.actionNotificationData=null},a.prototype.createDesktopNotification=function(n,a,o,s){var r=this;SkypeX.Services.NotificationUtility.markScenarioIfExists(this.constants.scenarios.notifications.e2eLatency.markers.createDesktopNotification,s);var c=n.title,l=t.NotificationType.default,h=n.message,d=null,g=null,p=7,u=this.constants.telemetry.notification.type.default,v=null,S=!1,f=n.subtitle,m=n.usrObj,y=n.notificationType,C=n.sourceThreadId,b=n.linkParams,T=n.notificationSubType,w=n.message,k=n.activityId,I=n.skipIfSfBRunning,A=n.loggedInUserSip,M=n.linkState,_=n.notificationDataMTMA,N=n.showPreviewInToasts,D=n.webhookCorrelationId,E=this.parseTeamChannelFromLinkParams(b),P=!1,R="";switch(m&&(m.displayName&&y!==SkypeX.Services.NotificationType.Chat&&(c=m.displayName,this.settingsService.valueAsBoolean(this.constants.settings.names.enableAADFirstAndLastName)&&n.originalNotification&&n.originalNotification.activity&&n.originalNotification.activity.sourceUserImDisplayName&&(c=n.originalNotification.activity.sourceUserImDisplayName),P=!0),m.objectId?R=m.objectId:m.userPrincipalName&&(R=m.userPrincipalName)),y){case SkypeX.Services.NotificationType.Chat:l=t.NotificationType.chat,g=this.constants.icons.notification.chat,p=16,T===SkypeX.Services.NotificationSubType.SmsChat&&(g=this.constants.icons.notification.sms,c=this.$translate.instant(this.resources.strings.notifications_sms_toast_title_text,{displayName:c})),e.services.SfBInteropUtilsService.isSfBConversation(n.sourceThreadId)&&(g=this.constants.icons.notification.sfb),u=this.constants.telemetry.notification.type.chat,v=l+"|"+C+"|"+R;break;case SkypeX.Services.NotificationType.Reply:l=t.NotificationType.reply,P&&(c=this.$translate.instant(this.resources.strings.notifications_desktop_reply_title,{displayName:c})),E&&(h=E),g=this.constants.icons.notification.reply,u=this.constants.telemetry.notification.type.reply;break;case SkypeX.Services.NotificationType.ReplyToReply:l=t.NotificationType.replyToReply,P&&(c=this.$translate.instant(this.resources.strings.notifications_desktop_replytoreply_title,{displayName:c})),E&&(h=E),g=this.constants.icons.notification.reply,u=this.constants.telemetry.notification.type.replyToReply;break;case SkypeX.Services.NotificationType.Mention:case SkypeX.Services.NotificationType.MentionInChat:l=t.NotificationType.mention,T&&T===SkypeX.Services.NotificationSubType.Person?P&&(c=this.$translate.instant(this.resources.strings.notifications_desktop_mention_title,{displayName:c})):w&&w.length>0&&(c=w),E&&(h=E),y===SkypeX.Services.NotificationType.MentionInChat&&(h=this.parseGroupNameFromNotification(n)),g=T===SkypeX.Services.NotificationSubType.Channel?this.constants.icons.notification.channel:T===SkypeX.Services.NotificationSubType.Team?this.constants.icons.notification.teams:this.constants.icons.notification.mention,u=this.constants.telemetry.notification.type.mention;break;case SkypeX.Services.NotificationType.Like:case SkypeX.Services.NotificationType.LikeInChat:l=t.NotificationType.like,P&&(c=this.$translate.instant(this.resources.strings.notifications_desktop_like_title,{displayName:c})),E&&(h=E),y===SkypeX.Services.NotificationType.LikeInChat&&(h=this.parseGroupNameFromNotification(n)),g=this.constants.icons.notification.like,u=this.constants.telemetry.notification.type.like;break;case SkypeX.Services.NotificationType.Reaction:case SkypeX.Services.NotificationType.ReactionInChat:l=t.NotificationType.reaction;var $=this.notificationsAuxiliaryService.getNotificationStyle();!P||this.enableNativeNotificationReactionIcon&&$!==i[i.Purple].toString()||(c=this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title,{displayName:c}));var O=this.enableNativeNotificationReactionIcon&&P&&$===i[i.Native].toString();switch(E&&(h=E),y===SkypeX.Services.NotificationType.ReactionInChat&&(h=this.parseGroupNameFromNotification(n)),n.notificationSubType){case SkypeX.Services.NotificationSubType.Angry:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_angry_icon)}):c,g=this.constants.icons.notification.reactionAngry,u=this.constants.telemetry.notification.type.reactionAngry;break;case SkypeX.Services.NotificationSubType.Heart:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_heart_icon)}):c,g=this.constants.icons.notification.reactionHeart,u=this.constants.telemetry.notification.type.reactionHeart;break;case SkypeX.Services.NotificationSubType.Laugh:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_laugh_icon)}):c,g=this.constants.icons.notification.reactionLaugh,u=this.constants.telemetry.notification.type.reactionLaugh;break;case SkypeX.Services.NotificationSubType.Like:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_like_icon)}):c,g=this.constants.icons.notification.reactionLike,u=this.constants.telemetry.notification.type.reactionLike;break;case SkypeX.Services.NotificationSubType.Sad:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_sad_icon)}):c,g=this.constants.icons.notification.reactionSad,u=this.constants.telemetry.notification.type.reactionSad;break;case SkypeX.Services.NotificationSubType.Surprised:c=O?this.$translate.instant(this.resources.strings.notifications_desktop_reaction_title_with_icon,{displayName:c,reaction:this.$translate.instant(this.resources.strings.notifications_desktop_reaction_surprised_icon)}):c,g=this.constants.icons.notification.reactionSurprised,u=this.constants.telemetry.notification.type.reactionSurprised}break;case SkypeX.Services.NotificationType.TeamMembershipChange:u=this.constants.telemetry.notification.type.teamMemberChange,l=t.NotificationType.teamMembershipChange,T===SkypeX.Services.NotificationSubType.AddedToTeam?(u=this.constants.telemetry.notification.type.addedToTeam,c=this.conversationsService.isPrivateChannel(C)?this.$translate.instant(this.resources.strings.notifications_privatechannel_toast_title,{actor:n.originalNotification.userProfile.displayName}):this.$translate.instant(this.resources.strings.notifications_team_toast_title),this.conversationsService.isPrivateChannel(C)&&(h=E.replace(this.$translate.instant(this.resources.strings.recent_conversations_teamChannelSeparator)," > ")),g=this.constants.icons.notification.addParticipant):T===SkypeX.Services.NotificationSubType.PromotedToTeamAdmin?(u=this.constants.telemetry.notification.type.promotedToTeamAdmin,this.conversationsService.isPrivateChannel(C)?(c=this.$translate.instant(this.resources.strings.notifications_privatechannel_or_sharedchannel_admin_toast_title,{actor:n.originalNotification.userProfile.displayName}),h=this.$translate.instant(this.resources.strings.notifications_privatechannel_sharedchannel_location_text,{teamName:b.groupName,channelName:b.slug})):c=this.$translate.instant(this.resources.strings.notifications_team_admin_toast_title),g=this.constants.icons.notification.promotedToTeamAdmin):this.enableK2CollabNotifications&&T===SkypeX.Services.NotificationSubType.PromotedToSharedChannelOwner?(u=this.constants.telemetry.notification.type.promotedToSharedChannelOwner,c=this.$translate.instant(this.resources.strings.notifications_privatechannel_or_sharedchannel_admin_toast_title,{actor:n.originalNotification.userProfile.displayName}),h=this.$translate.instant(this.resources.strings.notifications_privatechannel_sharedchannel_location_text,{teamName:b.groupName,channelName:b.slug}),g=this.constants.icons.notification.promotedToTeamAdmin):this.enableK2CollabNotifications&&T===SkypeX.Services.NotificationSubType.AddedToSharedChannel?(u=this.constants.telemetry.notification.type.addedToSharedChannel,c=this.$translate.instant(this.resources.strings.notifications_sharedchannel_toast_title,{actor:n.originalNotification.userProfile.displayName}),h=this.$translate.instant(this.resources.strings.notifications_privatechannel_sharedchannel_location_text,{teamName:b.groupName,channelName:b.slug}),g=this.constants.icons.notification.addedToSharedChannel):SkypeX.Services.NotificationUtility.isJoinRequestSubType(T)&&(u=SkypeX.Services.NotificationUtility.isSponsoredJoinRequestSubType(T)?this.constants.telemetry.notification.type.pendingInvitedJoinRequest:this.constants.telemetry.notification.type.pendingSelfJoinRequest,c=h,h=n.originalNotification.displayChannelName,g=this.constants.icons.notification.addParticipant);break;case SkypeX.Services.NotificationType.Download:switch(u=this.constants.telemetry.notification.type.download,l=t.NotificationType.download,S=!0,T){case SkypeX.Services.NotificationSubType.DownloadStarted:g=this.constants.icons.notification.downloadStarted;break;case SkypeX.Services.NotificationSubType.Downloaded:g=this.constants.icons.notification.downloaded;break;case SkypeX.Services.NotificationSubType.DownloadFailed:g=this.constants.icons.notification.downloadFailed}break;case SkypeX.Services.NotificationType.Inferred:u=this.constants.telemetry.notification.type.inferred,l=t.NotificationType.inferred,g=this.constants.icons.notification.inferred,h=E,c=n.notificationSubType===SkypeX.Services.NotificationSubType.ChannelNewMessage?this.$translate.instant(this.resources.strings.notifications_inferred_newMessage_toastTitle,{actor:c}):this.$translate.instant(this.resources.strings.notifications_inferred_replyMessage_toastTitle,{actor:c});break;case SkypeX.Services.NotificationType.Follow:u=this.constants.telemetry.notification.type.follow,l=t.NotificationType.follow,g=this.constants.icons.notification.follow,h=E,c=n.notificationSubType===SkypeX.Services.NotificationSubType.ChannelNewMessage?this.$translate.instant(this.resources.strings.notifications_follow_newMessage_toastTitle,{actor:c}):this.$translate.instant(this.resources.strings.notifications_follow_replyMessage_toastTitle,{actor:c});break;case SkypeX.Services.NotificationType.Trending:u=this.constants.telemetry.notification.type.trending,l=t.NotificationType.trending,g=this.constants.icons.notification.trending,h=E,c=this.$translate.instant(this.resources.strings.notifications_trending_toastTitle,{actor:c});break;case SkypeX.Services.NotificationType.ThirdParty:u=this.constants.telemetry.notification.type.thirdparty,l=t.NotificationType.thirdparty,g=this.constants.icons.notification.thirdparty,c=this.$translate.instant(this.resources.strings.notifications_thirdparty_toastTitle,{actor:c});break;case SkypeX.Services.NotificationType.DLP:u=this.constants.telemetry.notification.type.dlp,l=t.NotificationType.dlp,g=this.constants.icons.notification.dlp,h=n.originalNotification.isChat?this.parseGroupNameFromNotification(n):E,c=this.$translate.instant(this.resources.strings.actor_reason_string_for_dlp);break;case SkypeX.Services.NotificationType.Priority:u=this.constants.telemetry.notification.type.priority,l=t.NotificationType.priority,g=this.constants.icons.notification.priority,p=16,n.usrObj&&n.usrObj.givenName&&(c=n.usrObj.givenName),c=this.$translate.instant(this.resources.strings.actor_reason_string_for_priority_feed_notification,{actor:c});break;case SkypeX.Services.NotificationType.MessageSendFailed:l=t.NotificationType.messageSendFailed,g=this.constants.icons.notification.messageSendFailed;break;case SkypeX.Services.NotificationType.Error:g=this.constants.icons.notification.error;break;case SkypeX.Services.NotificationType.PresenceStatus:l=t.NotificationType.presenceStatus;break;case SkypeX.Services.NotificationType.TeamsEngagementActivity:n.notificationSubType===SkypeX.Services.NotificationSubType.WelcomeNewUser&&(u=this.constants.telemetry.notification.type.welcomeNewUser,l=t.NotificationType.teamsEngagementActivity,g=this.constants.icons.notification.inferred,n.usrObj&&n.usrObj.givenName&&(c=n.usrObj.givenName),c=this.$translate.instant(this.resources.strings.actor_reason_string_for_welcome_user,{actor:c}));break;case SkypeX.Services.NotificationType.StaffHub:switch(l=t.NotificationType.StaffHub,h=n.originalNotification.isChat?this.parseGroupNameFromNotification(n):E,g=this.constants.icons.notification.teamsShifts,n.usrObj&&n.usrObj.givenName&&(c=n.usrObj.givenName),n.notificationSubType){case SkypeX.Services.NotificationSubType.NewShift:c=this.$translate.instant(this.resources.strings.teams_shifts_shift_assigned,{actor:c});break;case SkypeX.Services.NotificationSubType.SchedulePublished:c=this.$translate.instant(this.resources.strings.teams_shifts_schedule_published,{actor:c});break;case SkypeX.Services.NotificationSubType.NewShiftRequest:c=this.$translate.instant(this.resources.strings.teams_shifts_timeoff_requested,{actor:c});break;case SkypeX.Services.NotificationSubType.ShiftRequestUpdated:c=this.$translate.instant(this.resources.strings.teams_shifts_timeoff_updated,{actor:c});break;case SkypeX.Services.NotificationSubType.ShiftUpdated:c=this.$translate.instant(this.resources.strings.teams_shifts_shift_updated,{actor:c})}break;case SkypeX.Services.NotificationType.TeamsTasks:switch(l=t.NotificationType.TeamsTasks,h=n.originalNotification.isChat?this.parseGroupNameFromNotification(n):E,g=this.constants.icons.notification.teamsTasks,n.usrObj&&n.usrObj.givenName&&(c=n.usrObj.givenName),n.notificationSubType){case SkypeX.Services.NotificationSubType.TaskAssignedToYou:c=this.$translate.instant(this.resources.strings.teams_tasks_task_assigned,{actor:c});break;case SkypeX.Services.NotificationSubType.UrgentTaskAssignedToYou:c=this.$translate.instant(this.resources.strings.teams_tasks_urgent_task_assigned,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskWasUpdated:c=this.$translate.instant(this.resources.strings.teams_tasks_task_updated,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToNotStarted:c=this.$translate.instant(this.resources.strings.teams_tasks_task_not_started,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToInProgress:c=this.$translate.instant(this.resources.strings.teams_tasks_task_in_progress,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToCompleted:c=this.$translate.instant(this.resources.strings.teams_tasks_task_completed,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToBlocked:c=this.$translate.instant(this.resources.strings.teams_tasks_task_blocked,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToRemoved:c=this.$translate.instant(this.resources.strings.teams_tasks_task_removed,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskChangedToNotApplicable:c=this.$translate.instant(this.resources.strings.teams_tasks_task_not_applicable,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskWasReassigned:c=this.$translate.instant(this.resources.strings.teams_tasks_task_reassigned,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskWasDeleted:c=this.$translate.instant(this.resources.strings.teams_tasks_task_deleted,{actor:c});break;case SkypeX.Services.NotificationSubType.TaskListPublishedToYourTeam:c=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_published,{actor:c});break;case SkypeX.Services.NotificationSubType.TaskListRecalledFromYourTeam:c=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_recalled,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskWasMarkedUrgent:c=this.$translate.instant(this.resources.strings.teams_tasks_task_made_urgent,{actor:c});break;case SkypeX.Services.NotificationSubType.YourTaskWasMarkedNotUrgent:c=this.$translate.instant(this.resources.strings.teams_tasks_task_made_not_urgent,{actor:c});break;case SkypeX.Services.NotificationSubType.UrgentTaskPublishedToYourTeam:c=this.$translate.instant(this.resources.strings.teams_tasks_tasklist_published,{actor:c})}break;case SkypeX.Services.NotificationType.MsGraph:l=t.NotificationType.msGraph,c=n.title,h=n.message,g=this.settingsService.valueAsBoolean(this.constants.settings.names.enableGraphApiPhase2Enhancements)?null:this.constants.icons.notification.thirdparty,u=this.constants.telemetry.notification.type.msGraph;break;default:g=this.constants.icons.notification.default,this.logger.warn("unknown notification action type of "+y)}if(h&&0!==h.trim().length||(c=n.title),n.isMsGraphAppContextNotificationAssociatedWithTeamsApp&&n.teamsAppIconUrl){this.logger.info("isMsGraphAppContextNotificationAssociatedWithTeamsApp "+n.isMsGraphAppContextNotificationAssociatedWithTeamsApp),this.logger.info("teamsAppIconUrl "+n.teamsAppIconUrl);var x,U=window.stopBackgroundThrottling(function(e){e&&r.logger.info("[Notification data] disable background throttling"),x=r.loggingService.newScenario(r.constants.scenarios.toast.getBase64TeamsIcon),SkypeX.Services.NotificationUtility.markScenarioIfExists(r.constants.scenarios.toast.getBase64TeamsIcon,s)});(W=this.getBase64Image(n.teamsAppIconUrl,"png")).then(function(e){d=e,r.actionNotificationData=r.createActionsNotificationData(l,c,f,h,d,g,S,p,v,C,k,u,M,b,n,a,o,I,A,y,T,void 0,D),SkypeX.Services.NotificationUtility.markScenarioIfExists(r.constants.scenarios.notifications.e2eLatency.markers.createNotificationWithActions_withTeamsAppImageForGraphAPI,s),r.createNotificationWithActions(r.actionNotificationData,s),U(function(e,t){e&&r.logger.info("[Notification data] try enable background throttling"),x.stop({isLockReleased:t})})}).catch(function(t){U(function(i,n){i&&r.logger.info("[Notification data][catch] try enable background throttling"),x.fail({error:t,isLockReleased:n}),SkypeX.Services.NotificationUtility.failScenarioIfExists(s,{failToastReason:r.constants.scenarios.notifications.e2eLatency.toastFailReason.getBase64TeamsIconException+new e.services.PIIString(t.message).scrubbedValue,isLockReleased:n})})})}else if(m&&m.userPrincipalName&&m.displayName&&y!==SkypeX.Services.NotificationType.Priority&&y!==SkypeX.Services.NotificationType.DLP){var F,W=void 0,V=window.stopBackgroundThrottling(function(e){e&&r.logger.info("[User/initial picture] disable background throttling"),F=r.loggingService.newScenario(r.constants.scenarios.toast.getUserInitialPicture),SkypeX.Services.NotificationUtility.markScenarioIfExists(r.constants.scenarios.toast.getUserInitialPicture,s)});if(m.isAnonymousUser||this.peopleService.isUnknownUser(m))W=this.peopleService.getUserInitialsPicture(m.displayName,this.constants.profilePictureSizes.small,"notificationsServiceDesktop");else{var L=void 0;_&&(L={tenantId:_.id,oid:_.currentUserIdInSecondaryTenant}),W=this.settingsService.valueAsBoolean(this.constants.settings.names.enableProfilePictureV2ForNotifications)?this.profilePictureLoaderService.getProfilePictureV2AsDataUri({mri:m.mri,displayName:m.displayName,principalName:m.userPrincipalName,size:this.constants.profilePictureSizes.small,source:"notificationsServiceDesktop"},!1):this.peopleService.isMSAProfilePictureEnabled()?this.peopleService.getUserProfilePicture({userId:m.userPrincipalName,displayName:m.displayName,imageUri:m.imageUri},"notificationsServiceDesktop",null,!0,!0,!0,L):this.peopleService.getUserProfilePicture({userId:m.userPrincipalName,displayName:m.displayName},"notificationsServiceDesktop",null,!0,!0,!0,L)}W.then(function(e){e&&(d=e),r.actionNotificationData=r.createActionsNotificationData(l,c,f,h,d,g,S,p,v,C,k,u,M,b,n,a,o,I,A,y,T,N,D),SkypeX.Services.NotificationUtility.markScenarioIfExists(r.constants.scenarios.notifications.e2eLatency.markers.createNotificationWithActions_withUserProfileImage,s),r.createNotificationWithActions(r.actionNotificationData,s),V(function(e,t){e&&r.logger.info("[User/initial picture] try enable background throttling"),F.stop({isLockReleased:t})})}).catch(function(t){V(function(i,n){i&&r.logger.info("[User/initial picture][catch] try enable background throttling"),F.fail({error:t,isLockReleased:n}),SkypeX.Services.NotificationUtility.failScenarioIfExists(s,{failToastReason:r.constants.scenarios.notifications.e2eLatency.toastFailReason.getUserInitialPictureException+new e.services.PIIString(t.message).scrubbedValue,isLockReleased:n})})})}else this.actionNotificationData=this.createActionsNotificationData(l,c,f,h,d,g,S,p,v,C,k,u,M,b,n,a,o,I,A,y,T,N,D),SkypeX.Services.NotificationUtility.markScenarioIfExists(this.constants.scenarios.notifications.e2eLatency.markers.createNotificationWithActions_withNullImage,s),this.createNotificationWithActions(this.actionNotificationData,s)},a.prototype.getBase64Image=function(e,t){return __awaiter(this,void 0,void 0,function(){var i;return __generator(this,function(n){switch(n.label){case 0:return i=void 0,[4,this.getAMSHeaders().then(function(t){var i={method:"GET",url:e,headers:t,responseType:"arraybuffer",params:{withCredentials:!0}};return this.$http(i)}.bind(this)).then(function(e){var n=this.base64FromArrayBuffer(e.data);i="data:"+("image/"+t)+";base64,"+n}.bind(this)).catch(function(e){this.logger.warn("NotificationsService.Desktop: Error retrieving image for priority notifications. Error Code: "+e.status)}.bind(this))];case 1:return n.sent(),[2,i]}})})},a.prototype.base64FromArrayBuffer=function(e){var t="";return new Uint8Array(e).forEach(function(e){t+=String.fromCharCode(e)}),btoa(t)},a.prototype.getAMSHeaders=function(){var e=this,t=this.$q.defer();return this.authenticationService.getSkypeTokens().then(function(i){var n={};n[e.constants.headers.tokens.authorization]=e.constants.files.strings.skypeToken+i.skypeToken,n[e.constants.headers.accept]="*/*",n[e.constants.headers.contentType]=e.constants.headers.multipart,t.resolve(n)},function(e){t.reject()}),t.promise},a.prototype.createActionsNotificationData=function(i,n,a,o,s,r,c,l,h,d,g,p,u,v,S,f,m,y,C,b,T,w,k){var I=this,A={title:n,subtitle:a,type:i,message:o,image:s,icon:r,windowActionIconProperty:c,timeout:l,linkState:u,appId:S&&S.teamsAppId,skipIfSfBRunning:y,loggedInUserSip:C,notificationDataMTMA:S&&S.notificationDataMTMA,notificationStyle:void 0,showPreviewInToasts:w,activityId:g,showSquareImageInAvatar:i===t.NotificationType.msGraph&&S.isMsGraphAppContextNotificationAssociatedWithTeamsApp||!1,primaryAction:{action:function(){if(g&&(I.eventingService.$emit(I.constants.events.pushEvents.activityHub.toastClicked,g),I.startActivitySwitch(b,I.messagingTelemetryService)),f){var t={launchMethod:e.components.LaunchMethod.toast};I.analyticsStateService.setLaunchMethodState(t),f(u,v)}else I.settingsService.valueAsBoolean(I.constants.settings.names.enableThirdPartyNotificationReplyMention)?I.navigationNotificationService.navigateWithNotificationData(S,I.$rootScope):I.gotoState(u,v)}},dismissAction:{action:function(){m&&m(),I.actionNotificationData=null}},timeoutAction:null,errorAction:null,actions:[{action:function(){if(f){var t={launchMethod:e.components.LaunchMethod.toast};I.analyticsStateService.setLaunchMethodState(t),f(u,v)}I.actionNotificationData=null}}],trackingType:p,sourceId:h,sourceThreadId:d,skypexType:b,skypexSubType:T,webhookCorrelationId:k};return i===t.NotificationType.priority&&v&&v.messageId&&(A.messageIdForPriorityMessage=v.messageId),v&&v.messageId?A.messageId=v.messageId:S&&S.sourceMessageId&&(A.messageId=S.sourceMessageId),(this.desktopUtilityService.isDesktop()&&this.platformDetectService.getOS()===this.constants.os.windows&&"10"===this.platformDetectService.getOSVersion()||this.platformDetectService.getOS()===this.constants.os.mac&&"10"===this.platformDetectService.getOSVersion()&&this.platformDetectService.getOSMinorVersion()>=14)&&(A.notificationStyle=this.notificationsAuxiliaryService.getNotificationStyle()),A},a.prototype.onNotificationClicked=function(e,t,i,n){if(t&&this.eventingService.$emit(this.constants.events.pushEvents.activityHub.toastClicked,t),this.notificationHandlers.has(e)){var a=this.notificationHandlers.get(e);this.notificationHandlers.delete(e),a.click&&a.click(i,n)}else this.gotoState(i,n);this.actionNotificationData=null},a.prototype.gotoState=function(e,t){var i=angular.extend(t,{lm:this.constants.telemetry.analytics.launchMethod.toast});this.$state.go(e,i)},a.prototype.onNotificationShown=function(e){var t=this.notificationHandlers.get(e);t&&t.data&&t.data.onNotificationShown&&t.data.onNotificationShown()},a.prototype.onNotificationUpdated=function(e){var t=this.notificationHandlers.get(e);t&&t.data&&t.data.onNotificationUpdated&&t.data.onNotificationUpdated()},a.prototype.onNotificationProcessFail=function(e,t,i){var n=this.notificationHandlers.get(e);n?(this.logger.info("onNotificationProcessFail: Notification with ID: "+e+". Has process throw exception: "+t+". IsPurpleNotification: "+i),n.data&&n.data.errorAction&&n.data.errorAction.action()):this.logger.info("onNotificationProcessFail: There are no handlers. Notification with ID: "+e+" should have been already removed")},a.prototype.onNotificationTimeout=function(e){delete this.notificationHandlers[e],this.actionNotificationData=null},a.prototype.onNotificationDismissed=function(e){if(this.logger.info("OS notification dismiss attempted for "+e),this.notificationHandlers.has(e)){var t=this.notificationHandlers.get(e);if(this.notificationHandlers.delete(e),t.data){var i=(new Date).getTime()-t.time,n={target:this.constants.telemetry.notification.target.dismiss,notificationAction:t.data.dismissAction};if(n.notificationAction){n.notificationAction.action();var a={};a[this.constants.telemetry.notification.property.id]=e,a[this.constants.telemetry.notification.property.type]=t.data.trackingType,a[this.constants.telemetry.notification.property.timeElapsed]=i,a[this.constants.telemetry.notification.property.target]=n.target,this.loggingService.event(this.constants.telemetry.notification.actionTaken,a)}else this.logger.warn("cannot take notification action. Target action doesn't exist for "+e)}else this.logger.warn("cannot take notification action. Action doesn't exist for "+e)}else this.logger.warn("cannot take notification action. Notification handler doesn't exist for "+e)},a.prototype.cancelNotification=function(e){return this.notificationHandlers||this.cancellationHandlers||this.actionNotificationData?(this.notificationHandlers.has(e)&&this.notificationHandlers.delete(e),this.cancellationHandlers.has(e)?(this.logger.info("Cancelled notification toast with ID: "+e+" and sent event to desktop"),this.safeIpc.send(this.constants.events.desktopApp.notificationActionCancel,e),!0):(this.logger.warn("cancelNotification: Cannot cancel notification. Handler doesn't exist for notification with ID: "+e),this.actionNotificationData=null,!1)):(this.logger.info("cancelNotification: There are no handlers. Notification with ID: "+e+" should have been already removed"),!1)},a.prototype.onNotificationActionTaken=function(e,t,i,n,a){if(void 0===i&&(i=""),void 0===n&&(n=""),void 0===a&&(a=!1),this.logger.info("action taken for notification "+e),this.notificationHandlers.has(e)){var o=this.notificationHandlers.get(e);if(this.notificationHandlers.delete(e),t&&o.data){var s=(new Date).getTime()-o.time,r=this.getNotificationActionData(o.data,t);if(r&&r.notificationAction){r.notificationAction.action();var c={};c[this.constants.telemetry.notification.property.id]=e,c[this.constants.telemetry.notification.property.type]=o.data.trackingType,c[this.constants.telemetry.notification.property.timeElapsed]=s,c[this.constants.telemetry.notification.property.target]=r.target,this.loggingService.event(this.constants.telemetry.notification.actionTaken,c)}else this.logger.warn("cannot take notification action. Target action doesn't exist for "+e)}else this.logger.warn("cannot take notification action. Action doesn't exist for "+e)}else if(this.logger.warn("onNotificationActionTaken: cannot take notification action. Handler doesn't exist for "+e),a&&(n||i)){var l=this.$injector.get("messageNotificationService");l?l.navigateToConvByConvId(n,i):this.logger.warn("messageNotificationService is null")}this.cancellationHandlers.has(e)&&this.cancellationHandlers.delete(e),this.actionNotificationData=null},a.prototype.onNotificationActionCancelled=function(e,t){if(this.logger.info("Cancelling notification with ID: "+e),this.cancellationHandlers.has(e)){var i=this.cancellationHandlers.get(e);if(this.cancellationHandlers.delete(e),i.cancelable){var n=(new Date).getTime()-i.time;i.cancelable.complete(t);var a={};a[this.constants.telemetry.notification.property.id]=e,a[this.constants.telemetry.notification.property.type]=i.trackingType,a[this.constants.telemetry.notification.property.timeElapsed]=n,a[this.constants.telemetry.notification.property.status]=t?this.constants.telemetry.notification.property.status_completed:this.constants.telemetry.notification.property.status_failed,this.loggingService.event(this.constants.telemetry.notification.cancel,a)}}else this.logger.warn("onNotificationActionCancelled: Cannot cancel notification. Handler doesn't exist for notification with ID: "+e);this.actionNotificationData=null},a.prototype.onNotificationActionNotShown=function(e){if(this.logger.info("not shown notification "+e),this.notificationHandlers.has(e)){var t=this.notificationHandlers.get(e);if(this.notificationHandlers.delete(e),t.data){var i=(new Date).getTime()-t.time,n={};n[this.constants.telemetry.notification.property.id]=e,n[this.constants.telemetry.notification.property.type]=t.data.trackingType,n[this.constants.telemetry.notification.property.timeElapsed]=i,this.loggingService.event(this.constants.telemetry.notification.notShown,n)}}this.cancellationHandlers.has(e)&&this.cancellationHandlers.delete(e),this.actionNotificationData=null},a.prototype.onSfBNotificationActionNotShown=function(e){var t=this.notificationHandlers.get(e);if(this.logger.info("sfb notification not shown "+e),t.data){var i=(new Date).getTime()-t.time,n={};n[this.constants.telemetry.notification.property.id]=e,n[this.constants.telemetry.notification.property.type]=t.data.trackingType,n[this.constants.telemetry.notification.property.timeElapsed]=i,this.loggingService.event(this.constants.telemetry.notification.notShown,n)}},a.prototype.populateRingtoneName=function(e){_.isUndefined(e.ringtoneCallType)&&_.isNull(e.ringtoneCallType)||(e.ringtoneCallType===t.RingtoneCallType.CallGroup&&(this.logger.info("populating ringtone file name for call groups {0}",this.ringtoneNameCallGroup),e.ringtoneFile=this.ringtoneNameCallGroup),e.ringtoneCallType===t.RingtoneCallType.CallQueue&&(this.logger.info("populating ringtone file name for call queue, {0}",this.ringtoneNameCallQueue),e.ringtoneFile=this.ringtoneNameCallQueue),e.ringtoneCallType===t.RingtoneCallType.Delegate&&(this.logger.info("populating ringtone file name for Delegate ,{0}",this.ringtoneNameCallDelegate),e.ringtoneFile=this.ringtoneNameCallDelegate),e.ringtoneCallType===t.RingtoneCallType.Regular&&(this.logger.info("populating ringtone file name for Regular, {0}",this.ringtoneNameCallRegular),e.ringtoneFile=this.ringtoneNameCallRegular),e.ringtoneCallType===t.RingtoneCallType.MeetingStartedReminder&&(this.logger.info("populating ringtone file name for meetingstartedReminder, {0}",this.ringtoneNameCallMeetingReminder),e.ringtoneFile=this.ringtoneNameCallMeetingReminder))},a.prototype.populateNotificationData=function(e){if(e.primaryAction&&(e.primaryAction.id=this.utilityService.generateUUID()),e.dismissAction&&(e.dismissAction.id=this.utilityService.generateUUID()),e.timeout&&e.timeout>0&&!e.timeoutAction&&(e.timeoutAction={action:function(){}}),e.timeoutAction&&(e.timeoutAction.id=this.utilityService.generateUUID()),e.actions)for(var t=0;t<e.actions.length;t++)e.actions[t].id=this.utilityService.generateUUID()},a.prototype.getNotificationActionData=function(e,t){var i={target:"",notificationAction:null};if(e.primaryAction.id===t)i.target=this.constants.telemetry.notification.target.primary,i.notificationAction=e.primaryAction;else if(e.dismissAction&&e.dismissAction.id===t)i.target=this.constants.telemetry.notification.target.dismiss,i.notificationAction=e.dismissAction;else if(e.timeoutAction&&e.timeoutAction.id===t)i.target=this.constants.telemetry.notification.target.timeout,i.notificationAction=e.timeoutAction;else if(e.actions)for(var n=0;n<e.actions.length;n++)if(e.actions[n].id===t){i.target=n+1+"",i.notificationAction=e.actions[n];break}return i},a.prototype.removeOldestHandler=function(){var e=this.notificationHandlers.keys().next().value;this.notificationHandlers.has(e)&&(this.notificationHandlers.delete(e),this.logger.info("removed orphaned handler for "+e)),this.cancellationHandlers.has(e)&&(this.cancellationHandlers.delete(e),this.safeIpc.send(this.constants.events.desktopApp.notificationActionCancel,e),this.logger.info("Removed orphaned cancellation handler and Cancelled notification toast with ID: "+e)),this.actionNotificationData=null},a.prototype.clearTaskbarWindowFlash=function(e){e&&this.safeIpc.send(this.constants.events.desktopApp.clearTaskbarWindowFlash,e)},a.prototype.updateTaskbarBadge=function(e,t){void 0===t&&(t=void 0);var i=this.settingsService.valueAsBoolean(this.constants.settings.names.enableOptimizedBadgeCount);this.logger.info("previous badge count is "+this.lastBadgeCountSent+" and new badge count is "+e),i?(e!==this.lastBadgeCountSent||t)&&(this.safeIpc.send(this.constants.events.desktopApp.updateTaskbarBadgeCount,e,t),this.lastBadgeCountSent=e):this.safeIpc.send(this.constants.events.desktopApp.updateTaskbarBadgeCount,e,t)},a.prototype.getTotalBadgeCount=function(){var e=0;for(var t in this.badgeCounts){var i=this.badgeCounts[t];i&&angular.isNumber(i)&&(e+=this.badgeCounts[t])}return!this.chatsEnabled&&this.badgeCounts.chat&&(e-=this.badgeCounts.chat),e},a}(t.NotificationsService);t.NotificationsServiceDesktopImplementation=n,angular.module("teamspace.notificationsService",["teamspace.ariaLiveService","teamspace.notificationsAuxiliaryService","teamspace.notificationSettingsStore","teamspace.navigationNotificationService","teamspace.routeUtilityService","teamspace.audioService","teamspace.messagingTelemetryService","teamspace.hybridContentVisibilityManager","teamspace.profilePictureLoaderService","teamspace.localizationService"]).service("notificationsService",n),angular.module("teamspace.notificationsServiceDesktop",["teamspace.ariaLiveService","teamspace.notificationsAuxiliaryService","teamspace.notificationSettingsStore","teamspace.routeUtilityService","teamspace.ringtoneSettingService","teamspace.audioService","teamspace.messagingTelemetryService","teamspace.deviceManagerService","teamspace.hybridContentVisibilityManager","teamspace.profilePictureLoaderService","teamspace.localizationService"]).service("notificationsService",n)}(e.services||(e.services={}))}(teamspace||(teamspace={}));