webpackJsonp([8],{2373:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(2374)},2374:function(e,n,t){"use strict";var i=this&&this.__extends||function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function i(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}}();Object.defineProperty(n,"__esModule",{value:!0});var o=t(2375),r=t(2397),s=t(2398),a=t(2399),c=function(e){function n(n,t,i){var o=e.call(this,i)||this;return o.transportDependencyProviderService=n,o.logger=n.loggingService.newLogger("transportLazyLoadService"),o.initializeOnAppLaunchAndReinit(),o}return i(n,e),n.$inject=["transportDependencyProviderService","transportAgentService","orchestrationService"],n.prototype.getTransportCommandRouter=function(){return this.transportCommandRouter},n.prototype.getTransportConnectionHandler=function(){return this.transportConnectionHandler},n.prototype.getTransportAgentHandler=function(){return this.transportAgentHandler},n.prototype.getTransportCallKeeper=function(){return this.transportCallKeeper},n.prototype.initializeTranportConnectionHandling=function(e,n){this.transportCommandRouter=new o.TransportCommandRouter(this.transportDependencyProviderService,n,e),this.transportConnectionHandler=new r.TransportConnectionHandler(this.transportDependencyProviderService,this.transportCommandRouter),this.transportAgentHandler=new s.TransportAgentHandler(this.transportCommandRouter,this.transportConnectionHandler),this.transportCallKeeper=new a.TransportCallKeeper(this.transportDependencyProviderService)},n.prototype.cleanupOnAppTeardown=function(e){this.logger.info("clean up has been called. marking commandRouter and connectionHandler as undefined."),this.transportConnectionHandler.cleanUpConnectionHandler(),this.transportCallKeeper.cleanupCallKeeper(),this.transportCommandRouter=void 0,this.transportConnectionHandler=void 0,this.transportAgentHandler=void 0,this.transportCallKeeper=void 0},n.prototype.initializeOnAppLaunchAndReinit=function(e){},n.prototype.mtmaTelemetryIdentifier=function(){return"TransportLazyLoadService"},n}(teamspace.services.MTMABase);n.TransportLazyLoadService=c,angular.module("teamspace.transportLazyLoadService",["teamspace.transportDependencyProviderService","teamspace.transportAgentService"]).service("transportLazyLoadService",c)},2375:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,o=t(2376),r=t(2389);!function(e){e.InitState="InitState",e.ActiveIncomingCommandsCount="ActiveIncomingCommandsCount",e.ActiveOutgoingCommandsCount="ActiveOutgoingCommandsCount",e.AckFailedCountInSession="AckFailedCountInSession",e.AckSuccessCountInSession="AckSuccessCountInSession"}(i=n.TransportCommandRouterStates||(n.TransportCommandRouterStates={}));var s=function(){function e(e,n,t){this.transportDependencyProviderService=e,this.transportStack=n,this.transportUser=t,this.ComponentName="TransportCommandRouter",this.ackSuccessCount=0,this.ackFailureCount=0,this.outgoingCommandResponseTimeout=6e4,this.incomingCommandFactory=new o.IncomingCommandFactory(e),this.outgoingCommandFactory=new r.OutgoingCommandFactory(e),this.activeIncomingCommands=new Map,this.activeOutgoingCommands=new Map,this.setupInitialStates(),this.constants=e.constants,this.logger=e.loggingService.newLogger(this.ComponentName),this.states.set(i.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.onIncomingCommandReceived=function(e,n){var t,i=this;if(e&&e.command){var o=this.getScenarioNameForIncomingCommand(e.command);t=this.transportDependencyProviderService.loggingService.newScenario(o,null,null,null,!0)}else t=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.incomingCommand.invalidCommand,null,null,null,!0);if(this.validateIncomingCommand(e,n,t)){var r=e.command;if(this.logger.info("Incoming command received with name - "+r),r!==teamspace.services.IncomingCommand.Response){var s=this.incomingCommandFactory.createCommand(e,t);if(!s){var a="Incoming Command not created for "+e.command+". Command not compatible or implemented";return this.logger.error(a),void this.ackIncomingCommandFailure(n,a)}this.activeIncomingCommands.set(e.causeId,s),this.ackIncomingCommandSuccess(n),s.action().promise.then(function(n){i.sendResponse(e,n),i.logger.info("Sending response for "+e.command)}).catch(function(n){i.sendResponse(e,n,!0),i.logger.error("Error in executing command "+e.command+" - Error - "+n.errorDetails)})}else{this.ackIncomingCommandSuccess(n);var c=JSON.parse(e.commandDetails);this.onResponseReceivedForOutgoingCommand(c,t)}}},e.prototype.ackIncomingCommandSuccess=function(e){var n=e({status:200,body:JSON.stringify({})}),t=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);if(n!==teamspace.services.ResponseSendStatusCode.Success){var i="Failed to send ack for the incoming command - result: "+n;t.fail({message:i}),this.logger.error(i)}else{var o="Ack sent for incoming command";t.stop({message:o}),this.logger.info(o)}},e.prototype.ackIncomingCommandFailure=function(e,n){var t=e({status:404,body:n?JSON.stringify(n):JSON.stringify({})}),i=this.transportDependencyProviderService.loggingService.newScenario(this.constants.scenarios.betterTogether.commandRouter.ackIncomingCommand,null,null,null,!0);if(t!==teamspace.services.ResponseSendStatusCode.Success){var o="Failed to send failure for the incoming command - result: "+t;i.fail({message:o}),this.logger.error(o)}else{var r="Failed-Ack-response sent for incoming command";i.stop({message:r}),this.logger.info(r)}},e.prototype.validateIncomingCommand=function(e,n,t){if(!this.transportDependencyProviderService.canInitializeTransport()){r="ECS not enabled. Received incoming command "+e.command;return this.logger.error(r),t.stop({message:r}),!1}if(!e){r="Invalid transport command";return this.logger.error(r),t.fail({message:r}),!1}var i=this.transportDependencyProviderService.callingAgentsService,o=JSON.parse(e.commandDetails);if(o.targetEndpointId&&i.getRegistrationId()!==o.targetEndpointId){var r="Incoming commmand is not meant for this endpoint id";return this.logger.error(r),t.fail({message:r}),this.ackIncomingCommandFailure(n,r),!1}return!0},e.prototype.cleanupIncomingCommand=function(e){var n=this.activeIncomingCommands.get(e);n&&(this.activeIncomingCommands.delete(e),n=void 0)},e.prototype.sendResponse=function(e,n,t){var i=this;void 0===t&&(t=!1);var o=t?400:200,r=e.causeId;if(this.activeIncomingCommands.get(r)){if(n){n.statusCode=o,n.requestCauseId=r;var s=this.sendOutgoingCommand(teamspace.services.OutgoingCommand.Response,n,e.endpointId);s?s.promise.then(function(e){i.logger.info("Response completed")}):this.logger.error("Response command not created")}this.cleanupIncomingCommand(r)}},e.prototype.sendOutgoingCommand=function(e,n,t){var i=this,o=this.getScenarioNameForOutgoingCommand(e),r=this.transportDependencyProviderService.loggingService.newScenario(o,null,null,null,!0);if(!this.transportDependencyProviderService.canInitializeTransport()){c="FF not enabled for outgoing command "+e;return r.fail({message:c}),this.logger.error(c),(d=this.transportDependencyProviderService.$q.defer()).reject(c),d}var s;if(t?s=this.getIBTTransportEndpoint(t,!0):(s=this.getIBTTransportEndpoint(t,!1))&&this.isSessionEstablishedWithEndpoint(s)||(s=this.getIBTTransportEndpoint(t,!0)),!s){c="Outgoing Command not created for "+e+". No available endpoint to send the command to";return r.fail({message:c}),this.logger.error(c),(d=this.transportDependencyProviderService.$q.defer()).reject(c),d}n.targetEndpointId=s.getEndpointId();var a=this.outgoingCommandFactory.createCommand(e,n,s,r);if(!a){var c="Command not created for "+e+". Not compatible or implemented";this.logger.error(c);var d=this.transportDependencyProviderService.$q.defer();return d.reject(c),d}return this.activeOutgoingCommands.set(a.causeId,a),this.logger.info("Command added to the active outgoing commands. "+a.causeId+". Name - "+a.name+" Size is - "+this.activeOutgoingCommands.size),a.onCommandReadyToSend.promise.then(function(t){var o=i.createBTTOutgoingCommandListener(r);a.commandResponseListener=o;var s=n?JSON.stringify(n):"";if(i.isSessionEstablishedWithEndpoint(a.endpoint)){c="[sendOutgoingCommand] command name - "+e+" with details "+s;i.logger.info(c),a.endpoint.sendCommand(a.causeId,e,s,o)}else{var c="[sendOutgoingCommand] session setup, command name - "+e+" with details "+s;i.logger.info(c),a.endpoint.setupSession(a.causeId,e,s,o)}setTimeout(function(){if(a.name===teamspace.services.OutgoingCommand.CreateAndStartCall&&a.acknowledgementReceived)setTimeout(function(){if(-1!==i.cleanupOutgoingCommand(a.causeId)){var n="no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+a.acknowledgementReceived,t={errorDetails:n,statusCode:400,salt:[-1],requestCauseId:a.causeId};a.onResponseReceived.reject(t),i.logger.error(n)}},2*i.outgoingCommandResponseTimeout);else if(-1!==i.cleanupOutgoingCommand(a.causeId)){var n="no response received for outgoing command with name - "+e+" within threshold time. acknowledgement received - "+a.acknowledgementReceived,t={errorDetails:n,statusCode:400,salt:[-1],requestCauseId:a.causeId};a.onResponseReceived.reject(t),i.logger.error(n)}},i.outgoingCommandResponseTimeout)}).catch(function(e){var n={errorDetails:e,statusCode:400,salt:[-1],requestCauseId:a.causeId};a.onResponseReceived.reject(n),i.cleanupOutgoingCommand(a.causeId)}),a.onResponseReceived},e.prototype.isSessionEstablishedWithEndpoint=function(e){var n=this.transportDependencyProviderService.getPairedAndActiveEndpoint();return!(!n||!e)&&n.endPointId===e.getEndpointId()},e.prototype.startSession=function(e){this.logger.info("starting session with endpoint with a force discover.");var n=this.getIBTTransportEndpoint(e,!0);n&&n.setSessionEstablished(!0)},e.prototype.endSession=function(e){this.logger.info("ending session with endpoint without a force discover.");var n=this.getIBTTransportEndpoint(e,!1);n&&(n.setSessionEstablished(!1),this.ackFailureCount=0,this.ackSuccessCount=0)},e.prototype.getStates=function(){return this.states.set(i.ActiveOutgoingCommandsCount,this.activeOutgoingCommands.size),this.states.set(i.ActiveIncomingCommandsCount,this.activeIncomingCommands.size),this.states.set(i.AckFailedCountInSession,this.ackFailureCount),this.states.set(i.AckSuccessCountInSession,this.ackSuccessCount),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(i.InitState,teamspace.services.ITransportComponentState.Uninitialized)},e.prototype.onResponseReceivedForOutgoingCommand=function(e,n){var t={message:"",result:!1};if(!e.requestCauseId){o="Request cause id not found with the response";return this.logger.error(o),void n.fail({message:o})}var i=this.activeOutgoingCommands.get(e.requestCauseId);if(!i){o="No outgoing command found with the requestCauseId or response not required";return this.logger.error(o),void n.fail({message:o})}if(n.stop(),200!==e.statusCode){var o="response is not OK for command name - "+i.name+", status code- "+e.statusCode+" and error details - "+e.errorDetails;t.message=o,this.logger.error(o),i.onResponseReceived.reject(e)}else{var r="response resolved for outgoing command name - "+i.name;t.message=r,this.logger.info(r),i.onResponseReceived.resolve(e)}this.cleanupOutgoingCommand(e.requestCauseId)},e.prototype.cleanupOutgoingCommand=function(e){var n=this.activeOutgoingCommands.get(e);if(n){n.commandResponseListener&&n.commandResponseListener.dispose(),this.logger.info("Command with causeid - "+e+" cleaned up. Name - "+n.name+" Size is - "+this.activeOutgoingCommands.size);var t=n.startTime;if(this.activeOutgoingCommands.delete(e),n=void 0,t)return(new Date).getTime()-t.getTime()}return-1},e.prototype.createBTTOutgoingCommandListener=function(e){var n=this,t=this.transportStack.createOutgoingCommandResponse();return t.on("request-succeeded",function(t){var i=t.causeId,o=t.responseBody;n.ackSuccessCount++,n.logger.info("Received transport response for "+i+".");var r=n.activeOutgoingCommands.get(i);if(r){r.acknowledgementReceived=!0;var s=o?JSON.parse(o):void 0;if(r.commandDetails.companionResponseRequired){c="Command acknowledged by companion device,command name - "+r.name+", requires response from device";n.logger.info(c),e.appendEventData({message1:c})}else{r.onResponseReceived.resolve(s);var a=n.cleanupOutgoingCommand(i),c="Outgoing command does not need response,command name - "+r.name+" time taken is "+a;n.logger.info(c),e.appendEventData({message1:c})}}else{var d=t.causeId?t.causeId:"causeID not present";n.logger.error("No valid outgoing command in request-succeeded. causeId - "+d),e.fail({message:"No valid outgoing command in request-succeeded. causeId - "+d})}}),t.on("request-failed",function(t){var i=t.causeId,o=t.errorCode,r=t.errorDetails;n.ackFailureCount++,n.logger.info("Received transport response. errorCode - "+o);var s=n.activeOutgoingCommands.get(i);if(s){if(!s.isRetry){var a=s.startTime,c=0;a&&(c=(new Date).getTime()-a.getTime());var d="received error response for outgoing command name - "+s.name+", causeId "+i+", errorCode - "+o+", time taken is "+c;n.logger.error(d),e.appendEventData({message1:d});var m=JSON.stringify(s.commandDetails);s.isRetry=!0;var l=s.endpoint.getEndpointId(),p=n.getIBTTransportEndpoint(l,!0);s.endpoint=p;var v=n.transportDependencyProviderService.utilityService.generateUUID();return s.causeId=v,n.activeOutgoingCommands.delete(i),n.activeOutgoingCommands.set(v,s),s.commandResponseListener&&s.commandResponseListener.dispose(),s.commandResponseListener=n.createBTTOutgoingCommandListener(e),n.logger.error("First attempt for command failed. Retry-ing command "+s.name+", causeId "+i+" with new causeid "+v),void p.sendCommand(s.causeId,s.name,m,s.commandResponseListener)}s.acknowledgementReceived=!0;var g=r?JSON.parse(r):"";(r=g.phrase||""+g.subCode||"")||(r="errorCode is "+o);var u={requestCauseId:i,statusCode:o,errorDetails:r,salt:[-1]};s.onResponseReceived.reject(u);var h=n.cleanupOutgoingCommand(i),C="Failed on second attempt. received error response for outgoing command name - "+s.name+", causeId "+i+", errorCode - "+o+", time taken is "+h;n.logger.error(C),e.fail({message:C})}else{var f=t.causeId?t.causeId:"causeID not present";n.logger.error("No valid outgoing command in request-succeeded. causeId - "+f),e.fail({message:"No valid outgoing command in request-succeeded. causeId - "+f})}}),t},e.prototype.getIBTTransportEndpoint=function(e,n){if(void 0===n&&(n=!1),!e){this.logger.info("endpoint id is not given, trying to get it from pairedAndActive Endpoint");var t=this.transportDependencyProviderService.getPairedAndActiveEndpoint();if(!t)return this.logger.error("There is no active paired device to send the command."),null;e=t.endPointId}this.logger.info("trying to get endpoint from transport user for endpointid - "+e);var i;return n?(i=this.transportUser.discover().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using discover(). "+!!i)):(i=this.transportUser.getEndpoints().find(function(n){return n.getEndpointId()===e}),this.logger.info("endpoints retrieved using getEndpoints(). "+!!i)),i},e.prototype.getScenarioNameForIncomingCommand=function(e){switch(e){case teamspace.services.IncomingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.response;case teamspace.services.IncomingCommand.Broadcast:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.broadcast;case teamspace.services.IncomingCommand.Pair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.pair;case teamspace.services.IncomingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unpair;case teamspace.services.IncomingCommand.Autopair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.autoPair;case teamspace.services.IncomingCommand.Locked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingLock;case teamspace.services.IncomingCommand.Unlocked:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.incomingUnlock;case teamspace.services.IncomingCommand.ReplyOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.replyFromDesktop;case teamspace.services.IncomingCommand.OpenFileOnDesktop:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openFile;case teamspace.services.IncomingCommand.UpdateEndpoint:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.updateEndpoint;case teamspace.services.IncomingCommand.OpenShare:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.openShare;case teamspace.services.IncomingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startcall;case teamspace.services.IncomingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.endcall;case teamspace.services.IncomingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.mute;case teamspace.services.IncomingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unmute;case teamspace.services.IncomingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startvideo;case teamspace.services.IncomingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopvideo;case teamspace.services.IncomingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.startaudio;case teamspace.services.IncomingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.stopaudio;case teamspace.services.IncomingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.holdcall;case teamspace.services.IncomingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.unholdcall;case teamspace.services.IncomingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.incomingCommand.invalidCommand}},e.prototype.getScenarioNameForOutgoingCommand=function(e){switch(e){case teamspace.services.OutgoingCommand.Response:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.response;case teamspace.services.OutgoingCommand.KeepAlive:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.keepAlive;case teamspace.services.OutgoingCommand.Unpair:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unpair;case teamspace.services.OutgoingCommand.Lock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingLock;case teamspace.services.OutgoingCommand.Unlock:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.outgoingUnlock;case teamspace.services.OutgoingCommand.StartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startcall;case teamspace.services.OutgoingCommand.CreateAndStartCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.createandstartcall;case teamspace.services.OutgoingCommand.EndCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.endcall;case teamspace.services.OutgoingCommand.Mute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.mute;case teamspace.services.OutgoingCommand.Unmute:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unmute;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.StartVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startvideo;case teamspace.services.OutgoingCommand.StopVideo:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopvideo;case teamspace.services.OutgoingCommand.StartAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.startaudio;case teamspace.services.OutgoingCommand.StopAudio:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.stopaudio;case teamspace.services.OutgoingCommand.HoldCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.holdcall;case teamspace.services.OutgoingCommand.UnholdCall:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.unholdcall;case teamspace.services.OutgoingCommand.ReportProblem:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.reportProblem;default:return this.transportDependencyProviderService.constants.scenarios.betterTogether.outgoingCommand.invalidCommand}},e}();n.TransportCommandRouter=s},2376:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t(2377),o=t(2378),r=t(2379),s=t(2380),a=t(2381),c=t(2382),d=t(2383),m=t(2384),l=t(2385),p=t(2386),v=t(2387),g=t(2388),u=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("IncomingCommandFactory")}return e.prototype.createCommand=function(e,n){var t=e.command.toLowerCase(),u=JSON.parse(e.commandDetails),h=e.endpointId;if(!this.shouldCreateCommand(t,u,n))return null;switch(t){case teamspace.services.IncomingCommand.Broadcast:return new i.BroadcastCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Pair:return new o.PairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Unpair:return new r.UnpairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Autopair:return new s.AutopairCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Locked:return new a.LockedCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.Unlocked:return new c.UnlockedCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.ReplyOnDesktop:return new d.ReplyFromDesktopCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.OpenFileOnDesktop:return new m.OpenFileCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.UpdateEndpoint:return new l.UpdateEndpointCommand(u,h,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.OpenShare:return new p.OpenShareCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.StartCall:return new v.StartCallCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.EndCall:return new v.EndCallCommand(u,this.transportDependencyProviderService,n);case teamspace.services.IncomingCommand.StartAudio:case teamspace.services.IncomingCommand.StopAudio:case teamspace.services.IncomingCommand.Mute:case teamspace.services.IncomingCommand.Unmute:case teamspace.services.IncomingCommand.StartVideo:case teamspace.services.IncomingCommand.StopVideo:case teamspace.services.IncomingCommand.HoldCall:case teamspace.services.IncomingCommand.UnholdCall:return new v.BaseCallToggleStateCommand(u,this.transportDependencyProviderService,t,n);case teamspace.services.IncomingCommand.ReportProblem:return new g.ReportProblemIncomingCommand(u,this.transportDependencyProviderService,n);default:return n.fail({message:"Incoming Command not created for "+e.command+". Command not compatible or implemented"}),null}},e.prototype.shouldCreateCommand=function(e,n,t){var i=this.transportDependencyProviderService.getTransportConnectionHandler();if(!(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.ReportProblem||i.verifySalt(n))){s="Salt is not valid";return this.logger.error(s),t.stop({message:s}),!1}var o=i.getConnectedDevice();if(e===teamspace.services.IncomingCommand.Broadcast||e===teamspace.services.IncomingCommand.Autopair||e===teamspace.services.IncomingCommand.Pair||e===teamspace.services.IncomingCommand.Unpair||e===teamspace.services.IncomingCommand.Locked||e===teamspace.services.IncomingCommand.Unlocked||e===teamspace.services.IncomingCommand.UpdateEndpoint||e===teamspace.services.IncomingCommand.ReportProblem||o){var r=this.meetingsAllowed(e,n);if(r.result)return!0;s="Cannot execute meetings/calling related command with name - "+e+", "+r.message;this.logger.error(s),t.stop({message:s})}else{var s="Cannot execute command with name - "+e;this.logger.error(s),t.fail({message:s})}return!1},e.prototype.meetingsAllowed=function(e,n){var t=n;return e===teamspace.services.IncomingCommand.StartCall||e===teamspace.services.IncomingCommand.EndCall||e===teamspace.services.IncomingCommand.StartAudio||e===teamspace.services.IncomingCommand.StopAudio||e===teamspace.services.IncomingCommand.Mute||e===teamspace.services.IncomingCommand.Unmute||e===teamspace.services.IncomingCommand.StartVideo||e===teamspace.services.IncomingCommand.StopVideo||e===teamspace.services.IncomingCommand.HoldCall||e===teamspace.services.IncomingCommand.UnholdCall?t.conversationId?this.transportDependencyProviderService.isConnectedToTransportEndpointForConversation(t.conversationId):{result:!1,message:"conversationId is null"}:{result:!0,message:""}},e}();n.IncomingCommandFactory=u},2377:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.resources,r=n.$translate;this.responseDeferred=t.defer();var s=this.transportDependencyProviderService.getTransportConnectionHandler();return s.checkProximity(this.endpointId).promise.then(function(n){if(n){var t=window.desktopEnvironment&&window.desktopEnvironment.hostname?window.desktopEnvironment.hostname:r.instant(o.strings.meeting_unknown_status_text),a=i({deviceName:t},s.getResponseDetails());e.incomingCommandReceivedScenario.stop({message:"device in proximity,resolving response"}),e.responseDeferred.resolve(a)}else{a=i({errorDetails:"Companion device is not in proximity."},s.getResponseDetails());e.incomingCommandReceivedScenario.stop({message:a.errorDetails}),e.responseDeferred.reject(a)}}).catch(function(n){var t=i({errorDetails:n},s.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:t.errorDetails}),e.responseDeferred.reject(t)}),this.responseDeferred},e}();n.BroadcastCommand=o},2378:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,i=n.$translate,o=n.resources,r=n.dialogService;this.responseDeferred=t.defer();var s=!1,a={okButtonText:i.instant(o.strings.better_together_pair_button),closeButtonText:i.instant(o.strings.better_together_cancel_button),confirmMessageTitle:i.instant(o.strings.better_together_pair_title),confirmMessageHtmlBody:i.instant(o.strings.better_together_pair_message,{deviceName:this.commandDetails.deviceName}),callback:function(){s=!0,e.onUserResponse(!0)},preCloseCallback:function(){s||e.onUserResponse(!1)}};return r.open(this.transportDependencyProviderService.constants.dialogs.confirmDialog,a),this.responseDeferred},e.prototype.onUserResponse=function(e,n){var t=this.transportDependencyProviderService.getTransportConnectionHandler(),o=i({accepted:e},t.getResponseDetails());if(e){var r={endPointId:this.endpointId,deviceName:this.commandDetails.deviceName,connectionStatus:teamspace.services.PairedConnectionStatus.Connected,clientType:this.commandDetails.clientType||"",clientVersion:this.commandDetails.clientVersion||""};this.incomingCommandReceivedScenario.stop({message:r.endPointId+", "+r.clientType+", "+r.clientVersion}),t.onNewDevicePaired(r),this.responseDeferred.resolve(o)}else o.accepted=!1,o.errorDetails="Pair rejected by the user",this.incomingCommandReceivedScenario.stop({message:o.errorDetails}),this.responseDeferred.reject(o)},e}();n.PairCommand=o},2379:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onDeviceUnpaired(this.endPointId)?(this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(t)):(t=i({errorDetails:"device is not in the list of paired devices."},t),this.incomingCommandReceivedScenario.fail({message:t.errorDetails}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UnpairCommand=o},2380:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endpointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i,this.commandDetails=e}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService.$q;this.responseDeferred=n.defer();var t=this.transportDependencyProviderService.getTransportConnectionHandler();return t.checkProximity(this.endpointId).promise.then(function(n){if(n)if(t.reconnect(e.endpointId,!1))e.incomingCommandReceivedScenario.stop({message:"reconnected to Companion device."}),e.responseDeferred.resolve(t.getResponseDetails());else{o=i({errorDetails:"Autopairing not successful from desktop client"},t.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:o.errorDetails}),e.responseDeferred.reject(o)}else{var o=i({errorDetails:"Companion device not in proximity"},t.getResponseDetails());e.incomingCommandReceivedScenario.stop({message:o.errorDetails}),e.responseDeferred.reject(o)}}).catch(function(n){var o=i({errorDetails:n},t.getResponseDetails());e.incomingCommandReceivedScenario.fail({message:o.errorDetails}),e.responseDeferred.reject(o)}),this.responseDeferred},e}();n.AutopairCommand=o},2381:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return this.commandDetails.reason&&this.transportDependencyProviderService.settingsService.valueAsBoolean(this.transportDependencyProviderService.constants.settings.names.enableBetterTogetherUnlockonAppSuspend)&&this.commandDetails.reason!==teamspace.services.IncomingLockUnlockReason.USER_TRIGGERED?n.getConnectedDevice().endPointId===this.endPointId&&this.commandDetails.reason===teamspace.services.IncomingLockUnlockReason.TIMEOUT?(n.onProximityLost(),this.incomingCommandReceivedScenario.stop({message:this.commandDetails.reason}),this.responseDeferred.resolve(t)):(this.incomingCommandReceivedScenario.stop({message:this.commandDetails.reason}),this.responseDeferred.resolve(t)):n.onDeviceLocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({message:this.commandDetails.reason||""}),this.responseDeferred.resolve(t)):(t=i({errorDetails:"device not locked, endpoint is not in connected mode "+(this.commandDetails.reason||"")+". "},t),this.incomingCommandReceivedScenario.fail({message:t.errorDetails}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.LockedCommand=o},2382:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onDeviceUnlocked(this.endPointId)?(this.incomingCommandReceivedScenario.stop({message:this.commandDetails.reason||""}),this.responseDeferred.resolve(t)):(t=i({errorDetails:"device not unlocked, endpoint is not in connected mode"},t),this.incomingCommandReceivedScenario.fail({message:t.errorDetails}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UnlockedCommand=o},2383:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,i=n.callingNavigationService,o=n.channelService,r=n.multiWindowService,s=n.settingsService,a=n.constants;this.responseDeferred=t.defer();var c=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();if(this.commandDetails.conversationId){var d=void 0;s.valueAsBoolean(a.settings.names.enableBetterTogetherChannelMeetings)||(d=o.getChannelByObjectId(this.commandDetails.conversationId)),r.enabled&&!d?r.openWindow(new teamspace.services.ChatChildWindowParams(this.commandDetails.conversationId),"ReplyFromDesktopCommand").then(function(n){e.incomingCommandReceivedScenario.stop({message:"opened in multi-window,resolving response"}),e.responseDeferred.resolve(c)}).catch(function(n){c.errorDetails=n,e.incomingCommandReceivedScenario.fail({message:"error in opening new window with details - "+n}),e.responseDeferred.reject(c)}):i.navigateToConversation(this.commandDetails.conversationId,this.commandDetails.rootMessageId).then(function(n){e.incomingCommandReceivedScenario.stop({message:"navigated to conversation,resolving response"}),e.responseDeferred.resolve(c)}).catch(function(n){c.errorDetails=n,e.incomingCommandReceivedScenario.fail({message:"error in navigating to conversation with details - "+n}),e.responseDeferred.reject(c)})}else c.errorDetails="conversationId is empty",this.incomingCommandReceivedScenario.fail({reason:c.errorDetails}),this.responseDeferred.reject(c);return this.responseDeferred},e}();n.ReplyFromDesktopCommand=i},2384:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,i=n.deepLinkService;this.responseDeferred=t.defer();var o=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();return this.commandDetails.objectUrl&&this.commandDetails.fileId?i.resolveFileDeepLink(this.commandDetails).then(function(){e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve(o)}).catch(function(n){o.errorDetails="deepLinkService rejected the promise",e.incomingCommandReceivedScenario.fail({message:o.errorDetails}),e.responseDeferred.reject(o)}):(o.errorDetails="ObjectUrl is empty - "+!this.commandDetails.objectUrl+" or fileId is empty - "+!this.commandDetails.fileId,this.incomingCommandReceivedScenario.fail({message:o.errorDetails}),this.responseDeferred.reject(o)),this.responseDeferred},e}();n.OpenFileCommand=i},2385:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t,i){this.commandDetails=e,this.endPointId=n,this.transportDependencyProviderService=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this.transportDependencyProviderService.$q;this.responseDeferred=e.defer();var n=this.transportDependencyProviderService.getTransportConnectionHandler(),t=n.getResponseDetails();return n.onUpdateEndpoint(this.commandDetails.previousEndpointId,this.endPointId)?(this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve(t)):(t=i({errorDetails:"endpoint not changed, companion device with previousEndpoint is not in list of paired devices."},t),this.incomingCommandReceivedScenario.fail({message:t.errorDetails}),this.responseDeferred.reject(t)),this.responseDeferred},e}();n.UpdateEndpointCommand=o},2386:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this.transportDependencyProviderService,n=e.$q,t=e.eventingService;this.responseDeferred=n.defer();var o={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl};if(this.transportDependencyProviderService.getTransportCallKeeper().isCallActiveOnTransport(o)){s=this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails();t.$emit(this.transportDependencyProviderService.constants.events.calling.openSharingPanel),this.responseDeferred.resolve(s),this.incomingCommandReceivedScenario.stop()}else{var r="OpenShareCommand failed - Call not found with conversationId "+o.conversationId,s=i({errorDetails:r},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(s),this.incomingCommandReceivedScenario.fail({message:r})}return this.responseDeferred},e}();n.OpenShareCommand=o},2387:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId){var r="Call id or conversation id is undefined";this.transportDependencyProviderService.loggingService.error(r),this.incomingCommandReceivedScenario.fail({message:r});p=i({errorDetails:r},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(p)}var s={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl},a=this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(s),c=o.getAllCalls();if(!c||0===c.length){if(a&&this.transportDependencyProviderService.$injector.get("conversationsService").getCallingConversation(this.commandDetails.conversationId).isChat())this.transportDependencyProviderService.loggingService.info("End call succeeded for P2P call"),this.incomingCommandReceivedScenario.stop(),this.responseDeferred.resolve();else{l="No active calls";this.transportDependencyProviderService.loggingService.error(l),this.incomingCommandReceivedScenario.fail({message:l});p=i({errorDetails:l},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(p)}return this.responseDeferred}var d=c.filter(function(e){return e.conversationId===s.conversationId&&(!s.messageId||"0"==s.messageId||e.messageId==s.messageId)});if(d&&d.length>0){var m=d[0];o.leaveCall(m,"EndCallCommand").then(function(){e.transportDependencyProviderService.loggingService.info("End call succeeded"),e.incomingCommandReceivedScenario.stop(),e.responseDeferred.resolve()}).catch(function(n){var t="Endcall failed with error "+n;e.transportDependencyProviderService.loggingService.error(t),e.incomingCommandReceivedScenario.fail({message:t});var o=i({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.reject(o)})}else{var l="No call with callid "+this.commandDetails.callId;this.transportDependencyProviderService.loggingService.error(l),this.incomingCommandReceivedScenario.fail({message:l});var p=i({errorDetails:l},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(p)}return this.responseDeferred},e}();n.EndCallCommand=o;var r=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t,this.logger=n.loggingService.newLogger("TransportCallingIncomingCommands")}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId){var r="Call id or conversation id is undefined";this.transportDependencyProviderService.loggingService.error(r),this.incomingCommandReceivedScenario.fail({message:r});var s=i({errorDetails:r},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(s)}var a={isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},c={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl,callState:a},d=this.transportDependencyProviderService.getTransportCallKeeper();if(d.isCallActiveOnTransport(c)){this.logger.info("StartCallCommand CallId: "+this.commandDetails.callId+" is ActiveOnTransport mode");var m="call is alread active on transport companion device";this.transportDependencyProviderService.loggingService.info(m),this.incomingCommandReceivedScenario.stop({message:m});var l=d.getTransportCallWithDetails(c),p=i({callId:l.callId,conversationId:l.conversationId,messageId:l.messageId,isBroadcast:!1,startCallOptions:{isMicMuted:l.callState.isMicMuted,isSpeakerMuted:l.callState.isSpeakerMuted,withVideo:l.callState.isVideoOn}},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.resolve(p)}else d.ringingCallResolved(c).then(function(){var n=o.getActiveCall();if(!n||n.conversationId!==c.conversationId||c.messageId&&"0"!=c.messageId&&c.messageId!=n.messageId){e.logger.info("StartCallCommand CallId: "+e.commandDetails.callId+" not active. Start new call"),e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(c);var r={conversationId:e.commandDetails.conversationId,startCallScenarioPromise:t.resolve(null),secondaryScenarios:[],withVideo:e.commandDetails.startCallOptions.withVideo,muted:e.commandDetails.startCallOptions.isMicMuted,callId:e.commandDetails.callId};o.startCall(r).then(function(n){e.transportDependencyProviderService.loggingService.info("Start call succeeded"),e.incomingCommandReceivedScenario.stop({message:"Start call succeeded"}),e.responseDeferred.resolve()}).catch(function(n){var t="Start call failed with error "+n;e.transportDependencyProviderService.loggingService.error(t),e.incomingCommandReceivedScenario.fail({message:t});var o=i({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.reject(o)})}else{e.logger.info("StartCallCommand  CallId: "+e.commandDetails.callId+" upgrade existing call to BT mode"),c.callState.isMicMuted=n.isMuted,c.callState.isSpeakerMuted=n.isSpeakerMuted,c.callState.isVideoOn=n.isVideoOn,c.callState.isCallOnHold=!1,e.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(c);var s=i({callId:n.callId,conversationId:n.conversationId,messageId:n.messageId,isBroadcast:!1,startCallOptions:{isMicMuted:n.isMuted,isSpeakerMuted:n.isSpeakerMuted,withVideo:n.isVideoOn}},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());n.stopVideo(n.getTag()).then(function(){return n.muteSpeaker()}).then(function(){return n.mute()}).then(function(){n.initForTransportCompanion(),n.setupSlimCorePropsToTransportState(),e.responseDeferred.resolve(s)}).catch(function(n){var t="Error changing call settings to BTmode "+n;e.transportDependencyProviderService.loggingService.error(t),e.incomingCommandReceivedScenario.fail({message:t});var o=i({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.reject(o)})}});return this.responseDeferred},e}();n.StartCallCommand=r;var s=function(){function e(e,n,t,i){this.commandDetails=e,this.transportDependencyProviderService=n,this.commandName=t,this.incomingCommandReceivedScenario=i}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,o=n.callingService;if(this.responseDeferred=t.defer(),!this.commandDetails.callId||!this.commandDetails.conversationId){var r="Call id or conversation id is undefined";this.transportDependencyProviderService.loggingService.error(r),this.incomingCommandReceivedScenario.fail({message:r});u=i({errorDetails:r},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(u)}var s,a={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl},c=o.getAllCalls(!1,!1,!1),d=c?c.filter(function(e){return e.conversationId===a.conversationId&&(!a.messageId||"0"==a.messageId||e.messageId==a.messageId)}):void 0,m=this.transportDependencyProviderService.getTransportCallKeeper().getCallStateForCall(a);if(d&&d.length>0){var l=d[0],p=!!l.intentId,v=p?3:1;switch(this.commandName){case teamspace.services.IncomingCommand.StopAudio:m.isSpeakerMuted=!0,m.isMicMuted=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(l,v,1,null,p);break;case teamspace.services.IncomingCommand.Mute:m.isMicMuted=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(l,v,1,null,p);break;case teamspace.services.IncomingCommand.StartAudio:m.isSpeakerMuted=!1,m.isMicMuted=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(l,v,2,null,p);break;case teamspace.services.IncomingCommand.Unmute:m.isMicMuted=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleMuteAudio(l,v,2,null,p);break;case teamspace.services.IncomingCommand.StartVideo:m.isVideoOn=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleVideo(l,"Companion device",!0);break;case teamspace.services.IncomingCommand.StopVideo:m.isVideoOn=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleVideo(l,"Companion device",!1);break;case teamspace.services.IncomingCommand.HoldCall:m.isCallOnHold=!0,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleHold(l,"Companion device",1);break;case teamspace.services.IncomingCommand.UnholdCall:m.isCallOnHold=!1,this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(a,m),s=this.transportDependencyProviderService.callTogglingService.toggleHold(l,"Companion device",2)}}else{var g="Command "+this.commandName+" failed - Call not found with conversationId "+a.conversationId;this.transportDependencyProviderService.loggingService.error(g),this.incomingCommandReceivedScenario.fail({message:g});var u=i({errorDetails:g},this.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());this.responseDeferred.reject(u)}return s&&s.then(function(){e.incomingCommandReceivedScenario.stop(),e.transportDependencyProviderService.$timeout(function(){return e.responseDeferred.resolve(null)},0)}).catch(function(n){var t="Command "+e.commandName+" failed with error "+n;e.transportDependencyProviderService.loggingService.error(t),e.incomingCommandReceivedScenario.fail({message:t});var o=i({errorDetails:t},e.transportDependencyProviderService.getTransportConnectionHandler().getResponseDetails());e.responseDeferred.reject(o)}),this.responseDeferred},e}();n.BaseCallToggleStateCommand=s},2388:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t){this.commandDetails=e,this.transportDependencyProviderService=n,this.incomingCommandReceivedScenario=t}return e.prototype.action=function(){var e=this,n=this.transportDependencyProviderService,t=n.$q,i=n.constants,o=n.settingsService,r=this.transportDependencyProviderService.getTransportConnectionHandler(),s=this.transportDependencyProviderService.getBrbV2FeedbackService(),a=t.defer(),c=r.getResponseDetails();if(!o.valueAsBoolean(i.settings.names.enableBetterTogetherReportProblemSynching)){d="Error: Report Problem Synching not activated in settings. Please set enableBetterTogetherReportProblemSynching to true.";return c.errorDetails=d,this.incomingCommandReceivedScenario.fail({message:c.errorDetails}),a.reject(c),a}if(!s){var d="Error: brbV2FeedbackService is not loaded. Unable to sync up logs.";return c.errorDetails=d,a.reject(c),this.incomingCommandReceivedScenario.fail({message:d}),a}return s.extendFeedbackReport(this.commandDetails.brbContainerId,{category:"Better Together",title:"Addition of logfiles by laptop for Better Together problem report",description:"Addition of logfiles for endpointId "+this.commandDetails.targetEndpointId},!0).then(function(){e.incomingCommandReceivedScenario.stop(),a.resolve(c)}).catch(function(n){e.incomingCommandReceivedScenario.fail({message:n}),c.errorDetails=n,a.reject(c)}),a},e}();n.ReportProblemIncomingCommand=i},2389:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t(2390),o=t(2391),r=t(2392),s=t(2393),a=t(2394),c=t(2395),d=t(2396),m=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("OutgoingCommandFactory")}return e.prototype.generateCauseId=function(){return this.transportDependencyProviderService.utilityService.generateUUID()},e.prototype.createCommand=function(e,n,t,m){var l;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked)&&e!=teamspace.services.OutgoingCommand.Lock)return this.logger.error("Machine is in locked state. Outgoing command with name - "+e+" will not be created."),m.fail({message:"Machine is in locked state. Outgoing command with name - "+e+" will not be created."}),null;e=e.toLowerCase();var p=this.generateCauseId();switch(e){case teamspace.services.OutgoingCommand.Response:l=new i.ResponseCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.KeepAlive:l=new o.KeepAliveCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Lock:l=new r.LockCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Unlock:l=new s.UnlockCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Unpair:l=new a.UnpairCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.StartCall:l=new c.StartCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.CreateAndStartCall:l=new c.CreateAndStartCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.EndCall:l=new c.EndCallOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.Mute:case teamspace.services.OutgoingCommand.Unmute:case teamspace.services.OutgoingCommand.StartAudio:case teamspace.services.OutgoingCommand.StopAudio:case teamspace.services.OutgoingCommand.StartVideo:case teamspace.services.OutgoingCommand.StopVideo:case teamspace.services.OutgoingCommand.HoldCall:case teamspace.services.OutgoingCommand.UnholdCall:l=new c.BaseCallCommand(p,t,n,this.transportDependencyProviderService,m);break;case teamspace.services.OutgoingCommand.ReportProblem:l=new d.ReportProblemOutgoingCommand(p,t,n,this.transportDependencyProviderService,m);break;default:return m.fail({message:"Outgoing Command not created for "+l+". Command not compatible or implemented"}),null}return l.name=e,l.startTime=new Date,l.isRetry=!1,l.acknowledgementReceived=!1,l},e}();n.OutgoingCommandFactory=m},2390:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var r=i.$q;this.onResponseReceived=r.defer(),this.onCommandReadyToSend=r.defer(),this.onCommandReadyToSend.resolve(!0);var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n="";n=e?"command failed, Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:n})}},e}();n.ResponseCommand=i},2391:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0;var r=i.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=r.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=r.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n="";n=e?"KeepAlive command failed, Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:n})}},e}();n.KeepAliveCommand=i},2392:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceLocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device locked"),this.sendOutgoingCommandScenario.stop();else{var n="";n=e?"Lock command failed, Error response: "+e.errorDetails:"NULL response received",this.transportDependencyProviderService.loggingService.error(n),this.sendOutgoingCommandScenario.fail({message:n})}},e}();n.LockCommand=i},2393:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.getTransportConnectionHandler().onDeviceUnlocked(this.endpoint.getEndpointId()),this.transportDependencyProviderService.loggingService.info("companion device unlocked"),this.sendOutgoingCommandScenario.stop();else{var n="";n=e?"Unlock command failed, Error response: "+e.errorDetails:"NULL response received",this.transportDependencyProviderService.loggingService.error(n),this.sendOutgoingCommandScenario.fail({message:n})}},e}();n.UnlockCommand=i},2394:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var r=i.$q;this.onResponseReceived=r.defer();var s=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=r.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop();else{var n="unpair command failed for endpoint : "+this.endpoint.getEndpointId();this.sendOutgoingCommandScenario.fail({message:n}),this.transportDependencyProviderService.loggingService.error(n)}},e}();n.UnpairCommand=i},2395:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.sendOutgoingCommandScenario.stop({message:"Completed command "+this.name+" for call id "+this.commandDetails.callId});else{var n="";n=e?this.name+" command failed for call id "+this.commandDetails.callId+", Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:n}),this.transportDependencyProviderService.loggingService.error(n)}},e}();n.BaseCallCommand=i;var o=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r),this.logger=i.loggingService.newLogger("TransportStartCallOutgoingCommand")}return e.prototype.onCommandExecuted=function(e){var n=this;if(e&&!e.errorDetails){var t={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1},i={callId:this.commandDetails.callId,conversationId:e.conversationId,messageId:e.messageId,conversationUrl:e.conversationUrl,callState:t};this.commandDetails.isP2PCall?this.transportDependencyProviderService.getTransportCallKeeper().ringingCallResolved(i).then(function(){n.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(i);var o={conversationId:e.conversationId,startCallScenarioPromise:n.transportDependencyProviderService.$q.resolve(null),secondaryScenarios:[],withVideo:t.isVideoOn,muted:t.isSpeakerMuted,callId:n.commandDetails.callId};n.transportDependencyProviderService.callingService.startCall(o).then(function(e){n.logger.info("StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" is successful"),n.sendOutgoingCommandScenario.stop({message:"StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" is successful"})}).catch(function(e){n.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(i),n.logger.info("StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" failed with error - "+e),n.sendOutgoingCommandScenario.fail({message:"StartCallCommand for a P2P call CallId: "+n.commandDetails.callId+" failed with error - "+e})})}):(this.logger.info("StartCallCommand for other calls CallId: "+this.commandDetails.callId+". Start new call"),this.transportDependencyProviderService.getTransportCallKeeper().addActiveCall(i),this.sendOutgoingCommandScenario.stop({message:"Other Calls with callid started on companion device "+this.commandDetails.callId}))}else{var o="";o=e?"Start call command failed, Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:o}),this.transportDependencyProviderService.loggingService.error(o)}},e}();n.StartCallOutgoingCommand=o;var r=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r),this.logger=i.loggingService.newLogger("TransportCreateAndStartCallOutgoingCommand");var s={isMicMuted:t.startCallOptions.isMicMuted,isVideoOn:t.startCallOptions.withVideo,isSpeakerMuted:t.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.activeCall={callId:t.callId,conversationId:t.conversationId,messageId:t.messageId,conversationUrl:t.conversationUrl,callState:s},i.getTransportCallKeeper().addActiveCall(this.activeCall)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)if(e.callFailureReason)this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall),this.logger.error("call failed on transport companion device callid "+this.commandDetails.callId+" with reason "+e.callFailureReason),this.sendOutgoingCommandScenario.stop({message:"call failed on transport companion device callid "+this.commandDetails.callId+" with reason "+e.callFailureReason});else{var n={isMicMuted:e.startCallOptions?e.startCallOptions.isMicMuted:this.commandDetails.startCallOptions.isMicMuted,isVideoOn:e.startCallOptions?e.startCallOptions.withVideo:this.commandDetails.startCallOptions.withVideo,isSpeakerMuted:e.startCallOptions?e.startCallOptions.isSpeakerMuted:this.commandDetails.startCallOptions.isSpeakerMuted,isCallOnHold:!1};this.transportDependencyProviderService.getTransportCallKeeper().setCallStateForCall(this.activeCall,n),this.logger.info("Call with callid started on companion device "+this.commandDetails.callId),this.sendOutgoingCommandScenario.stop({message:"Call with callid started on companion device "+this.commandDetails.callId})}else{this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(this.activeCall);var t="";t=e?"Start call command failed, Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:t}),this.transportDependencyProviderService.loggingService.error(t)}},e}();n.CreateAndStartCallOutgoingCommand=r;var s=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!0,this.onResponseReceived=i.$q.defer(),this.onCommandReadyToSend=i.$q.defer(),this.onCommandReadyToSend.resolve(!0);var r=this.onCommandExecuted.bind(this);this.onResponseReceived.promise.then(r).catch(r)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails){var n={callId:this.commandDetails.callId,conversationId:this.commandDetails.conversationId,messageId:this.commandDetails.messageId,conversationUrl:this.commandDetails.conversationUrl};this.transportDependencyProviderService.getTransportCallKeeper().removeActiveCall(n),this.sendOutgoingCommandScenario.stop({message:"Call with callid stopped on companion device "+this.commandDetails.callId})}else{var t="";t=e?"End call command failed, Error response: "+e.errorDetails:"NULL response received",this.sendOutgoingCommandScenario.fail({message:t}),this.transportDependencyProviderService.loggingService.error(t)}},e}();n.EndCallOutgoingCommand=s},2396:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t,i,o){this.causeId=e,this.endpoint=n,this.commandDetails=t,this.transportDependencyProviderService=i,this.sendOutgoingCommandScenario=o,t.companionResponseRequired=!1;var r=i.$q,s=this.onCommandExecuted.bind(this);this.onResponseReceived=r.defer(),this.onResponseReceived.promise.then(s).catch(s),this.onCommandReadyToSend=r.defer(),this.onCommandReadyToSend.resolve(!0)}return e.prototype.onCommandExecuted=function(e){if(e&&!e.errorDetails)this.transportDependencyProviderService.loggingService.info("Outgoing report problem command for brbContainerId "+this.commandDetails.brbContainerId+" successful for endpoint: "+this.endpoint.getEndpointId()+"."),this.sendOutgoingCommandScenario.stop();else{var n=e&&e.errorDetails?e.errorDetails:"<No message>",t="Outgoing report problem command for brbContainerId "+this.commandDetails.brbContainerId+" failed for endpoint: "+this.endpoint.getEndpointId()+". Error: "+n;this.sendOutgoingCommandScenario.fail({message:t,message1:t}),this.transportDependencyProviderService.loggingService.error(t)}},e}();n.ReportProblemOutgoingCommand=i},2397:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o;!function(e){e.InitState="InitState",e.IsScanRunning="IsScanRunning",e.LastKeepAliveSentForSession="LastKeepAliveSentForSession",e.IsSendingKeepAlives="IsSendingKeepAlives",e.HasConnectedDevices="HasConnectedDevices",e.HasPairedDevices="HasPairedDevices",e.PairedDeviceCount="PairedDeviceCount",e.IsContinousScanRunning="IsContinousScanRunning"}(o=n.TransportConnectionHandlerStates||(n.TransportConnectionHandlerStates={}));var r=function(){function e(e,n){this.transportDependencyProviderService=e,this.transportCommandRouter=n,this.keepAliveInterval=3e4,this.deviceNotFoundThreshold=15e3,this.continousScanInterval=18e3,this.currentSalt=0,this.ComponentName="TransportConnectionHandler",this.keepAliveTimer=void 0,this.logger=e.loggingService.newLogger(this.ComponentName),this.constants=e.constants,this.storageService=e.storageService,this.bluetoothLEService=e.bluetoothLEService,this.logger.info("connectionHandler object successfully created, initialization is still pending.")}return e.prototype.initializeConnectionHandler=function(){var e=this;this.logger.info("initializing states and Ipc listeners, and rehydrating previous connection."),this.setupInitialStates(),this.setupIpcForMachineState(),this.ipcRenderer?(this.ipcRenderer.once(this.constants.events.desktopApp.getLockState,function(n,t){e.logger.info("state of machine is "+t),t===e.constants.desktopApp.lockState.unlocked&&(e.logger.info("machine is in unlocked state."),e.rehydratePreviousConnection(!1,"TransportConnectionHandler is initialized"))}),this.ipcRenderer.send(this.constants.events.desktopApp.getLockState)):this.logger.error("ipcRenderer is not available"),this.states.set(o.InitState,teamspace.services.ITransportComponentState.Initialized),this.logger.info("connectionHandler successfully initialized")},e.prototype.onNewDevicePaired=function(n){this.logger.info("Caching new device paired");var t,i=this.getAllPairedDevices();i&&(t=i.filter(function(e){return e.endPointId!==n.endPointId})),i=t?t.concat(n):[n],this.storageService.set(e.BTPairedDevicesKey,i),this.storageService.set(e.LastPairedDeviceEndpointKey,n.endPointId),this.storageService.set(this.constants.storageNames.transportCompanionSelected,!0),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.setupKeepAlive(n.endPointId)},e.prototype.onDeviceUnpaired=function(n){var t=this.getAllPairedDevices();if(t){var i=t.find(function(e){return e.endPointId===n});if(i){i.connectionStatus===teamspace.services.PairedConnectionStatus.Connected&&(this.disconnect(!0,!1),this.storageService.set(e.LastPairedDeviceEndpointKey,""),this.storageService.set(e.LastSaltUpdateTimeKey,"0"));var o=t.filter(function(e){return e.endPointId!==n});return this.storageService.set(e.BTPairedDevicesKey,o),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.logger.info("Device unpaired"),!0}this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found");return!1},e.prototype.unpairDevice=function(e){var n=this.getAllPairedDevices();if(n&&n.find(function(n){return n.endPointId===e})){var t=this.getCommandDetails();this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unpair,t,e),this.onDeviceUnpaired(e)}},e.prototype.onDeviceLocked=function(n){if(!n)return this.logger.error("Cannot mark device as locked, endpointid is null"),!1;var t=this.getAllPairedDevices();if(t){var i=t.find(function(e){return e.endPointId===n});if(i)return i.connectionStatus=teamspace.services.PairedConnectionStatus.Locked,this.storageService.set(e.BTPairedDevicesKey,t),this.storageService.set(e.LastPairedDeviceEndpointKey,i.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.logger.info("Paired device status set to: locked"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("No paired devices found");return!1},e.prototype.onDeviceUnlocked=function(n){if(!n)return this.logger.error("Cannot mark device as unlocked, endpointid is null"),!1;var t=this.getAllPairedDevices();if(t){var i=t.find(function(e){return e.endPointId===n});if(i)return i.connectionStatus=teamspace.services.PairedConnectionStatus.Connected,this.storageService.set(e.BTPairedDevicesKey,t),this.storageService.set(e.LastPairedDeviceEndpointKey,i.endPointId),this.transportDependencyProviderService.setPairedDeviceInDeviceManager(),this.logger.info("Paired device status set to: unlocked and connected"),!0;this.logger.error("Device not found in list of pairedDevices")}else this.logger.error("Device unlocked but no paired devices found");return!1},e.prototype.onUpdateEndpoint=function(n,t){var i=this.getAllPairedDevices();if(i){var o=i.find(function(e){return e.endPointId===n});if(o)return o.endPointId=t,this.storageService.set(e.BTPairedDevicesKey,i),this.transportCommandRouter.endSession(n),this.transportCommandRouter.startSession(t),this.logger.info("endpoint id updated successfully. previousEndpointId - "+n+", newEndpointId - "+t),!0;this.logger.error("Device not found in list of pairedDevices. previousEndpointId - "+n+", newEndpointId - "+t)}else this.logger.error("No paired devices found. previousEndpointId - "+n+", newEndpointId - "+t);return!1},e.prototype.getConnectedDevice=function(){var e=this.getAllPairedDevices();if(e)return e.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected})},e.prototype.continousCheckProximity=function(e){var n=this;void 0===e&&(e=!1),this.continousCheckProximityInterval?this.logger.error("A continous check for proximity is already running, isReconnectCallback is - "+e):(this.continousCheckProximityDeferred=this.checkProximity(),e?this.continousCheckProximityDeferred.promise.then(this.reconnectCallback):this.continousCheckProximityDeferred.promise.catch(function(){n.logger.info("checkProximity failed, dont have a reconnectCallback function")}),this.continousCheckProximityInterval=setInterval(function(){n.continousCheckProximityDeferred=n.checkProximity(),e?n.continousCheckProximityDeferred.promise.then(n.reconnectCallback):n.continousCheckProximityDeferred.promise.catch(function(){n.logger.info("checkProximity failed, dont have a reconnectCallback function")})},this.continousScanInterval))},e.prototype.checkProximity=function(e){var n=this;this.logger.info("Attempting Proximity check");var t=this.transportDependencyProviderService.$q,i=t.defer(),r=this.bluetoothLEService;return this.transportDependencyProviderService.canInitializeTransport()?(teamspace.services.QCancelable.toCancelablePromise(t,r.onceInitialized()).then(function(){if(!r.isBLEsupported||!r.isBluetoothRadioOn){var t="Bluetooth scan was not started. BLE might not be supported";return n.logger.error(t),i.reject(t),i}n.logger.info("Scan started for better together companion devices."),n.states.set(o.IsScanRunning,!0);var s,a=setTimeout(function(){r.unsubscribe(s),n.logger.log("Unsubscribed for blehandle "+s+" due to timeout."),i.resolve(!1),n.logger.error("Timeout reached. Device not found. Scan stopped"),n.states.set(o.IsScanRunning,!1)},n.deviceNotFoundThreshold);s=r.subscribe(function(t,o){n.onCompanionDevicesFound(o,i,s,a,e)},n.constants.events.bluetoothLE.adjacent,n.constants.events.bluetoothLE.companionDiscovery)}).catch(function(e){e="Bluetooth scan was not started. BLE might not be supported due to error - "+e.toString(),n.logger.error(e),i.reject(e),n.states.set(o.IsScanRunning,!1)}),i):(i.reject("transportation can not be initialised"),i)},e.prototype.verifySalt=function(e){return e.salt[0]===this.currentSalt||!!e.salt[1]&&e.salt[1]===this.currentSalt},e.prototype.getCommandDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getResponseDetails=function(){return{salt:[this.currentSalt]}},e.prototype.getStates=function(){var e=this.getAllPairedDevices(),n=this.getConnectedDevice();return this.states.set(o.HasConnectedDevices,!!n),this.states.set(o.HasPairedDevices,e&&e.length>0),this.states.set(o.PairedDeviceCount,e?e.length:0),this.states},e.prototype.setupInitialStates=function(){this.states=new Map,this.states.set(o.InitState,teamspace.services.ITransportComponentState.Uninitialized),this.states.set(o.IsScanRunning,!1),this.states.set(o.LastKeepAliveSentForSession,""),this.states.set(o.IsSendingKeepAlives,!1)},e.prototype.getAllPairedDevices=function(){return this.storageService.get(e.BTPairedDevicesKey)},e.prototype.rehydratePreviousConnection=function(n,t){var o=this,r=this.getAllPairedDevices();if(r&&r.length>0){this.logger.info("Rehydrating transport connection"),this.setAllPairedDevicesAsDisconnected();var s=this.storageService.get(e.LastSaltUpdateTimeKey);if((s=(new Date).getTime()-s)<6e4&&n){var a=this.storageService.get(e.LastPairedDeviceEndpointKey);this.logger.info("sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+t);var c=i({reason:"sending unlock command using quick strategy, lastSaltUpdateTime is "+s+", reason - "+t},this.getCommandDetails()),d=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,c,a);if(!d){var m="unlock command not created for quick unlock strategy, trying with long unlock strategy, reason - "+t;this.logger.error(m),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,m),this.continousCheckProximity(!0)}d.promise.then(function(){o.logger.info("Unlock succeeded with quick unlock strategy"),o.reconnect(a,!1)}).catch(function(e){var n="unlock command failed due to error - "+e+" in quick unlock strategy, reason - "+t;o.logger.error(n),o.reconnectCallback=o.findProximalDeviceAndReconnect.bind(o,n),o.continousCheckProximity(!0)})}else{var l="salt is not updated, trying to unlock by long unlock strategy, reason - "+t;this.logger.info(l),this.reconnectCallback=this.findProximalDeviceAndReconnect.bind(this,l),this.continousCheckProximity(!0)}}},e.prototype.onCompanionDevicesFound=function(e,n,t,i,r){var s=this;if(e){var a=e.data,c=this.transportDependencyProviderService,d=c.authenticationService,m=c.utilityService;d.getUserInformation().then(function(e){var c=m.packetGUID2String(a),d=!1,l=s.getAllPairedDevices();if(r){v=m.convertGUIDString2Uint8Array(r);a[19]===v[15]&&a[20]===v[14]&&(d=!0)}else if(l&&l.length>0)for(var p=0;p<l.length;p++){var v=m.convertGUIDString2Uint8Array(l[p].endPointId);if(a[19]===v[15]&&a[20]===v[14]){d=!0;break}}e.profile.oid===c&&d&&(s.logger.info("Better together companion device found and bleHandle is "+t+". Unsubscribing now"),s.bluetoothLEService.unsubscribe(t),s.updateSalt(a),clearTimeout(i),s.states.set(o.IsScanRunning,!1),n.resolve(!0))}).catch(function(e){s.logger.error("device with incorrect authentication sent payload"+e)})}},e.prototype.findProximalDeviceAndReconnect=function(e,n){var t=this;if(n){this.logger.info("Paired device in proximity. Will attempt keep alive to all paired devices");var i=this.getAllPairedDevices(),r=this.getCommandDetails();i&&0!==i.length&&i.forEach(function(n){t.logger.info("Sending keep alive to get status from "+n.endPointId);var i=t.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,r,n.endPointId);i&&i.promise.then(function(i){t.logger.info("Keep alive successful from "+n.endPointId),t.reconnect(n.endPointId,!0,"keepAlive successful, reason - "+e),t.states.set(o.LastKeepAliveSentForSession,new Date)})})}},e.prototype.reconnect=function(e,n,t){var o=this;if(this.transportDependencyProviderService.appStateService.hasMachineState(teamspace.services.MachineState.MachineLocked))return this.logger.info("machine is in locked state, cancelling reconnect."),!1;if(this.logger.info("Reconnecting to endpoint "+e),!this.getAllPairedDevices().find(function(n){return n.endPointId===e}))return!1;var r=this.transportDependencyProviderService.$q.defer();if(n){var s=i({reason:"trying to send a unlock command from reconnect function, reason - "+t},this.getCommandDetails());r=this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Unlock,s,e)}else r.resolve();return r.promise.then(function(){o.onDeviceUnlocked(e),o.transportCommandRouter.startSession(e),o.setupKeepAlive(e),o.cleanUpContinousProximityScan()}),!0},e.prototype.disconnect=function(n,t,r){var s=this;void 0===n&&(n=!1),void 0===t&&(t=!1),this.logger.info("Disconnecting from paired device.");var a=this.getAllPairedDevices(),c=a?a.find(function(e){return e.connectionStatus===teamspace.services.PairedConnectionStatus.Connected}):void 0;if(c){if(clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.keepAliveDeferred&&this.keepAliveDeferred.reject(e.KeepAliveCancelled),this.states.set(o.IsSendingKeepAlives,!1),n)this.transportCommandRouter.endSession(c.endPointId);else{var d=i({reason:"sending lock command from disconnect function, reason - "+r},this.getCommandDetails());this.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.Lock,d).promise.finally(function(){s.transportCommandRouter.endSession(c.endPointId)})}c.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected,this.storageService.set(e.LastPairedDeviceEndpointKey,c.endPointId),this.setAllPairedDevicesAsDisconnected(),t&&this.keepScanOn()}},e.prototype.setAllPairedDevicesAsDisconnected=function(){var n=this.getAllPairedDevices();n.forEach(function(e){e.connectionStatus=teamspace.services.PairedConnectionStatus.PairedNotConnected}),this.storageService.set(e.BTPairedDevicesKey,n),this.transportDependencyProviderService.setPairedDeviceInDeviceManager()},e.prototype.onProximityLost=function(){this.logger.error("Proximity lost. Stopping keep alive and starting continous scan for autopair"),this.disconnect(!1,!1,"On proximity lost."),this.rehydratePreviousConnection(!1,"On proximity lost")},e.prototype.setupKeepAlive=function(n){var t=this;this.keepAliveTimer||(this.logger.info("Setting up keep alive"),this.states.set(o.IsSendingKeepAlives,!0),this.keepAliveTimer=setInterval(function(){t.sendKeepAlive(n).promise.catch(function(i){t.logger.error("keep alive failed for 1st time - error "+i),i!==e.KeepAliveCancelled&&t.onKeepAliveCheckFailed(n)})},this.keepAliveInterval))},e.prototype.onKeepAliveCheckFailed=function(n){var t=this;clearInterval(this.keepAliveTimer),this.keepAliveTimer=void 0,this.sendKeepAlive(n).promise.then(function(){t.setupKeepAlive(n)}).catch(function(n){n!==e.KeepAliveCancelled&&(t.logger.error("Proximity lost, KeepAlive failed 2 times."),t.onProximityLost())})},e.prototype.sendKeepAlive=function(e){var n=this,t=this.transportDependencyProviderService.$q;return this.keepAliveDeferred=t.defer(),this.logger.info("checking proximity when trying to send keepAlive command"),this.checkProximity(e).promise.then(function(t){if(t){var i=n.getCommandDetails(),r=n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.KeepAlive,i,e);n.states.set(o.LastKeepAliveSentForSession,new Date),r.promise.then(function(){n.keepAliveDeferred.resolve("keepAlive successfull")}).catch(function(e){n.logger.error("keepAlive command failed, because of error - "+e),n.keepAliveDeferred.reject("keepAlive command failed, because of error - "+e)})}else n.keepAliveDeferred.reject("checkProximity failed, device not in proximity")}).catch(function(e){n.keepAliveDeferred.reject("sending keepAlive failed with error - "+e)}),this.keepAliveDeferred},e.prototype.updateSalt=function(n){if(n.length>18){var t=n[18]<<8|n[17];if(this.currentSalt!==t){this.logger.info("Salt updated. previous salt - "+this.currentSalt+", new salt - "+t),this.currentSalt=t;var i=new Date;this.storageService.set(e.LastSaltUpdateTimeKey,i.getTime())}}},e.prototype.keepScanOn=function(){this.logger.log("Starting continous scan for keeping scan on for quick unlock strategy"),this.continousCheckProximity()},e.prototype.setupIpcForMachineState=function(){var e=this;this.ipcRenderer=window.electronSafeIpc,this.ipcRenderer&&this.transportDependencyProviderService.canInitializeTransport()?(this.ipcEventHandler=function(n,t){t===e.constants.events.desktopApp.machineLock?(e.logger.info("Got machine locked event"),e.cleanUpContinousProximityScan(),e.disconnect(!1,!0,"Got machine locked event")):t===e.constants.events.desktopApp.machineUnlock&&(e.logger.info("Got machine unlocked event"),e.cleanUpContinousProximityScan(),e.rehydratePreviousConnection(!0,"Got machine unlocked event"))},this.ipcEventHandler=this.ipcEventHandler.bind(this),this.ipcRenderer.on(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler)):this.logger.error("ipcRenderer is not defined.")},e.prototype.cleanUpConnectionHandler=function(){this.logger.info("clean up of connectionHandler has been called. disconnecting the current device and removing all listeners to ipcRenderer"),this.disconnect(!1,!1,"cleanup of connectionHandler has been called."),this.cleanUpContinousProximityScan(),this.ipcRenderer.removeListener(this.constants.events.desktopApp.machineInactiveResponse,this.ipcEventHandler),this.transportCommandRouter=void 0},e.prototype.cleanUpContinousProximityScan=function(){var e="cleaning up continousProximityScan related promise and bleHandle.";this.logger.info(e),clearInterval(this.continousCheckProximityInterval),this.continousCheckProximityDeferred&&this.continousCheckProximityDeferred.reject(e),this.continousCheckProximityInterval=void 0},e.BTPairedDevicesKey="BTPairedDevices",e.KeepAliveCancelled="keepAlive deferred cancelled in disconnect function.",e.LastSaltUpdateTimeKey="LastSaltUpdateTime",e.LastPairedDeviceEndpointKey="LastPairedDeviceEndpoint",e}();n.TransportConnectionHandler=r},2398:function(e,n,t){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var n,t=1,i=arguments.length;t<i;t++){n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,n){this.transportCommandRouter=e,this.transportConnectionHandler=n}return e.prototype.sendReportProblemId=function(e){var n=this,t=i({brbContainerId:e},this.transportConnectionHandler.getCommandDetails());this.transportConnectionHandler.getAllPairedDevices().map(function(e){n.transportCommandRouter.sendOutgoingCommand(teamspace.services.OutgoingCommand.ReportProblem,t,e.endPointId)})},e}();n.TransportAgentHandler=o},2399:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i;!function(e){e.InitState="InitState",e.ActiveCallDetails="ActiveCallDetails"}(i||(i={}));var o=function(){function e(e){this.transportDependencyProviderService=e,this.logger=e.loggingService.newLogger("TransportCallkeeper"),this.activeCompanionDeviceCalls=[],this.activeRingingCalls=[],this.states=new Map,this.logger.info("TransportCallkeeper initialized."),this.states.set(i.InitState,teamspace.services.ITransportComponentState.Initialized)}return e.prototype.ringingCallResolved=function(e){var n=this.activeRingingCalls.find(function(n){return n.transportCall.conversationId===e.conversationId&&(!e.messageId||"0"==e.messageId||n.transportCall.messageId==e.messageId)});if(n)return n.defer.promise;var t=this.transportDependencyProviderService.$q.defer();return t.resolve(),t.promise},e.prototype.addRingingCall=function(e){var n={transportCall:{conversationId:e.conversationId,messageId:e.messageId},defer:this.transportDependencyProviderService.$q.defer()};this.activeRingingCalls.push(n),this.logger.info("Added ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeRingingCall=function(e){var n=this.activeRingingCalls.find(function(n){return n.transportCall.conversationId===e.conversationId&&(!e.messageId||"0"==e.messageId||n.transportCall.messageId==e.messageId)});n&&n.defer.resolve(),this.activeRingingCalls=this.activeRingingCalls.filter(function(n){return n.transportCall.conversationId!==e.conversationId&&(!e.messageId||"0"==e.messageId||n.transportCall.messageId!=e.messageId)}),this.logger.info("Removed ringing call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.addActiveCall=function(e){this.activeCompanionDeviceCalls.push(e),this.logger.info("Added active call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.removeActiveCall=function(e){var n=this.isCallActiveOnTransport(e);return this.activeCompanionDeviceCalls=this.activeCompanionDeviceCalls.filter(function(n){return n.conversationId!==e.conversationId&&(!e.messageId||"0"==e.messageId||n.messageId!=e.messageId)}),this.logger.info("Removed call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId),n},e.prototype.isCallActiveOnTransport=function(e){return-1!==this.activeCompanionDeviceCalls.findIndex(function(n){return n.conversationId===e.conversationId&&(!e.messageId||"0"==e.messageId||n.messageId==e.messageId)})},e.prototype.getTransportCallWithDetails=function(e){return this.activeCompanionDeviceCalls.find(function(n){return n.conversationId===e.conversationId&&(!e.messageId||"0"==e.messageId||n.messageId==e.messageId)})},e.prototype.getCallStateForCall=function(e){var n=this.getTransportCallWithDetails(e);return n?n.callState:void 0},e.prototype.setCallStateForCall=function(e,n){this.activeCompanionDeviceCalls.find(function(n){return n.conversationId===e.conversationId&&(!e.messageId||"0"==e.messageId||n.messageId==e.messageId)}).callState=n,this.logger.info("Updated call state for the transport call with callId: "+e.callId+", conversationId: "+e.conversationId+", messageId: "+e.messageId)},e.prototype.cleanupCallKeeper=function(){this.activeCompanionDeviceCalls=[],this.states=void 0},e.prototype.getStates=function(){return this.states.set(i.ActiveCallDetails,JSON.stringify(this.activeCompanionDeviceCalls)),this.states},e}();n.TransportCallKeeper=o}},[2373]);